#+TITLE: Make

* one Makefile for everything :tools:make:programming:
:PROPERTIES:
:EXPORT_FILE_NAME: one-makefile-for-everything
:HUGO_BASE_DIR: ~/txt/blog/
:HUGO_SECTION: en/posts
:EXPORT_AUTHOR: savolla
:END:
here! you found it! this is one single Makefile that fits all projects with this file structure:

#+begin_src txt
project /
├── include
├── build
├── lib
├── obj
├── src
├── test
├── main.c
└── Makefile
#+end_src

#+BEGIN_SRC makefile
TARGET_EXEC ?= a.out

BUILD_DIR ?= ./build
SRC_DIRS ?= ./src

SRCS := $(shell find $(SRC_DIRS) -name *.cpp -or -name *.c -or -name *.s)
OBJS := $(SRCS:%=$(BUILD_DIR)/%.o)
DEPS := $(OBJS:.o=.d)

INC_DIRS := $(shell find $(SRC_DIRS) -type d)
INC_FLAGS := $(addprefix -I,$(INC_DIRS))

CPPFLAGS ?= $(INC_FLAGS) -MMD -MP

$(BUILD_DIR)/$(TARGET_EXEC): $(OBJS)
$(CC) $(OBJS) -o $@ $(LDFLAGS)

# assembly
$(BUILD_DIR)/%.s.o: %.s
$(MKDIR_P) $(dir $@)
$(AS) $(ASFLAGS) -c $< -o $@

# c source
$(BUILD_DIR)/%.c.o: %.c
$(MKDIR_P) $(dir $@)
$(CC) $(CPPFLAGS) $(CFLAGS) -c $< -o $@

# c++ source
$(BUILD_DIR)/%.cpp.o: %.cpp
$(MKDIR_P) $(dir $@)
$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $< -o $@


.PHONY: clean

clean:
$(RM) -r $(BUILD_DIR)

-include $(DEPS)

MKDIR_P ?= mkdir -p
#+END_SRC
* tip
- always use =TAB=
* fact
** makefile symbols

#+begin_src makefile
all: library.cpp main.cpp
#+end_src

In this case:

$@ evaluates to =all=
$< evaluates to =library.cpp=
$^ evaluates to =library.cpp= =main.cpp=

* howto
** include all headers

You need to specify the include directory

#+begin_src makefile
INCLUDE_DIR=./include

program: main.c
	g++ -I$(INCLUDE_DIR) main.c -o program
#+end_src
