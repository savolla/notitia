#+TITLE: Cpp
#+AUTHOR: savolla
#+EMAIL: savolla@protonmail.com
#+DATE: Fri Jan  8 22:02:29 2021
#+DESCRIPTION: C++ Programming Languages

* Facts
+ in C++ there is no =interface= keyword. but we can still implement intrefaces with classes
* How To
** implement interfaces in c++
1. create a class with only abstract methods with =virtual= keywords and adding ==0= to the ent of methods. and don't forget *virtual destructor*
   #+begin_src cpp
   // Shape.cpp
   class Shape {
   public:
       virtual ~Shape() = default;
       virtual double calculateArea() = 0;
   }
   #+end_src
2. now create a class that implements that interface;
   #+begin_src cpp
   // Triangle.cpp
   #include "Shape.cpp"

   class Triangle : public Shape {
   public:
       double height, floor;
       double calculateArea() {
            return (height * floor) / 2;
       }
   }
   #+end_src
3. here is how this code will look in UML;
   #+begin_src plantuml :results output
@startuml
interface Shape {
    calculateArea()
}
class Triangle {
    height : double
    floor : double
    calculateArea()
}
Triangle .up.|> Shape
@enduml
   #+end_src

   #+RESULTS:
   [[file:/tmp/babel-AKVKVd/plantuml-f7twXB.png]]
