#+TITLE: Notitia
#+AUTHOR: Oleksiy Nehlyadyuk
#+EMAIL: savolla@protonmail.com
#+DATE: Fri Nov 13 09:19:17 2020
#+LANGUAGE: en
#+STARTUP: overview
#+HUGO_BASE_DIR: ~/txt/blog/
#+HUGO_SECTION: en/posts

* Programming
** languages
*** c
**** facts
- all executable statements must be written inside a function. we do it by writing code into *main* funciton. variable assignements can be used outside of the functions
- all user defined header files must be included in *double quotes*
- you always need to pass _the size of an array_ when using arrays in functions
- every compiler has _it's own_ *inline assembly* syntax
  #+begin_src c
void printArray(int *arr, size_t size) {
    // some code
}
  #+end_src
***** scenarios for using inline assembly
1. *C variable* --> *CPU register*
2. *CPU register* --> *C variable*
3. operate on multiple C variables inside assembly
***** inline assembly is used for;
  1. accessing CPU *general purpose registers*
  2. accessing CPU *special registers*
  3. accessing *stack pointer*
***** format specifiers
1. =%p= addresses in hexadeicmal format
2. =%lu= long unsigned integer
3. =%lld= long long integer
4. =%llu= long long unsigned integer
5. =%llx= long long integer with hexadecimal representation
6. =%c= char data
***** struct's attribute assignment
you can't assign values to struct attributes. for example the following code will spit out an error
  #+begin_src c
struct A {
    int x = 333;
};
  #+end_src
the valid version of the above code is:
  #+begin_src c
struct A {
    int x;
};
  #+end_src
***** struct sizes don't make sense
the following struct's size is 12 bytes.
#+begin_src c
typedef struct A {
    int x;
    char y;
    int z;
} A;
#+end_src
this doesn't make sense right? because;
- int x  : 4 bytes
- char y : 1 byte
- int z  : 4 bytes
it must be 9 bytes.. however compilers make _padding operations_ to keep the memory layout stable. for example after defining variable x which occupies 4 bytes, compiler occupies 1 byte for variable y and right after that does 3 bytes padding! now our memory layout becomes stable ($$2^n$$). then it occupies 4 more bytes for variable z which is 4 bytes. and sizeof operator returns 12

consider the following example of code, where we define one more *char* variable after y;
#+begin_src c
typedef struct A {
    int x;
    char y;
    char k; // new char
    // 2 bytes padding
    int z;
} A;
#+end_src
=sizeof()= operator returns 12 again. because this time compiler adds 2 more bytes padding right after 'k' variable. now it makes sense
***** static keyword makes global variables private
yes! when we use *static* on a global variable that is declared in one file (say file1.c) and if another file (file2.c) tryies to access that with *extern* then compiler will complain. so static provides some privacy for globals

- file1.c
#+begin_src c
static int globalVariable;

int main(void) {
    return 0;
}
#+end_src

- file2.c
#+begin_src c
extern int globalVariable;

void changeGlobal() {
    globalVariable = 90000;
}
#+end_src

this won't compile

***** c standards
- currently the most widely used language in Embedded is C. but C++ and Rust are gaining popularity

- the first C standard was *ANSI C* this standard is called =C89= or =C90= for short

- more features added to C in 1999. so this standard is called =C99=. C with more features

- in 2011 new standard came out and it is called =C11=

- *C11* is the compiler default for *gcc*

- all standards have *backward compatability*. you can compile C90 code to C99 but can't compile (successfully) from C99 to C90
***** static functions are private
functions in one file can be used from another file with *extern* keyword. however if we use the *static* keyword, this function will not be accessible form other files anymore. for example;

- file1.c
  #+begin_src c
static int secret_function(void) {
    return 3;
}
  #+end_src

- file2.c
  #+begin_src c
extern int secret_function(void);

void using_secret_function() {
    int c = secret_function();
}
  #+end_src
if we compile these files with;
#+begin_src sh
gcc file1.c file2.c
#+end_src
compiler will complain
***** compiler help the programmer with division operations
- in C if *numerator* is explicitly casted to =float=, compiler will assume that the *denominator* is also =float=. so you don't need to cast the denominator to float again

- the following code will output =integer= type value "26.0000" (no explicit cast);
  #+begin_src c
  float x = 80 / 3;
  printf("%f", x);
  #+end_src

- the following code will output =float= type value "26.6666";
  #+begin_src c
  float x = (float) 80 / 3;
  printf("%f", x);
  #+end_src

- by doing explicit casting, number 3 will be casted to float by compiler _automatically_
***** void pointer
- void pointers can hold any value
  #+begin_src c
int a = 112;
char c = 'c';
double d = 0.20;

void *p = &a;
p = &a;
p = &a;
  #+end_src
***** working with sleep functions
+ weirdly this code will not output anything on the screen
  #+begin_src c
  #include <unistd.h>
  #include <stdio.h>

  int main(void) {
      while (1) {
          printf("hello brother");
          sleep(1);
      }
      return 0;
  }
  #+end_src
+ however when we add *new line* this will work..
  #+begin_src c
  #include <unistd.h>
  #include <stdio.h>

  int main(void) {
      while (1) {
          printf("hello brother\n");
          sleep(1);
      }
      return 0;
  }
  #+end_src

**** tips
- you can always use online IDE from [[https://www.onlinegdb.com/][here]]. this makes things easy
- use =__asm__= when writing inline assembly. this is because the word =asm= might conflict with other variable name in code
***** always write descriptions like this
ignore the commas ','. it is org-mode thing
#+begin_src c
/**
   ,**
   ,* @file      main.c
   ,* @author    savolla
   ,* @version   V1.0
   ,* @brief     Default main function.
   ,**
,*/
#+end_src
***** always declare functions before call
- in C, functions are always need to be declared before deffinition
#+begin_src c
void func1(int c); // func declarations
void func2(int c); // func declarations

int main(void) {
    int x = func1(3); // function call
    int y = func2(3); // function call
    return 0;
}

// deffinitions of functions
void func1(int c) {
    return c++;
}

void func2(int c) {
    return c*c;
}
#+end_src
this is the case when you work in just one file. the better solution will be;
1. declare functions in *header* file
2. define functions in another *c file*
3. import header file into main.c
***** use this convention while making include guards
  #+begin_src c
#ifndef _YOUR_HEADER_H__
#define _YOUR_HEADER_H__
// your function declarations go here
#endif /* _YOUR_HEADER_H__ */
  #+end_src

**** concept
***** Include Guards
- prevent multiple inclusion of same header file
  #+begin_src c
#ifndef _YOUR_HEADER_H__
#define _YOUR_HEADER_H__
// your function declarations go here
#endif /* _YOUR_HEADER_H__ */
  #+end_src
***** Implicit Casting
- this is a *casting type* that made by the compiler
- this happens when the programmer tries to make operations with two different types
  #+begin_src c
  unsigned char c = 0x55;
  unsigned int i = 0x11;
  char z = c + i;
  #+end_src

- compiler gives error when implicit casting results with *data loss*. in the following code programmer is trying to add one byte data with two byte data and assigning the result to =unsigned char= type. "FF" part will be lost and compiler complains

  #+begin_src c
  unsigned char c = 0x80 + 0xFF00;
  #+end_src

- hovewer in the following example the programmer trying to do the same thing but this time there is no data loss. so compiler will not complain

  #+begin_src c
  unsigned char c = 0x80 + 0x0011; // no problem
  #+end_src

**** how to
***** define a struct
#+begin_src c
typedef struct A{
    int a;
    char c;
} A;
#+end_src
***** print the address of a variable
#+begin_src c
char c = 'a';
printf( "%p", &c );
#+end_src
***** write inline assembly
****** example code
the following example work on =gcc= and takes no special parameters while compiling

1. increment function
  #+begin_src c
  int inc( int number ) {
    __asm__(".intel_syntax noprefix;" // switch to intel syntax
            "mov eax, %0;"
            "inc eax;"
            "mov %1, eax;"
            ".att_syntax prefix;" // enable this to make the following codes work
            : "=r"(number) // outputs(=) to (r)egister
            : "r"(number)); // input comes from (r)egister
    return number;
  }
  #+end_src

2. add function
  #+begin_src c
  int add(int a, int b) {
    int result;
    __asm__(".intel_syntax noprefix;"
            "mov eax, %1;"
            "add eax, %2;"
            "mov %0, eax;"
            ".att_syntax prefix;"
            : "=r"(result)
            : "r"(a), "r"(b));
    return result;
  }
  #+end_src

****** single line inline assembly
+ syntax for *arm-none-eabi-gcc* inline assembly
  #+BEGIN_SRC c
  //
  //    mendatory        use quotes
  //        /              /
        __asm__ volatile( "mov r0, r1" );
  //    --      --------   ----------
  //     \        \            \
  // underscores  type        assembly
  // are optional  qualifier   code
  //
  #+END_SRC

****** multiline assemby
+ use this syntax in case of *multiple asm lines*. only addition is '\n\t' part
  #+BEGIN_SRC c
  __asm__ volatile( "mov r0, r1\n\t"
                    "mov r1, 0x43\n\t"
                    "inc r1\n\t");
  #+END_SRC


+ x86 gcc uses the same syntax but it adds double '%' symbols in front of register names
  #+BEGIN_SRC c
  __asm__ volatile("mov %%rax, 0x1\n\t"
                   "mov %%rbx, %%rax\n\t");
  #+END_SRC


+ here is the full syntax for inline assembly for *arm-none-eaby-gcc*
  #+BEGIN_SRC c
  //               your asm      C vars or imm
  //              mnemonics     values for input  idk yet
  //                  /               /            /
     __asm volatile( code : output : input : clobber );
  //          \                \            \
  //     instruct gcc      C vars go      ':' colons are
  //     to not optimize   here to store   mendatory!
  //     this line         code results
  //
  #+END_SRC

****** pass C variable into CPU register
+ example of scenario *C variable* --> *CPU register*
  #+BEGIN_SRC c
  #include <stdint.h>
  int main(void) {
      uint32_t x = 12;
      __asm volatile( "mov eax, %0" : : "r"(x) : );
      return 0;
  }
  #+END_SRC

****** pass CPU register into C variable
+ example of scenario *CPU register* --> *C variable*
  #+BEGIN_SRC c
  #include <stdint.h>
  int main(void) {
      uint32_t x;
      __asm volatile( "mrs %0, control" : "=r"(x) : : );
      return 0;
  }
  #+END_SRC

**** problems & solutions
*** c++
**** facts
+ in C++ there is no =interface= keyword. but we can still implement intrefaces with classes
**** how to
***** implement interfaces in c++
1. create a class with only abstract methods with =virtual= keywords and adding ==0= to the ent of methods. and don't forget *virtual destructor*
   #+begin_src cpp
   // Shape.cpp
   class Shape {
   public:
       virtual ~Shape() = default;
       virtual double calculateArea() = 0;
   }
   #+end_src
2. now create a class that implements that interface;
   #+begin_src cpp
   // Triangle.cpp
   #include "Shape.cpp"

   class Triangle : public Shape {
   public:
       double height, floor;
       double calculateArea() {
            return (height * floor) / 2;
       }
   }
   #+end_src
3. here is how this code will look in UML;
   #+begin_src plantuml :results output
@startuml
interface Shape {
    calculateArea()
}
class Triangle {
    height : double
    floor : double
    calculateArea()
}
Triangle .up.|> Shape
@enduml
   #+end_src

   #+RESULTS:
   [[file:/tmp/babel-AKVKVd/plantuml-f7twXB.png]]
***** pass 2D array into a cpp funciton
#+begin_src cpp
const int row = 2;
const int column = 2;

void function( int array[row][column] ) {
    // your operations
}
#+end_src

*** perl
**** facts
+ perl's extension is *.pl*
+ perl is more useful than shell scripting because it is compatible with other shells
+ perl is very powerfull when it comes to *Regex*
+ perl is used for;
  1. linux sysasmin
  2. network programming
  3. database handling
  4. email handling
  5. web development
+ perl competes with python
+ perl is more secure than shell
+ every expression must end with a semicolon ';'

**** concepts
***** shebang
this must be on the first line of every perl script
#+begin_src perl
#!/usr/bin/perl
#+end_src
**** how to
***** run perl program
1. open up a file
   #+begin_src sh
emacs program.pl
   #+end_src
2. write some code
   #+begin_src perl
#!/usr/bin/perl
print("what's your name?");
$name = <STDIN>;
print("hello $name");
   #+end_src

*** python
**** facts
+ sınıf metodları hiç parametre almasa bile, içinde mutlaka *self* parametresi barındırmalıdır. örnek: [[sınıf oluşturmak]]
+ python'da bir sınıf oluştururken __init__ metodu kullanmak zorunda değiliz.
+ python'da kalıtım almak için sadece sınıf tanımlamasında, sınıf isminin yanına, parantez içine super classın adını yazmak yeterlidir. örnek: [[python'da inheritance]]
+ kalıtım almış bir sınıfın base sınıfınından method çağırmak için *super* keywordü kullanılır. örnek: [[base class'a ulaşmak]]
+ private değişken tanımlamak için, değişkenin başına iki kere '_' koymamız gerekir. örnek: [[private değişken oluşturmak]]
**** consepts
***** __init__
python classları için kullanılan *constructor*. diğer çoğu dilde genelde sınıfın adı kullanılır init yerine ama python'da bu şekilde. örnek: [[sınıf oluşturmak]]
***** self
C++'daki *this*'in aynısı. bunun özel bi olayı var, sınıf oluştururken kesinlikle her methodun içine parametre olarak verilmelidir. örnek : [[sınıf oluşturmak]]
***** format string
normalde print fonksiyonu içine yazdığımız string'e dışardan bir değişken eklemeye kalktığımızda, stringi ve değişkenleri + ile toplamamız vs gerekir. bunun yerine format string kullanılır. örnek: [[format string oluşturma]]
***** pipenv
kesinlikle virtualenv'den daha kullanışlı bir pakettir. bununla sanal ortam oluşturmak için [[virtual environment oluşturmak][şuna]] bak
**** builtin function
***** type()
- *işlev*: bir objenin sınıfını döndürür
- *params*: objenin kendisi
- *kullanım*: [[pt1]]
**** howto
***** bir objenin sınıfını nasıl döndürürüz | <<pt1>>
#+BEGIN_SRC python :results output
msg = "hello"
print(type(msg))
#+END_SRC

#+RESULTS:
: <class 'str'>
***** sınıf oluşturmak
#+BEGIN_SRC python :results output
class Dog:
# constructor
def __init__(self): # self must be here
    print("New Dog is created")

def bark(self):
    print("BARK!")

d = Dog() # instantiation
d.bark() # bark the dog
#+END_SRC

#+RESULTS:
: New Dog is created
: BARK!

***** class property'si oluşturma ve erişme
#+BEGIN_SRC python :results output
class Dog:
# class properties
name = ""
age = 0

# constructor
def __init__(self, dog_name):
    self.name = dog_name # set name property

d = Dog("Ares")
print(d.name)
#+END_SRC

#+RESULTS:
: Ares
***** format string oluşturma
normal print fonksiyonunun içine, tıknaktan önce bir *f* karakteri eklenir

#+BEGIN_SRC python :results output
name = "savolla"
age = 28
print(f"Hi! My name is {name} and I'm {age} years old")
#+END_SRC

#+RESULTS:
: Hi! My name is savolla and I'm 28 years old
***** python'da inheritance
#+BEGIN_SRC python :results output
class Mammal:
pass

class Human(Mammal):
pass

class Dog(Mammal):
pass
#+END_SRC

***** base class'a ulaşmak
#+BEGIN_SRC python :results output
class Mammal:
age = 12;

class Human(Mammal):
def someMethod(self):
    print(super().age)

h = Human()
h.someMethod()
#+END_SRC

#+RESULTS:
: 12
***** private değişken oluşturmak
#+BEGIN_SRC python :results output
class A:
public_var = 11
__private_var = 43

m = A()
print(m.public_var) # this will be printed
print(m.__private_var) # this won't
#+END_SRC

#+RESULTS:
: 11
: 43
***** virtual environment oluşturmak
1. önce *pipenv* paketi kurulur
#+BEGIN_SRC sh
sudo pip install pipenv
#+END_SRC

2. proje klasörü oluşturulup oraya girilir ve şu komut yazılır
#+BEGIN_SRC sh
pipenv shell
#+END_SRC
bu komuttan sonra, klasör adı ile bir ortam oluşacaktır. terminalin solunda projenin adı görünecek ve bu dizince bir Pipfile oluşacaktır. onu elleme lazım o.

3. istenen python paketleri kurulur. sanal dizinde olduğundan emin ol
#+BEGIN_SRC sh
sudo pipenv install django==3.0.1
#+END_SRC
artık ne kuruluyorsa bu klasöre kurulacak ve sistemden tamamen izole bir şekilde çalışacaktır

4. paket silme
#+BEGIN_SRC sh
sudo pipenv uninstall django==3.0.1
#+END_SRC

5. ortamdan çıkmak istersen
#+BEGIN_SRC sh
exit
#+END_SRC
***** pipenv ile requirements.txt'den dependency'leri kurmak
bazen bir projenin düzgün çalışması için *requirements.txt* dosyasıyla beraber gelir
#+BEGIN_SRC sh
pipenv install -r ./requirements.txt
#+END_SRC
***** +scrape web with python+
****** create a python environment
1. install *pypenv* for easily creating /healthy/ python environments
   #+begin_src sh
sudo pip install pipenv
   #+end_src
2. create your project directory (web-scraper in this example)
   #+begin_src sh
mkdir web-scraper && cd web-scraper
   #+end_src
3. create and start the enviroment
   #+begin_src sh
pipenv shell
   #+end_src
   after this command a new file called =Pipfile= will be created. don't mess with it yet
****** install dependencies
1. install *bs4* module for /html parsing/
   #+begin_src sh
sudo pipenv install bs4
   #+end_src
2. install *requests* for taking html code from websites
   #+begin_src sh
sudo pipenv install requests
   #+end_src
3. install *fake-useragent* to avoid captchas
   #+begin_src sh
sudo pipenv install fake-useragent
   #+end_src
****** import modules

1. create a python file and open it with your favorite text editor
   #+begin_src sh
touch web-scrapping-application.py
emacs web-scrapping-application.py
   #+end_src

2. add the following to your file
   #+begin_src python
from urllib.request import urlopen as req
from bs4 import BeautifulSoup as soup
from fake_useragent import UserAgent

   #+end_src
3. execute the file
   #+begin_src sh
python web-scrapping-application.py
   #+end_src

if you don't get any import errors, then it means that modules are installed and you're ready to go.

****** retrieve the web page

1. add the *url* of the site that your want to scrape.
    #+begin_src py
url = "https://github.com/savolla"
    #+end_src

2. get the html content from the internet. this might take a while depending on your internet connection and size of the page
   #+begin_src py
webpage = req(url)
   #+end_src

3. assign html content to a variable
   #+begin_src py
page_html = req.read()
   #+end_src

4. close the connection
   #+begin_src py
req.close()
   #+end_src

5. make the html code manageble
   #+begin_src py
page_html = soup(page_html, "html.parser")
   #+end_src

****** extract content from html
1. go to your browser and find the section you want to scrape
2. right click on this section and select "inspect element"
3. find the elements you want to scrape. (div, span, a..)
4. crop your html content

   #+begin_src python
container = page_html.find_all("div", {"class":"div-class-name"})
   #+end_src
   container is a list of divs now. every element in this list is a class of =div-class-name=

5. check how many items container have
***** delete the elements from a list
#+begin_src python :results output
x = [1,2,3,4]
x.remove(x[0]) # remove the first element
print(x)
#+end_src

#+RESULTS:
: [2, 3, 4]

***** change list elements
this example changes all 2's to 0
#+begin_src python
a=[1,2,1,2,1,2]
a = [0 if x==2 else x for x in a]
#+end_src
***** convert list to string
=WARNING= list items must be type of string
#+begin_src python
x = ['h', 'e', 'l', 'l', 'o']
x = ''.join(x)
#+end_src

**** problems & solutions
**** modules
***** matplotlib
****** facts
+ matplotlib, veri grafiği çizdirme kütüphanesidir
+
****** concept
******* subplot()
+ birden fazla grafiği aynı anda çizdirmek için kullanılan bir matplotlib methodudur. örnek için [[birden fazla grafiği üst üste çizdirme][şuna]] ve [[birden fazla grafiği yan yana çizdirme][şuna]] bak
+ örnek kullanım: subplot(1,2,1)

****** howto
******* basit bir grafik oluşturma
#+BEGIN_SRC python :results graphics
from matplotlib import pyplot as plt
import numpy as np

x = np.linspace(0,5,50)       # 0'dan başla, 5er 5er 50'ye kadar giden bir dizi oluştur
y = x ** 2                    # x dizisininin karesini al ve y'ye ata
plt.plot(x,y)                 # grafiği oluştur
plt.title("squares")          # grafik başlığı
plt.xlabel("x ekseni")        # x eksenine başlık ata
plt.ylabel("y ekseni")        # y eksenine başlık ata
plt.show()                    # grafiği göster
#+END_SRC

******* birden fazla grafiği üst üste çizdirme
+ üst üste çizdirmek için, iki grafiğin subplot fonksiyonundaki son parametrelerin aynı olması gerekir
#+BEGIN_SRC python
from matplotlib import pyplot as plt
import numpy as np

# first graphic
x1 = np.array([1,2,3,4,5,6,7,8])
y1 = np.array([8,7,6,5,4,3,2,1])
plt.subplot(1,1,1)
plt.plot(x1, y1, 'r')

# second graphic
x2 = np.array([1,2,3,4,5,6,7,8])
y2 = np.array([1,2,3,4,5,6,7,8])
plt.subplot(1,1,1)
plt.plot(x2, y2, 'b')

plt.show()
#+END_SRC

******* birden fazla grafiği yan yana çizdirme
#+BEGIN_SRC python
from matplotlib import pyplot as plt
import numpy as np

# first graphic
x1 = np.array([1,2,3,4,5,6,7,8])
y1 = np.array([8,7,6,5,4,3,2,1])
plt.subplot(1,2,1)                  # son parametreye dikkat
plt.plot(x1, y1, 'r')

# second graphic
x2 = np.array([1,2,3,4,5,6,7,8])
y2 = np.array([1,2,3,4,5,6,7,8])
plt.subplot(1,2,2)                  # son parametreye dikkat
plt.plot(x2, y2, 'b')

plt.show()
#+END_SRC

****** problems & solutions
******* Tkinter hatası alınıyorsan şunu dene
#+BEGIN_SRC sh
xrdb -load /dev/null
xrdb -query
#+END_SRC

***** seaborn
****** facts
****** concept
****** howto
****** problems & solutions
***** pandas
****** facts
****** concept
****** howto
****** problems & solutions
***** sklearn
****** facts
****** concept
****** howto
****** problems & solutions
***** bs4
used for parsing html text. widely used in *web scrapping*
****** facts
****** concept
****** how to
******* navigate the html tree
you can zoom into html content by using *dot* operator in bs4
#+begin_src python
page_html.title # get title
page_html.body.p # get the first p element in body
page_html.body.find_all("p") # find all p elements inside body
page_html.body.find_all(attrs={"itemprop":"description"})[0].text # you just need this
#+end_src
****** problems & solutions
***** selenium
****** methods
#+begin_src python
driver.get("https://savolla.github.io")     # open up a page
driver.title                                # get page title
driver.close()                              # close the driver
#+end_src
****** how to
******* install
1. create a python environment

   #+begin_src sh
sudo pip install pipenv
mkdir project
cd project
pipenv shell
   #+end_src

2. install selenium

   #+begin_src sh
sudo pipenv install selenium
   #+end_src

3. install *chromium*. this package comes with *chromedriver* which we will need
   #+begin_src sh
pacman -S chromium
   #+end_src
******* run webdriver
#+begin_src python
from selenium import webdriver
driver = webdriver.Chrome()
driver.get("https://savolla.github.io") # open up a page
driver.close() # close the driver
#+end_src
******* search google
#+begin_src python
from selenium import webdriver
from selenium.webdriver.common.keys import Keys

driver = webdriver.Chrome()
driver.get("https://google.com")
search_bar = driver.find_element_by_name("q") # you can search by other things as well
search_bar.send_keys("Kurotogake bandcamp")
search_bar.send_keys(Keys.RETURN)
#+end_src
******* get page source
this is usefull when websited block automatic http requests.
#+begin_src python
from selenium import webdriver
from selenium.webdriver.common.keys import Keys

driver = webdriver.Chrome()
driver.get("https://github.com/savolla")
page_html = driver.page_source  # now you have all the html content in page_html
#+end_src
******* find elements in html
#+begin_src python
from selenium.webdriver.common.by import By

#+end_src
*** bash
*** vhdl
**** facts
+ HDL : Hardware Descriptive Language
+ found in 1981
+ IEEE standard
+ initially created for ASIC synthesis

*** verilog
**** facts
+ found in 1985
+ IEEE standar
+
**** how to
***** create a basic module

#+BEGIN_SRC verilog
module And(x, y, out);
input x, y;
output out;
assign out = x & y;
endmodule
#+END_SRC

***** work with array of inputs and outputs

#+BEGIN_SRC verilog
module And(x, y, out);
input [15:0] x, y; // [15:0] is the syntax of 16-bit arrays
output [15:0] out;
assign out = x & y;
endmodule
#+END_SRC

***** [X] for loop in verilog

#+BEGIN_SRC verilog
integer k;                                // you have to define integer k outside
for (k = 0; k <= 15; k=k+1) begin         // note that k++ does not work in verilog
Xor tmp(x[k], y[k], out[k]);
end
#+END_SRC

*** c#
**** frameworks
***** .Net Core
****** concepts
******* methods
******** Startup.cs/ConfigureServices
+ sets some initial configurations for the project. web app will read and run this method first
+ the following line will be there by default to make MVC work

#+BEGIN_SRC cpp
services.AddCountrollersWithViews();
#+END_SRC

******** Startup.cs/Configure
+ this determines if web app should run in development mode or product mode
+ under this method, developers can add a special setting that makes site routing according to Controllers;

#+BEGIN_SRC cpp
endpoints.MapDefaultControllerRoute();
#+END_SRC

****** how to
******* use getter and setter methods
in C# there is no need to write long *get* and *set* functions like in C++. you simply put those inside property
#+BEGIN_SRC cpp
public class Joke
{
    public int Id {get; set;}
    public string joke_question {get; set;}
    public string joke_answer {get; set;}
}
#+END_SRC
******* create a simple website with .NET Core MVC
this tutorial will create a website with a database. also this will be only applicable on *windows* platform and *visual studio 2019*
******** project creation
1. open up visual studio and press *create a new project*
2. select *ASP .NET Core Web Application*
3. Name your Project
4. select *Web Application (Model-View-Controller)* and change the *authentication* to *Individual User Accounts*
5. .Net Core will generate lots of code for us. so we don't need to do everything from scratch
6. run the project. let visual studio download whatever it needs to download. the first run will take some time btw
******** folders and MVC
+ three directories are so important in *solution explorer*;
1. *Model* : where classes are defined. for example a shopping website has Customer, Shipping classes in Model directory
2. *View* : displays the data to the user. this folder contains different kinds of files called *razor pages*
    - razor pages
    + are combinations of *html* and *c#*.
    + file extension of the razor page is *.cshtml*
3. *Controller* : controls _when_ pages appear. what data should they show to the user
******** create first page
here we will use *Model* and *View* to create first page
1. right click on *Model/Add/Class*
2. select *Class* from popup menu and name your class (Joke.cs) and press *Add*
3. create some properties if you like. see [[shortcuts]] for visual studio (optinal)
4. you _must create_ an *empty constructor* of the class. because  it will be used by other classes. because of visual studio generated lots of code for us, we actually don't know exactly what those codes are (yet)
5. unfold *Data* directory from solution explorer (will be used later)
6. right click on *Controller/Add/Controller*
7. select *MVC Controller with Views, using Entity Framework* from popup
8. from popup menu, on *Model* section, select the _name of the class you just created_ in Model directory (Joke Class)
9. for *Data Context Class*, press _plus button_ (or add)
10. look at the solution explorer's *Data* section. in textbox, delete the highlighted part and write what you see under Data directory (ApplicationDbContext in my case)
11. tick everyhting below (3 of things need to be ticked)
12. click *create*. this might take some time. after this step, several new directories will be created in our solution (you need internet connection for this to work)
******** database migration
our pages will not be *dynamic* if we don't create a database. Here are steps for database creation;

1. check if a file starts with *0000000* is created under *Data/Migrations* directory. this contains some database informations.
2. go to *Tools/NuGet Package Manager/Package Manager Console* to open package manager. wait for initialization
3. enter the command:
#+BEGIN_SRC sh
add-migration "first-database-migration"
#+END_SRC
after this command, a c# file will be created under *Data/Migrations*. This is a code that creates a database table (Joke Table) see [[ORM]]
4. finally enter this command in package manager console to create a new database inside SQL server
#+BEGIN_SRC sh
update-database
#+END_SRC

now go and check the tables of our newly created database if you want by clicking *View/SQL Server Object Explorer* (optional). now we have a website with database connected

******** add our controller to the front page
go to *Views/Shared/_Layout.cshtml* and copy one of the *nav-bar* classes and change it to
#+BEGIN_SRC html
asp-controller="Jokes" <!-- out controller's name -->
asp-action="Index" <!-- front page of our Joke controller -->
#+END_SRC
this will add *Jokes view* to the front page.
******** add search bar feature I

1. go to *_Layout.cshtml* and copy another *nav-bar* element and start modifying it;
#+BEGIN_SRC html
asp-controller="Jokes" <!-- out controller's name -->
asp-action="ShowSearchForm" <!-- this will be our search bar -->
<a>Search</a> <!-- change link to more reasonable name -->
#+END_SRC

*ShowSearchForm* doesn't exist yet. So we need to define it in *Jokes Controller*. if you try to access this link, it will give "page not found" error

2. go to *Controllers/JokesController.cs* and copy the first *Task* method and start modifying it
#+BEGIN_SRC c++
public async Task<IActionResult> ShowSearchForm() { // we changed Index to ShowSearchForm
    return View(); // we deleted everything inside the paranthesis
}
#+END_SRC

3. right click on *ShowSearchForm* in the code and click *Add View*. select *Razor View* instead of empty one
(we could create a view called *ShowSearchForm* under *View* folder but we choose the shorter way)

4. on the popup menu;
- leave the View Name as is
- Template : create
- Model Class : Joke
- options:
    [x] partial view
    [x] reference script

this *will not* create a search bar. we will modify this code to make a search bar now

******** add search bar feature II

1. open *View/Jokes/ShowSearchForm.cshtml*

2. since do not *modify* or *create* Jokes Model, we delete this line;
#+BEGIN_SRC html
@model JokesWebsite.Models.Joke
#+END_SRC

3. there is a line at the bottom for Joke validation. it's basically check if user inputs a joke in correct format. delete this line as well
#+BEGIN_SRC html
@section Scripts {
@{await Html.RenderPartialAsync("__ValidationScriptPartial");}
}
#+END_SRC

4. finaly convert the code into this:
#+BEGIN_SRC html
<h4>Search for a Joke</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="ShowSearchResults"> <!-- where we want to go after submition -->
            <div class="form-group">
                <label for="SearchPhrase" class="control-label"></label>
                <input name="SearchPhrase" class="form-control" />          <!-- SearchPhrase will be a parameter -->
            </div>

            <div class="form-group">
                <input type="submit" value="Search" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>
<div>
    <a asp-action="Index">Back to List</a>
</div>
#+END_SRC

5. *SearchPhrase* will go to our Joke Controller's *ShowSearchResults* method as a parameter. Go to *Controllers/JokeController.sh*
#+BEGIN_SRC cpp
// GET: Jokes/ShowSearchResults
public async Task<IActionResult> ShowSearchResults(string SearchPhrase)  // SearchPhrase is coming from ShowSearchForm
{
    return View("Index", await _context.Joke.Where( j => j.JokeQuestion.Contains
                (SearchPhrase)).ToListAsync());
}
#+END_SRC

this code snippet uses a lambda function inside the return statement

now we have a section with search

******** show joke owner
:LEFT_HERE:
******** hide the joke answer
******** limit "create" for logged users
***** Windows Form
****** controls
+ *group box* : a container of elements. it provides an easier way to access the elements
+ *link label* : this is a label. when clicked, it redirects the user to a web page
****** facts
+ the difference between *show()* and *showDialog()* is the show() will let you do operations on previous form while showDialog() won't
****** how to
******* open a new form when a button is clicked
1. double click on the button. a new button click event method will be generated
2. create a new object of your form
3. use show() method to pop the form when clicked
   #+begin_src c++
   YOUR_FORM f = new YOUR_FORM();
   f.show();
   #+end_src
******* exit the application
there are two exit methods in windows form applications
#+begin_src c++
Application.Exit();
Environment.Exit(0);
#+end_src
**** how to
*** java
**** concepts
***** nested classes
- java allows you to define a class into another class. they called nested classes
****** inner class
- inner class _have access_ to outer class members
- inner class' main function _cannot be static_

  #+begin_src java
  public class OuterClass {
      int a = 3;
      public class InnerClass {
          int b = a; // can use outer class' members
      }
  }
  #+end_src

****** inner static class
- inner static classes _don't have access_ to outer class members

  #+begin_src java
  public class OuterClass {
      int a = 3;
      public static class InnerClass {
          int b = a; // this is not allowed
      }
  }
  #+end_src
***** Maven, Gradle and Ant
they are three build tools for java
***** swing
+ this is a library for GUI development in java.
+ it is really *outdated* but it teaches the basics
**** tips
+ if you don't know the name of the exception while making try catch methods, you can always make the program spit this error and then get the name from the error log
+ all SQL queries must be used in try-catch blocks. because query result may not be return something
+ if you see "Must be Caught" errors then this statment must be used in try-catch blocks
+ when working with databases, whatch out those varchar[25] varaibles. java gets those variables as *string* so strings are not limited to 25. always check the length before storing varchar elements from java to database.
+ when adding values to database, use =execute= method. when getting some value from database use =executeQuery=. the "executeQuery" method will return a =Resultset= object. catch it
+ when querying a database, give the full path to tables. like =databas_ename.table_name=. this is important. mysql might allow this kind of notation since it is a full blown database application. JDBC is not that clever
**** facts
+ non-static class members can't be used with *this* keyword
  #+begin_src java
public class A {
    public static int x;
    public static assign() {
        this.x = 111; // spits out error
    }
}
  #+end_src

  correct code: remove *this*
  #+begin_src java
public class A {
    public static int x;
    public static assign() {
        x = 111; // works fine
    }
}
  #+end_src
+ in java, you can't include more than one package
  #+begin_src java
package path.to.package1;
package path.to.package2; // second one is not allowed
  #+end_src
+ you don't have to import classes if they are in the same package

**** how to
***** use linked lists
****** create item
#+begin_src java
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;

public class JavaLinkedListApp {
    public static void main(String[] args) {
        List<String> x = new ArrayList<String>();
        x.add("item 1");
        x.add("item 2");
        x.add("item 3");
        x.add("item 4");
        System.out.println("Liste: " + x);
    }
}
#+end_src
****** set/change items
use =set= method to do this
#+begin_src java
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;

public class JavaLinkedListApp {
    public static void main(String[] args) {
        List<String> x = new ArrayList<String>();
        x.add("item 1");
        x.set(1,"ITEM 1"); // set method
        System.out.println("Liste: " + x);
    }
}
#+end_src
****** remove an item
use =remove= method to do this
#+begin_src java
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;

public class JavaLinkedListApp {
    public static void main(String[] args) {
        List<String> x = new ArrayList<String>();
        x.add("item 1");
        x.add("item 2");
        x.remove(0);
        x.remove(1);
        System.out.println("Liste: " + x);
    }
}
#+end_src
****** sort items
use =Collections.sort()= sorts *alphabetically*
#+begin_src java
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;

public class JavaLinkedListApp {
    public static void main(String[] args) {
        List<String> x = new ArrayList<String>();
        x.add("item 1");
        x.add("item 2");
        x.add("item 3");
        x.add("item 4");
        Collections.sort(x);
        System.out.println("Liste: " + x);
    }
}
#+end_src

****** reverse sort items
use =Collections.reverse()= sorts *alphabetically*
#+begin_src java
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;

public class JavaLinkedListApp {
    public static void main(String[] args) {
        List<String> x = new ArrayList<String>();
        x.add("item 1");
        x.add("item 2");
        x.add("item 3");
        x.add("item 4");
        Collections.reverse(x);
        System.out.println("Liste: " + x);
    }
}
#+end_src
***** handle errors
#+begin_src java
public static int takeNumberData() {
    Scanner input = new Scanner(System.in);
    String data;
    int number;
    data = input.next();
    try {
        number = Integer.parseInt(data);
    } catch (NumberFormatException e) {
        System.out.println("this is not a number!");
        return -1;
    }
    return number;
}
#+end_src
***** create a swing application
1. open up *netbeans*
2. create new project
3. select; Ant -> Java Application
4. name your project
5. untick "create main class"
6. wait for project creation
7. right click on your project;
   New -> JFrame Form
8. name your form
9. a new frame with controls will be open
***** create a blank GUI window
we use JFrame class from swing library to do this
#+begin_src java
import javax.swing.JFrame;

public class GUI {
    public GUI() {
        JFrame frame = new JFrame();
    }

    public static void main(String[] args) {
        new GUI();
    }
}
#+end_src
***** use database in java
***** type cast in java
#+begin_src java
int number = 11;
String text = (String)number;
#+end_src
***** iterate java list/array
+ the traditional =arr[0]= notation doesn't work in java
#+begin_src java
ArrayList<int> x = new ArrayList<int>();
x.add(1);
x.add(2);

x.get(0); // 0th index
#+end_src
**** problems & solutions
*** sql
**** concepts
**** tips
**** facts
**** how to
***** write search query
#+begin_src sql
SELECT #column1, #column2 FROM #tablename WHERE #columnN = #search_keyword;
SELECT * FROM #tablename WHERE #column_N = #search_keyword;
SELECT * FROM #tablename WHERE #column_N LIKE #search_keyword;
#+end_src
***** delete values from table
#+begin_src sql
DELETE FROM #table_name WHERE #column_name = #value
#+end_src
***** write insert query
#+begin_src sql
insert into ( #column1, #column2, #colum3 ) values ( "value1", "value2", "value3" );
#+end_src
**** problems & solutions
*** html
:PROPERTIES:
:EXPORT_FILE_NAME: html-cheat-sheet
:EXPORT_TITLE: HTML Cheat Sheet
:HUGO_BASE_DIR: ~/txt/blog/
:HUGO_SECTION: en/posts
:EXPORT_AUTHOR: savolla
:END:
**** how to
+ create a *heading*?
  #+BEGIN_SRC html
<h1>Heading</h1>
  #+END_SRC
+ create a *paragraph element*?
  #+BEGIN_SRC html
<p>paragraph</p>
  #+END_SRC
+ create an *image element*?
  notice there are _no closing forward slashes_ in *img* elements
  #+BEGIN_SRC html
<img src="path/to/image">
  #+END_SRC
+ *break a line*?
  #+BEGIN_SRC html
<br/>
  #+END_SRC
+ tell html to use latest html version?
  by putting the *docstring*
  #+BEGIN_SRC html
<!DOCTYPE html>
  #+END_SRC
+ generate all *initial html structure* with *emmet*?
  =! + TAB=
+ generate a *div* with a *class* with *emmet*?
  =div.class_name + TAB=
+ generate a *div* with an *id* with *emmet*?
  =div#id_name + TAB=
+ create 5 div elements with unique class names?
  =.container$*5=
+ get *dummy text* for experimenting?
  __NUMBER__ is a number of words you want
  =lorem__NUMBER__ + TAB=
+ get 5 dummy texts that has 4 words per line ?
  =lorem__WORDS__*__LINES__=
+ display an image ?
  #+BEGIN_SRC html
<img src="./path/to/image.png" alt="alternative text"/>
  #+END_SRC
+ display images from internet (external images)?
  #+BEGIN_SRC html
<img src="http://www.addrsofpic.com/pic.png" alt="blah" />
  #+END_SRC
+ *adjust the size* of very big images?
  just use *width*. height will be adjusted automatically as soon as we don't specify it explicitly.
  #+BEGIN_SRC html
<img src="./path/to/img.png" width="256" alt="pexels" />
  #+END_SRC
+ add links?
  #+BEGIN_SRC html
<a href="www.google.com">GOOGLE</a>
  #+END_SRC
+ add link that opens a new tab when opened?
  use *target="_blank"*
  #+BEGIN_SRC html
<a href="www.google.com" target="_blank">GOOGLE</a>
  #+END_SRC
+ add internal link? (in site link)
  specify html file path in link element
  #+BEGIN_SRC html
<a href="./path/to/html">Home</a>
  #+END_SRC
+ scroll and focus on an element with a link?
  #+BEGIN_SRC html
<a id="top" href="#bottom">go bottom</a>
<!-- Some looooooong text (5000 lines) -->
<a id="bottom href="#top">go to top</a>
  #+END_SRC
+ convert an image into a link?
  use *a>img* + TAB
  #+BEGIN_SRC html
<a href="www.google.com">
  <img src="google_icon.png" alt="icon"/>
</a>
  #+END_SRC
+ use special characters in html? like copyright?
  #+BEGIN_SRC html
<p>copyright &copy;</p>
  #+END_SRC
+ make left, down, right, up arrows?
  #+BEGIN_SRC html
<p>left &larr;</p>
<p>right &rarr;</p>
<p>up &uarr;</p>
<p>down &darr;</p>
  #+END_SRC
+ make *unordered list* ?
  #+BEGIN_SRC html
<ul>
  <li>peter</li>
  <li>john</li>
  <li>sarah</li>
  <li>michael</li>
  <li>melinda</li>
</ul>
  #+END_SRC
+ make *ordered list* ?
  #+BEGIN_SRC html
<ol>
  <li>michael</li>
  <li>melinda</li>
  <li>opeth</li>
  <li>axe</li>
</ol>
  #+END_SRC
+ create *table* in html?
  always start with *<table>* element and then *<tr>* for rows
  #+BEGIN_SRC html
<table>

  <!-- row of table headers -->
  <tr>
   <th>header1</th>
   <th>header2</th>
   <th>header3</th>
  </tr>

  <!-- row of table data -->
  <tr>
    <td>data1</td>
    <td>data2</td>
    <td>data3</td>
  </tr>

  <!-- second row of table data -->
  <tr>
    <td>data1</td>
    <td>data2</td>
    <td>data3</td>
  </tr>

</table>
  #+END_SRC
+ take an input from user?
  1. create a form element *form + TAB*
  2. *input + TAB*
    #+BEGIN_SRC html
    <form method="" action="">
      <input type="text" name="" value="" />
    </form>
    #+END_SRC
+ *label* the *input bar*
  #+BEGIN_SRC html
  <form method="" action="">
    <label for="nick">username</label> <!-- label the input bar -->
    <input type="text" name="username" id="nick" /> <!-- input bar -->
    <input type="submit" /> <!-- submit button -->
  </form>
  #+END_SRC
+ make passwords invisible when typing?
  notice *input type="password"* here. thi is the important one
  #+BEGIN_SRC html
<input type="password" name="password" value="" />
  #+END_SRC
+ show *example input* inside input box?
  #+BEGIN_SRC html
<input type="text" name="email" placeholder="john@protonmail.com" />
  #+END_SRC
+ use *radio buttons* in html?
  #+BEGIN_SRC html
<p>Your favorite language</p>
<input name="coding" type="radio" value=""/>Javascript
<br />
<input name="coding" type="radio" value=""/>C++
<br />
<input name="coding" type="radio" value=""/>C
<br />
<input name="coding" type="radio" value=""/>Python
<br />
  #+END_SRC
+ make a big *text area* ?
  *rows* how many rows should be in our text area
  *cols* how many columns should be in our text area
  #+BEGIN_SRC html
<textarea rows="" cols=""></textarea>
  #+END_SRC
+ make *check boxes* in html?
  #+BEGIN_SRC html
<p>What are your favorite languages?</p>
<input name="" type="checkbox" value=""/> C++ <br />
<input name="" type="checkbox" value=""/> C <br />
<input name="" type="checkbox" value=""/> Python <br />
<input name="" type="checkbox" value=""/> Javascript <br />
<input name="" type="checkbox" value=""/> Rust <br />
  #+END_SRC
+ make a *checkbox* that already checked by default?
  put *checked="checked"* inside input element
  #+BEGIN_SRC html
<input type="checkbox" checked="checked"/> testbox
  #+END_SRC
+ make a *dropdown menu* in html?
  label is not really necessary here but hey!
  #+BEGIN_SRC html
<label for="menu0">favorite PL</label>
<select id="manu0" name="">
  <option value="#">select language</option>
  <option value="js">javascript</option>
  <option value="c">C</option>
  <option value="cpp">C++</option>
  <option value="rs">Rust</option>
</select>
  #+END_SRC
**** what is
+ what is the first html line should be in a web page?
  #+BEGIN_SRC html
<!DOCTYPE html>
  #+END_SRC
+ what is the root element of html page?
  #+BEGIN_SRC html
<html>
  #+END_SRC
+ what *head* should contain?
  it contains the *information* about the page
  1. page title
  2. links to external resources like *css* and *js* files
  3. metadata
+ what *<tr>* means?
  table row
+ what *<td>* means?
  table data
+ what *<th>* means?
  table header
+ what is the importance of *value* attribute in *radio buttons* ?
  value in radio buttons is the data that will be passed into database or somewhere. when we select a radio button *A* and A contains *value="C++"* then "C++" string will be sent from this radio button when submitted
+ what is the difference between *radio buttons* and *check box* ?
  - radio buttons: choose only one
  - check boxes: choose multiple
+ what is the *checkbox shortcut* with *emmet*
  input:c + TAB
+ what is the *submit button* shortcut with *emmet*
  input:s + TAB
**** flash cards
+ is content in *head* element visible in page?
  No.
+ where <title>page0</title> will be displayed?
  in the browser tab!
+ generate 5 list items with line numbers using *emmet*
  ul>li.cls${$.}*5
+ what will *.container + TAB* output?
  div is the most used element. so we don't need to write *div.container*
  #+BEGIN_SRC html
<div class="container">

</div>
  #+END_SRC
+ how many *headings* there are in html?
  there are 6 hadings
  #+BEGIN_SRC html
<h1>BIGGEST</h1>
<h2>Bigger</h2>
<h3>normal</h3>
<h4>smaller</h4>
<h5>smallest</h5>
<h6>tiny</h6>
  #+END_SRC
+ what path convention should be used in html?
  dot and a slash "./" is used in most frameworks and languages like *react* *php* etc.
+ how initial html page structure look?
  #+BEGIN_SRC html
<!DOCTYPE html>
<html>
  <head>
    some code..
  </head>
  <body>
    some code..
  </body>
</html>
  #+END_SRC
+ where to get *copyright free* pictures?
  1. [[https://www.pexels.com/][pexels]] also has videos
  2. [[https://pixabay.com/tr/][pixabay]]
  3. [[https://gratisography.com/][gratisography]]
+ how comments look in html?
  #+BEGIN_SRC html
<!-- this is a comment -->
  #+END_SRC
+ what do *sup* and *sub* elements do?
  *sup*: pushes text up. it's like x^2 (where 2 in above x)
  *sub*: pushed text down. it's like index x_i (where i below x)
  #+BEGIN_SRC html
<p>x<sub>i</sub> = 2<sup>x</sup></p>
  #+END_SRC
+ create 5 unordered list element which are links using *emmet*
  ul>(li>a)*5 + TAB
+ what happens when user enters nonsense in *email input box*?
  page will say something like "you forgot to put \@" symbol bla bla bla
+ what *value* attribute does in *input* elements?
  it is the _hardcoded_ value. here is the example;
  #+BEGIN_SRC html
<!-- "GO!" will be written on submit button -->
<input type="submit" value="GO!" />

<!-- "deleteme first" will be written in input box -->
<input type="text" value="deleteme first!" />
  #+END_SRC
+ why *name* attributes need to be same in *radio buttons*
  if we don't make them same then we can select more than one radio buttons. And this doesn't make sense
+ what *value* attribute in elements actually do ?
  it returns that value when submitted. *value* is important in buttons, dropdown manus, checkboxes, radio buttons etc.
*** css
:PROPERTIES:
:EXPORT_FILE_NAME: css-cheat-sheet
:EXPORT_TITLE: CSS Cheat Sheet
:HUGO_BASE_DIR: ~/txt/blog/
:HUGO_SECTION: en/posts
:EXPORT_AUTHOR: savolla
:END:
**** how to
 1. name a css file?
   *style.css* or *main.css*
 2. how to link *style.css* with *index.html* ?
   in html file,
   #+BEGIN_SRC html
<link href="./style.css" rel="stylesheet"/>
   #+END_SRC
 3. write internal css?
   put your css code inside *style* tags
   #+BEGIN_SRC html
   <head>
     <style>
       h3 {
         color : red;
       }
     </style>
   </head>
   #+END_SRC
 4. how comments look in css?
   #+BEGIN_SRC css
/* this is a comment */
   #+END_SRC
 5. change h1,h2 and h3 at the same *selector*?
   #+BEGIN_SRC css
h1,h2,h3 {
    color : olive;
}
   #+END_SRC
 6. change *background color* of the entire page?
   #+BEGIN_SRC css
body {
    background-color : black;
}
   #+END_SRC
 7. style by *classes* or *id*?
   #+BEGIN_SRC html
<h3 class="cls0"> TITLE0 </h3>
<h3 id="cls1"> TITLE1 </h3>
   #+END_SRC

   #+BEGIN_SRC css
.cls0 {
    color : red;
}

#cls1 {
    color : blue;
}
   #+END_SRC
 8. set *space between two lines*?
   #+BEGIN_SRC css
line-height : 1.5em;
   #+END_SRC
 9. set *font* ?
   #+BEGIN_SRC css
font-family : monospace;
   #+END_SRC
 10. set a background image?
    #+BEGIN_SRC css
 background-image: url("../img/bg.png");
    #+END_SRC
 11. set opacity of text?
    use *rgba()* with a value between 1 and 0 at the end
    #+BEGIN_SRC css
 .class0 {
     color : rgba(100,53,81,0.5);
 }
    #+END_SRC
 12. make *links* without _underline_ ?
    #+BEGIN_SRC css
 a {
     text-decoration : none;
 }
    #+END_SRC
 13. cancel all the *default margins*?
    #+BEGIN_SRC css
    *{
        margin : 0;
    }
    #+END_SRC
 14. *change font* of an element?
    #+BEGIN_SRC css
 .element {
     font-family : Fira Code;
 }
    #+END_SRC
 15. use *google fonts*
     1. go to *google fonts* page
     2. select your font
     3. click *select this style*
     4. copy <link> part and paste is between <head> element
     5. copy *CSS rules* and paste it to CSS file where you want to use that font
     6. click on *@import* section and copy the code inside =<style>= element
     7. paste it into the top of your CSS file
 16. make a font bolder?
    use *font-weight*
    #+BEGIN_SRC css
 .element {
     font-weight: bold;
 }
    #+END_SRC
 17. make font italic?
    use *font-style*
    #+BEGIN_SRC css
 .element {
     font-style : italic;
 }
    #+END_SRC
 18. reach a *nested element* inside a class?
    use *>* syntax
    #+BEGIN_SRC html
 <div class="cls0">
   <ul>
     <li>item</li>
     <li>item</li>
   </ul>
 </div>
    #+END_SRC

    #+BEGIN_SRC css
 cls0 > ul > li {
     /* your code */
 }
    #+END_SRC
 19. increase space between *letters* in a paragraph?
    #+BEGIN_SRC css
 .element {
     letter-spacing: 5px;
 }
    #+END_SRC
 20. increase space between *words* ?
    #+BEGIN_SRC css
 .element {
     word-spacing: 5px;
 }
    #+END_SRC
 21. capitalize an entire *paragraph* ?
    #+BEGIN_SRC css
 .element {
     text-transform: capitalize;
 }
    #+END_SRC
 22. add *hover* action to an element?
     #+BEGIN_SRC css
     .element:hover {
     /* code */
     }
     #+END_SRC
 23. add *opacity* to an element?
    #+BEGIN_SRC css
 .element {
     opacity: 0.5;
 }

    #+END_SRC
 24. add a *border* around an element?
    #+BEGIN_SRC css
 .element {
     border-style: solid;
 }
    #+END_SRC
 25. add *border width* of an element?
    #+BEGIN_SRC css
 .element {
     border-width: 10px;
 }
    #+END_SRC
 26. overlap two elements?
    with *negative margin*
 27. make list items on one line?
    #+BEGIN_SRC html
 <ul>
     <li>item1</li>
     <li>item2</li>
     <li>item3</li>
 </ul>
    #+END_SRC

    #+BEGIN_SRC css
 ul > li {
    display: inline;
 }
    #+END_SRC
 28. display text in the center of the element?
    use *text-align: center*
 29. create a *navigation bar* of a website?
    #+BEGIN_SRC html
 <div class="navbar">
   <a href="#">Home</a>
   <a href="#">Contact</a>
   <a href="#">Coffee</a>
   <a href="#">Music</a>
 </div>
    #+END_SRC

    #+BEGIN_SRC css
 .navbar a {
     font-family: Fira Code;
     margin-right: 20px;
     font-size: 1rem;
     text-decoration: none;
 }

 .navbar {
     background: black;
 }
    #+END_SRC
 30. add a *custom font* to the css?
    add the following on the top of css file
    #+BEGIN_SRC css
 @font-face {
     font-family: "font-name";
     src: url("../fonts/my-font.ttf");
 }
    #+END_SRC
 31. set opacity of an element?
    use *opacity* attribute
    #+BEGIN_SRC css
 .element {
     opacity: 0.5;
 }
    #+END_SRC
 32. use *image* as a background instead of straight color?
    #+BEGIN_SRC css
 .element {
     background: url("/path/to/image.extension");
 }
    #+END_SRC
 33. make an image non-repeatable?
    #+BEGIN_SRC css
 .element {
     background: url("/path/to/image.extension");
     background-repeat: no-repeat;
 }
    #+END_SRC
 34. *spread* the image into one area (div) ?
    #+BEGIN_SRC css
 .element {
     background: url("/path/to/image.extension");
     background-size: cover;
 }
    #+END_SRC
 35. *center* the background image?
    #+BEGIN_SRC css
 .element {
     background-position: center;
 }
    #+END_SRC
 36. adjust the position by x and y values of a background image?
    use persentages to adjust
    #+BEGIN_SRC css
 .element {
     background: url("/path/to/image.extension");
     background-position: 20% 50%;
 }
    #+END_SRC
 37. add an image with protected *aspect ratio*?
    #+BEGIN_SRC css
 .element {
     background: url("/path/to/image.jpg");
     background-size: contain;
 }
    #+END_SRC
 38. align text to the center?
    #+BEGIN_SRC css
 .element {
     text-align: center;
 }
    #+END_SRC
 39. make a *parallax* effect?
    use *background-attachment*
    #+BEGIN_SRC css
 .banner {
     background: url("../img/bg.jpg");
     background-attachment: fixed;
 }
    #+END_SRC
 40. make a gradient element? use *grey* and *white*
    #+BEGIN_SRC css
 .element {
     background-attachment: linear-gradient(grey, white);
 }
    #+END_SRC
 41. give *angle* to the gradient?
    #+BEGIN_SRC css
 .element {
     background: linear-gradient(45deg, white, black);
 }
    #+END_SRC
 42. make a nice *transition effect* ? when user scrolls down the transparent
    screen comes on the background image. the background image does not change btw
    #+BEGIN_SRC html
 <div class="first">
 </div>

 <div class="second">
 </div>
    #+END_SRC

    #+BEGIN_SRC css
 .first {
     background: url("../img/bg2.jpg");
     background-attachment: fixed;
     background-size: cover;
     background-position: center;
     background-repeat: no-repeat;
     height: 100vh;
 }

 .second {
     background: url("../img/bg2.jpg");
     background-attachment: fixed;
     background-size: cover;
     background-position: center;
     background-repeat: no-repeat;
     opacity: 0.5;
     height: 100vh;
 }
    #+END_SRC
 43.
**** what is
 + what css stands for?
   cascading style sheets
 + what is the *syntax* for css?
   #+BEGIN_SRC css
selector{
    property0 : value0;
    property1 : value1;
}
   #+END_SRC
 + what is the difference between *span* and *div*
   - div is usefull for grouping elements together
   - span is usefull for assigning some class or id names inline
   - when elements grouped with *div* it will cause a new line
   - hovewer span won't cause a new line
 + what is the best way to represent a color ?
   using *rgb*
   #+BEGIN_SRC css
h1 {
    color : rgb(100,100,100);
}
   #+END_SRC
 + what is the most primitive way to represent size?
   pixels.
   #+BEGIN_SRC css
.cls0 {
    font-size : 12px;
}
   #+END_SRC
 + what is the drawbacks of representing something in pixels?
   since pixels are constant and depends on nothing, it makes the element non-responsive. so the size will not change when screen size change
 + what is *font stack* ?
   it is a concept where we present different font families to the web browser. if web browser fails to render the first font family then it tryes out the second one. if web browser fails at every font then the last one (monospace) font will be assumed

   example usage;
   #+BEGIN_SRC css
.element {
    font-family : 'Courier New' Courier, monospace;
}
   #+END_SRC
 + what is *css box mode* ?
   #+BEGIN_SRC text
+-------------------------------------+
|               Margin                |
|  +-------------------------------+  |
|  |            Border             |  |
|  |  +-------------------------+  |  |
|  |  |         Padding         |  |  |
|  |  |  +-------------------+  |  |  |
|  |  |  |      Content      |  |  |  |
|  |  |  +-------------------+  |  |  |
|  |  +-------------------------+  |  |
|  +-------------------------------+  |
+-------------------------------------+
   #+END_SRC
 + what is the shortcut way of writin *borders*?
   parameter order matters!
   #+BEGIN_SRC css
.element {
    /* width style and color */
    border: 5px solid blue;
}
   #+END_SRC
 + what is the *difference* between _border_ and _outline_ ?
   - borders are like glued to the content. we can't put space between content and border
   - outlines in other hand they are more flexible than borders. also we can use only outlines instead of borders. we can give *offset* to outlines which borders can't quite handle.

      #+BEGIN_SRC css
   .element {
       outline: 0.2rem solid black;
       outline-offset: 10px /* set outline 10px above the content */
       outline-offset: -10px /* set outline 10px inside the content */
   }
      #+END_SRC
 + what are *gradients* ?
   it's a color effect. _two or more_ colors are mixed into one element. and result will look
   like an _oval_ object. used in button coloring
**** flash cards
 + where css can be added?
   1. inline
   2. inside <head> element
   3. seperate file
 + when you have multiple css files in which directory should we put them?
   css/
 + what happens if we add *internal css* in a page that has *external css* ?
   internal css will override external one
 + what happens if we add *inline css* in a page that has *external css* or *internal css* ?
   *inline* css will override *external* and *internal* ones
 + what does *color* attrubute do?
   it changes the text color
 + can we add *multiple classes* inside an element?
   we can also add *classes* with *ids*
   #+BEGIN_SRC html
<h3 class="title" class="lowercase" id="testid"> hello </h3>
   #+END_SRC
 + unique elements should have ...
   id
 + why *div* blocks are used?
   to group elements. this helps us to specify elements in css
 + which grouping style causes *new line* ?
   div
 + where to get cool color schemes?
   1. [[https://coolors.co/][coolors]]
   2. [[https://color.adobe.com/explore][adobe color]]
 + what happens when we use *width* and *height* in persentage?
   the persentage will work depending on the *parent div*'s sizes. for example if parent div has 20px height and we give 50% height to the child then child will have 10px height
   #+BEGIN_SRC css
.parent {
    height : 20px;
    width : 20px;
}
.child {
    height : 50%; /* 20%50 = 10 */
    width : 50%; /* 20%50 = 10 */
}
   #+END_SRC
 + persentages will depend on ...
   parent values!
 + what *vw* and *vh* do?
   vw and vh are *measure units* in css. they are relative values depend on *screen size*. when browser window size change, then those values are also change
   example;

   #+BEGIN_SRC html
<div class="cls0">
</div>
<div class="cls1">
</div>
   #+END_SRC

   #+BEGIN_SRC css
.cls0 {
    background-color : orange;
    width : 50vw;
    height : 50vh;
}

.cls1 {
    background-color : yellow;
    width : 50vw;
    height : 50vh;
    margin-left: 50vw;
}
   #+END_SRC
 + what *calc()* function does in css?
   it takes two values with *px*, *vh*, *vw*, *rem*, *em* etc and applies arithmatic operations on them.
 + use case scenario of *calc()* function
   assume we have a *navbar* on top of the page and it has 100px height. now let's say we need a *banner* below navbar. this banner will have height of entire page (without scroll bar). how do we adjust that height automatically?

   in this case we can use *calc()* function like this:
   #+BEGIN_SRC html
<div class="navbar">
</div>

<div class="banner">
</div>
   #+END_SRC

   #+BEGIN_SRC css
*{
    margin : 0; /* zero out default margins */
}

.navbar {
    background : blue;
    height : 100px;
}

.banner {
    background : green;
    height : calc(100vh - 100px); /* 100vh - navbar.height */
}
   #+END_SRC
 + what *measure* type should we use on *line-height* property ?
   em
   #+BEGIN_SRC css
.element {
    line-height: 1em;
}
   #+END_SRC
 + what areas a,b,c and d effect in *padding: a b c d* ?
   #+BEGIN_SRC css
.element {
    padding: top, right, left, bottom;
}
   #+END_SRC
 + what border-radius value turn element into circle?
   50%
 + what *block elements* do when rendered?
   - always start a new line
   - takes over full width
 + what *inline elements* do when rendered?
   - does not start a new line
   - does not occupy the full width
 + for *block centering* what topics are used in css?
   flex and grids
 + browser will ignore margin's *margin-top* and *margin-bottom* properties if the element is ...
   inline
 + browser will ignore margin's *margin-left* and *margin-right* properties if the element is ...
   block
 + what property should we use to make the browser respect to *inline element* top and bottom margins?
   use *inline-block*
   #+BEGIN_SRC html
<a href="#">Home</a>
<a href="#">Contact</a>
<a href="#">Coffee</a>
<a href="#">Music</a>
   #+END_SRC

   #+BEGIN_SRC css
a {
    inline-block:
}
   #+END_SRC
 + create a nice banner with an image in bakcground
   #+BEGIN_SRC html
<div class=".banner">
  <p>some text here</p>
</div>
   #+END_SRC

  #+BEGIN_SRC css
.banner {
    background: url("../img/bg1.jpg"); /* load the image */
    background-size: cover; /* spread image across the div area */
    background-repeat: no-repeat; /* prevent repetition */
}
  #+END_SRC
 + what to do if background image is too bright and text on it is not visible?
   add some *opacity*
   #+BEGIN_SRC css
.element {
    background: url("/path/to/image.jpg");
    opacity: 0.5;
}
   #+END_SRC

*** javascript
:PROPERTIES:
:EXPORT_FILE_NAME: javascript-cheat-sheet
:EXPORT_TITLE: Javascript Cheat Sheet
:HUGO_BASE_DIR: ~/txt/blog/
:HUGO_SECTION: en/posts
:EXPORT_AUTHOR: savolla
:END:
**** concepts
***** JSON
+ javascript object notation
+ data representation format
+ used in *config* files
+ supported types;
  1. strings: "hello world", "savolla"
  2. numbers: 10, 1.5, -30
  3. boolean: true, false
  4. null: null
  5. arrays: [1,2,3], ["Hello", "world"]
  6. objects: {"key":"value"}, {"age":30}
+ everything in json is _valid javascript code_
**** tips
**** facts
+ best learningn resource : [[https://www.amazon.com/gp/bookseries/B01N9EBP9V][You Don't Know JS]]
**** how to
***** create a json file
this is actually an _array_ in javascript. this is why it starts with '[]'
#+begin_src js
[
    {
        "name":"software engineering",
        "delay": 2,
        "book":
        [
            {"name" : "codecomplete2"},
            {"name" : "codecomplete2"},
            {"name" : "codecomplete2"},
            {"name" : "codecomplete2"},
            {"name" : "codecomplete2"}
        ]
]
#+end_src
***** display json contents in html
1. paste the json string inside script tag and make it a string by surroud it with `
2. use =JSON.parse= method to make JSON parsable with indexes

#+begin_src html
<html>
  <head>
    <meta charset="UTF-8"/>
    <title>MultiTasker</title>
  </head>
  <body>
    <script type="text/javascript">
      let topics =
        `[
                {
                    "name":"software engineering",
                    "delay": 2,
                    "book":
                    [
                        {"name" : "codecomplete2"},
                        {"name" : "Applying UML"},
                        {"name" : "clean code"},
                        {"name" : "clean coder"},
                        {"name" : "solid principles"}
                    ]
                }
        ]`
        console.log( JSON.parse(topics)[0].book)
    </script>
  </body>
</html>
#+end_src
***** from codecamp
+ print something on screen?
  #+BEGIN_SRC js
  console.log("hello");
  #+END_SRC
+ declare a local variable?
  #+BEGIN_SRC js
  let loc = 5;
  #+END_SRC
+ declare a global variable?
  #+BEGIN_SRC js
  glob = 5;
  #+END_SRC
+ declare a constant variable?
  #+BEGIN_SRC js
  const c = 5;
  #+END_SRC
+ declare a function scope variable?
  #+BEGIN_SRC js
  var c = 5;
  #+END_SRC
+ concat two strings?
  #+BEGIN_SRC js
  let v0 = "Hello";
  let v1 = "World";
  let v2 = v0 + " " + v1;
  #+END_SRC
+ you increment and decrement numbers
  #+BEGIN_SRC js
  let a = 3;
  a++; // increment
  a--; // decrement
  console.log(a);
  #+END_SRC
+ declare floating point numbers?
  #+BEGIN_SRC js
  let f0 = 2.38;
  #+END_SRC
+ get the *length* of a string?
  #+BEGIN_SRC js
  let name = "savolla";
  console.log(name.length);
  #+END_SRC
+ reach first letter of a string?
  #+BEGIN_SRC js
  let x = "hello";
  console.log(x[0]);
  #+END_SRC
+ get the last character of a string?
  #+BEGIN_SRC js
  let name = "savolla";
  console.log(name[name.length - 1]);
  #+END_SRC
+ create an array ?
  #+BEGIN_SRC js
  let numbers = [1,2,3,4,5];
  #+END_SRC
+ create a multi-dimentional array?
  #+BEGIN_SRC js
  let A = [["abatox", 20],
           ["savolla", 28],
           ["lena", 48]];
  console.log(A[1][0]);
  #+END_SRC

  #+RESULTS:
  : savolla
  : undefined
+ *append* data into an array?
  #+BEGIN_SRC js
  let A = [1,2,3,4];
  A.push(5);
  console.log(A[A.length -1 ]);
  #+END_SRC

  #+RESULTS:
  : 5
  : undefined
+ remove an item from an array?
  #+BEGIN_SRC js
  let A = [1,2,3,4];
  A.pop();
  console.log(A[A.length -1 ]);
  #+END_SRC

  #+RESULTS:
  : 3
  : undefined
+ remove *first* element from an array?
  #+BEGIN_SRC js
  let A = [1,2,3];
  A.shift();
  console.log(A);
  #+END_SRC

  #+RESULTS:
  : [2 (\, 3)]
+ add an element to the beginning of the array?
  #+BEGIN_SRC js
  let A = [1,2,3,4];
  A.unshift(0);
  #+END_SRC
+ define a functions?
  #+BEGIN_SRC js
function sayHi( name ) {
    console.log("Hello " + name);
}
sayHi("lenacka");
sayHi("savolla");
sayHi("abatox");
  #+END_SRC

  #+RESULTS:
  : Hello lenacka
  : Hello savolla
  : Hello abatox
  : undefined
+ *dequeue* one element from an array?
  #+BEGIN_SRC js
function dequeue( array ) {
    return array.shift();
}
let A = [1,2,3,4,5];
console.log(dequeue(A));
  #+END_SRC

  #+RESULTS:
  : 1
  : undefined
+ write an *if* structure?
  #+BEGIN_SRC js
if ( condition ) {
    // code
}
else if ( condition ) {
    // code
}
else {
    // code
}
  #+END_SRC
+ use *and* and *or* operators in if statements?
  #+BEGIN_SRC js
if ( code && code || code )
    code
  #+END_SRC
+ create an object in js?
  #+BEGIN_SRC js
var dog = {
    "name" : "Ares",
    "color" : "brown",
    "age" : 12,
    "personality" : "calm"
};
  #+END_SRC
+ access a property of an object ?
  use *dot notation*
  #+BEGIN_SRC js
var dog = {
    "name" : "Ares",
    "color" : "brown",
    "age" : 12,
    "personality" : "calm"
};

n = dog.name;
m = dog.age;
  #+END_SRC
+ update an object property?
  #+BEGIN_SRC js
dog = {
    "name" : "",
    "color" : "",
    "age" : null,
    "personality" : ""
};

my_dog = dog;
my_dog.name = "Ares";
my_dog.color = "brown";
my_dog.age = 12;
my_dog.personality = "calm";
  #+END_SRC
+ *delete* a property from an object?
  #+BEGIN_SRC js
var dog = {
    "name" : "Ares",
    "color" : "brown",
    "age" : 12,
    "personality" : "calm"
};

delete dog.personality;
  #+END_SRC
+ test if an object has a specific property?
  use *hasOwnProperty* method of an object
  #+BEGIN_SRC js
dog = {
    "name" : "Ares",
    "color" : "",
    "age" : null
};

if ( dog.hasOwnProperty("color") )
    console.log("yes");
else
    console.log("no");

  #+END_SRC

  #+RESULTS:
  : yes
  : undefined
+ access nested object properties?
  #+BEGIN_SRC js
obj = {
    "p0" : "ABC",
    "internal" : {
        "p0" : "abc",
        "p1" : "def",
    }
}

console.log(obj.internal.p0);
  #+END_SRC
+ make a while loop?
  #+BEGIN_SRC js
  let i = 5;
  while ( i > 0 ) {
      console.log(i);
      i--;
  }
  #+END_SRC
+ make a for loop?
  just like in C or C++
  #+BEGIN_SRC js
for ( let i = 0; i < 5; ++i ) {
    console.log(i);
}
  #+END_SRC
+ lookup a value in an object list?
  when looking inside a list of objects use "[]" instead of "."
  #+BEGIN_SRC js
var contacts = [
    {
        "first_name" : "Akira",
        "last_name" : "Laine",
        "number" : "05330000000",
    },
    {
        "first_name" : "Harry",
        "last_name" : "Potter",
        "number" : "05330000001",
    },
    {
        "first_name" : "Sherlock",
        "last_name" : "Holmes",
        "number" : "05330000002",
    },
]

function lookup( name, property ) {
    for ( let i = 0; i < contacts.length; i++ ) {
        if ( contacts[i].first_name === name ) {
            return contacts[i][property] || "No such property " + property;
        }
    }
    return "No such contact";
}

let prop = lookup("Akira", "number");
console.log(prop);
  #+END_SRC

  #+RESULTS:
  : 05330000000
  : undefined
+ generate random number between 0 and 1?
 #+BEGIN_SRC js
Math.random();
 #+END_SRC
+ generate a *whole random* number between 0 & 100 ?
  #+BEGIN_SRC js
let r = Math.floor( Math.random() * 100 );
console.log(r);
  #+END_SRC

  #+RESULTS:
  : 48
  : undefined
+ generate a *whole random* number between any range?
  #+BEGIN_SRC js
function gen_rand( min, max ) {
    let r = Math.floor( Math.random() * (max - min) + min );
    return r;
}

let x = gen_rand(50, 100);
console.log(x);
  #+END_SRC
+ convert a *string* to *integer* ? (stoi)
  #+BEGIN_SRC js
let s = "54";
let q = "54";
console.log(s + q); /* outputs: 5454 */
s = parseInt(s);
q = parseInt(q);
console.log(s + q); /* outputs: 108 */
  #+END_SRC
+ convert a string to integer with a special base?
  #+BEGIN_SRC js
  let m = "10010111001";
  let n = parseInt(m, 2); /* outputs: 1209 */
  #+END_SRC
+ prevent objects from *mutation* ?
  use *Object.freeze(MY_OBJ)*
  #+BEGIN_SRC js
const MATH_CONSTANTS = {
    PI : 3.141592,
    E : 2.718281,
    PHI : 1.61803399
}
// const itself will not prevent mutation. need an extra step
Object.freeze(MATH_CONSTANTS);
  #+END_SRC
+ make *anonimous functions* in js?
  they also called *arrow functions* in js
  #+BEGIN_SRC js
  const magic = () => new Date();
  console.log(magic());
  #+END_SRC
+ make *anonimous functions* with parameters?
  used *s0* as a parameter below
  #+BEGIN_SRC js
const stoi = (s0) => parseInt(s0);
console.log(stoi("54"));
  #+END_SRC
+ concat two arrays into one?
  use *concat*
  #+BEGIN_SRC js
let A = [1,2,3,4];
let B = [5,6,7,8];
A = A.concat(B);
console.log(A);
  #+END_SRC

  #+RESULTS:
  : [1 (\, 2) (\, 3) (\, 4) (\, 5) (\, 6) (\, 7) (\, 8)]
+ check a number if it's an *integer* ?
  #+BEGIN_SRC js
  Number.isInteger(123);
  #+END_SRC
+ filter an array ?
  use *filter* function
  #+BEGIN_SRC js
let A = [1,2,3,4,5,6,7];
A = A.filter(x => (x > 4));
console.log(A);
  #+END_SRC
+ convert a string into an *array of words*?
  #+BEGIN_SRC js
let s = "that was a dark and stormy night";
let words = s.split(" ");
console.log(words);
  #+END_SRC
+ run a function through array elements?
  use *map()* function. it works like *transform* in C++
  #+BEGIN_SRC js
let A = [1,2,3,4,5];
A = A.map(x => x*2);
console.log(A);
  #+END_SRC
+ fill an array with random values?
  1. create an array with 10 elements
  2. *fill* the array with zeros
  3. *map* the array with random values

  #+BEGIN_SRC js
  let A = new Array(10);
  A.fill(0);
  A = A.map(x => Math.floor(Math.random() * 10));
  #+END_SRC
+ create fixed size array like *int A[100];* in C?
  #+BEGIN_SRC js
let A = new Array(100);
  #+END_SRC
+ use *variables* inside *string template literals* ?
  use *${VAR_NAME}*
  #+BEGIN_SRC js
var Person = {
    "name" : "savolla",
    "age" : 28
}
let s = `Hello, my name is ${Person.name}`;
  #+END_SRC
+ write a function that returns an object?
  this is the best way to return an object

  here is the *long one*
  #+BEGIN_SRC js
function makeDog( name, age, color ) {
    return {
        name : name,
        age : age,
        color : color
    };
}
ares = makeDog("ares", 12, "brown");
puki = makeDog("puki", 8, "white");
  #+END_SRC

  here is the *short one*
  #+BEGIN_SRC js
const makeDog = ( name, age, color ) => ( {name, age, color} );
ares = makeDog("ares", 12, "brown");
puki = makeDog("puki", 8, "white");
  #+END_SRC
+ make objects have methods?
  #+BEGIN_SRC js
const circle = {
    x : 0,
    y : 0,
    grow : function() {
        this.x++;
        this.y++;
    },
    shrink : function() {
        this.x--;
        this.y--;
    },
    eliptic : function( px, py ) {
        this.x = px;
        this.y = py;
    }
}
  #+END_SRC
+ create a constructor of a class?
  just like in C++
  #+BEGIN_SRC js
class veggie {
    constructor(name) {
        this.name = name;
    }
}

cabbage = new veggie("cabb");
console.log(cabbage.name);
  #+END_SRC
+ import a specific function from another js file?
  it's like *from matplotlib import pyplot* in python
  #+BEGIN_SRC js
import { function_name } from "path/to/file"
  #+END_SRC
  notice that we didn't use file extension in *path/to/file*
**** flashcards
+ 4 ways to declare a variable?
    #+BEGIN_SRC js
    var a = "savolla"; // function scope variable
    let a = "savolla"; // local variable
    const pi = 3.141592 // constant variable
    x = 87; // global variable
    #+END_SRC
+ what are *function scope* variables?
  they are *global* just in function scope
  #+BEGIN_SRC js
function f() {
    for ( let i = 0; i < 5; ++i ) {
        var f_global = 10;
    }
    console.log(f_global);
}

f();
  #+END_SRC

  #+RESULTS:
  : 10
  : undefined
+ do javascript confused with integer division?
  No. it can output floats when dividing two integers
  #+BEGIN_SRC js
  let a = 7;
  let b = 2;
  let c = a / b;
  console.log(c);
  #+END_SRC
+ do javascript support compound operators?
  Yes.
  #+BEGIN_SRC js
  let a = 3;
  a += 2;
  a -= 2;
  a *= 3;
  a /= 2;
  #+END_SRC
+ what to do if there are *double quotes* inside a string?
  single quote that string to avoid *escaping*
  #+BEGIN_SRC js
  let ling = '<a href="https://www.example.com">Click</a>';
  #+END_SRC
+ can we change a specific character in a string by indexy?
  No. strings are immutable
  #+BEGIN_SRC js
  let name = "vavolla";
  name[0] = "s"; // FIXME: ERROR
  #+END_SRC

  #+RESULTS:
+ can we store *different typed* values in an array?
  Yes!
  #+BEGIN_SRC js
  let multi = ["savolla", 28, 105.43, true, 2==1];
  console.log(multi[0]);
  console.log(multi[1]);
  console.log(multi[2]);
  console.log(multi[3]);
  console.log(multi[4]);
  #+END_SRC

  #+RESULTS:
  : savolla
  : 28
  : 105.43
  : true
  : false
  : undefined
+ can we also store *expressions* into an array?
  Yes!
  #+BEGIN_SRC js
  let multi = [2==2, 2==1];
  console.log(multi[0]);
  console.log(multi[1]);
  #+END_SRC

  #+RESULTS:
  : true
  : false
  : undefined
+ can we modify arrays using bracket notation?
  Yes! this does not work with strings but arrays are okay with that
  #+BEGIN_SRC js
  let A = ['a','b','c'];
  A[0] = 'x';
  A[1] = 'y';
  A[2] = 'z';
  #+END_SRC
+ what happens if we *pop* a multi-dimentional array?
  #+BEGIN_SRC js
  let A = [[1,2],
           [3,3],
           [4,5]];
  A.pop();
  console.log(A);
  #+END_SRC

  #+RESULTS:
  : [[1 (\, 2)] (\, [3 (\, 3)])]
+ can we remove *curly brackets* from single lined *if* ?
  Yes! javascript *allows* that
  #+BEGIN_SRC js
  if ( condition )
      x = 10;
  #+END_SRC
+ how *==* operator behaves in javascript?
  it can compare values *type independent*
  #+BEGIN_SRC js
let a = '3';
let b = 3;
if ( a == b )
    console.log("yes");
else
    console.log("no");
  #+END_SRC

  #+RESULTS:
  : yes
  : undefined
+ how *===* operator behaves in javascript?
  it works like *==* but this time it compares *same types*
  #+BEGIN_SRC js
let a = '3';
let b = 3;
if ( a === b )
    console.log("yes");
else
    console.log("no");
  #+END_SRC

  #+RESULTS:
  : no
  : undefined
+ what is the opposite of *===* operator ?
  #+BEGIN_SRC js
  !==
  #+END_SRC
+ how *switch* statements work in js?
  just like in C++ :)
+ iterate *nested loops*
  #+BEGIN_SRC js
A =[];
for ( let i = 0; i<3; ++i ) {
    A.push([]);
    for ( let j = 0; j<3; ++j ) {
        A[i].push(j);
    }
}
console.log(A);
  #+END_SRC
+ example of contacts list with js objects
  #+BEGIN_SRC js
var contacts = [
    {
        "first_name" : "Akira",
        "last_name" : "Laine",
        "number" : "05330000000",
    },
    {
        "first_name" : "Harry",
        "last_name" : "Potter",
        "number" : "05330000001",
    },
    {
        "first_name" : "Sherlock",
        "last_name" : "Holmes",
        "number" : "05330000002",
    },
]

for ( let i = 0; i< contacts.length; ++i ) {
    console.log(contacts[i].first_name);
    console.log(contacts[i].last_name);
    console.log(contacts[i].number);
}
  #+END_SRC
+ does javascript allow us to use *ternary* operators?
  Yes!
  #+BEGIN_SRC js
let a = 2;
let b = 7;
let c;
a > b ? c = 3 : c = 1;
console.log(c);
  #+END_SRC
+ how to do *nested ternary* operator?
  #+BEGIN_SRC js
function sign( n ) {
    return n > 0 ? "+" : n < 0 ? "-" : "0";
}

console.log(sign(-32)); // outputs: -
  #+END_SRC
+ can we change values of *const* array?
  Yes! I don't know why but yes we can!
  #+BEGIN_SRC js
const s = [1,2,3,4,5];
s[0] = 111;
s[4] = 112;
s[2] = 113;
  #+END_SRC
+ which *higher order* functions javascript have?
  #+BEGIN_SRC js
filter();
map();
sort();
split();
reduce();
  #+END_SRC
+ what *higher order function* can be used to sum every element in an array?

  use *reduce()*
  #+BEGIN_SRC js
  let A = [1,2,3,4,5];
  A = A.reduce((result = 0, x) => result += x);
  console.log(A);
  #+END_SRC
+ what the *rest operator* does?
  it let's us to call functions with infinite arguments. when it's used in function parameters, it treats arguments as *array*

  #+BEGIN_SRC js
function sum(...args) {
    return args.reduce( (x, result = 0) => result += x);
}
console.log(sum(1,2,3,4,5,6)); // outputs: 21
  #+END_SRC
+ what is *destructuring technique* ?
  it's a shortcut for assigning *Object properties* to another Object
  #+BEGIN_SRC js
var dog = {
    "name" : "ares",
    "color" : "brown",
    "age" : 12
};

var NEW_DOG = {
    "name" : a,
    "color" : b,
    "age" : c
} = dog;
  #+END_SRC
+ what are the benefits of *string template literals* ?
  1. variables can be used inside the string. without concatination
  2. double quotes can be used without escaping them
  3. new lines treated as new lines. so we can make multi-line strings
+ how *private* class members look in js?
  use *underscore* before the name
  #+BEGIN_SRC js
class Person {
    constructor(name) {
        this._name = name;
    }
}
  #+END_SRC
**** problems & solutions
*** assembly
**** facts
**** how to
***** make Linux Syscalls in different Architectures

| arch   | instruction | syscall NR | return | arg0 | arg1 | arg2 | arg3 | arg4 | arg5 |
|--------+-------------+------------+--------+------+------+------+------+------+------|
| x86    | =init 0x80= | eax        | eax    | ebx  | ecx  | edx  | esi  | edi  | ebp  |
| x86_64 | =syscall=   | rax        | rax    | rdi  | rsi  | rdx  | r10  | r8   | r9   |
| ARM    | =svc 0=     | r7         | r0     | r0   | r1   | r2   | r3   | r4   | r5   |
| ARM64  | =svc 0=     | x8         | x0     | x0   | x1   | x2   | x3   | x4   | x5   |

**** ABIs
***** x86 Linux
****** syscall table
|  NR | syscall name           |  %eax | arg0 (%ebx)                       | arg1 (%ecx)                         | arg2 (%edx)                                   | arg3 (%esi)                             | arg4 (%edi)                                 | arg5 (%ebp)         |
|-----+------------------------+-------+-----------------------------------+-------------------------------------+-----------------------------------------------+-----------------------------------------+---------------------------------------------+---------------------|
|   0 | restart_syscall        |  0x00 | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
|   1 | exit                   |  0x01 | int error_code                    | -                                   | -                                             | -                                       | -                                           | -                   |
|   2 | fork                   |  0x02 | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
|   3 | read                   |  0x03 | unsigned int fd                   | char *buf                           | size_t count                                  | -                                       | -                                           | -                   |
|   4 | write                  |  0x04 | unsigned int fd                   | const char *buf                     | size_t count                                  | -                                       | -                                           | -                   |
|   5 | open                   |  0x05 | const char *filename              | int flags                           | umode_t mode                                  | -                                       | -                                           | -                   |
|   6 | close                  |  0x06 | unsigned int fd                   | -                                   | -                                             | -                                       | -                                           | -                   |
|   7 | waitpid                |  0x07 | pid_t pid                         | int *stat_addr                      | int options                                   | -                                       | -                                           | -                   |
|   8 | creat                  |  0x08 | const char *pathname              | umode_t mode                        | -                                             | -                                       | -                                           | -                   |
|   9 | link                   |  0x09 | const char *oldname               | const char *newname                 | -                                             | -                                       | -                                           | -                   |
|  10 | unlink                 |  0x0a | const char *pathname              | -                                   | -                                             | -                                       | -                                           | -                   |
|  11 | execve                 |  0x0b | const char *filename              | const char *const *argv             | const char *const *envp                       | -                                       | -                                           | -                   |
|  12 | chdir                  |  0x0c | const char *filename              | -                                   | -                                             | -                                       | -                                           | -                   |
|  13 | time                   |  0x0d | time_t *tloc                      | -                                   | -                                             | -                                       | -                                           | -                   |
|  14 | mknod                  |  0x0e | const char *filename              | umode_t mode                        | unsigned dev                                  | -                                       | -                                           | -                   |
|  15 | chmod                  |  0x0f | const char *filename              | umode_t mode                        | -                                             | -                                       | -                                           | -                   |
|  16 | lchown                 |  0x10 | const char *filename              | uid_t user                          | gid_t group                                   | -                                       | -                                           | -                   |
|  17 | break                  |  0x11 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
|  18 | oldstat                |  0x12 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
|  19 | lseek                  |  0x13 | unsigned int fd                   | off_t offset                        | unsigned int whence                           | -                                       | -                                           | -                   |
|  20 | getpid                 |  0x14 | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
|  21 | mount                  |  0x15 | char *dev_name                    | char *dir_name                      | char *type                                    | unsigned long flags                     | void *data                                  | -                   |
|  22 | umount                 |  0x16 | char *name                        | int flags                           | -                                             | -                                       | -                                           | -                   |
|  23 | setuid                 |  0x17 | uid_t uid                         | -                                   | -                                             | -                                       | -                                           | -                   |
|  24 | getuid                 |  0x18 | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
|  25 | stime                  |  0x19 | time_t *tptr                      | -                                   | -                                             | -                                       | -                                           | -                   |
|  26 | ptrace                 |  0x1a | long request                      | long pid                            | unsigned long addr                            | unsigned long data                      | -                                           | -                   |
|  27 | alarm                  |  0x1b | unsigned int seconds              | -                                   | -                                             | -                                       | -                                           | -                   |
|  28 | oldfstat               |  0x1c | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
|  29 | pause                  |  0x1d | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
|  30 | utime                  |  0x1e | char *filename                    | struct utimbuf *times               | -                                             | -                                       | -                                           | -                   |
|  31 | stty                   |  0x1f | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
|  32 | gtty                   |  0x20 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
|  33 | access                 |  0x21 | const char *filename              | int mode                            | -                                             | -                                       | -                                           | -                   |
|  34 | nice                   |  0x22 | int increment                     | -                                   | -                                             | -                                       | -                                           | -                   |
|  35 | ftime                  |  0x23 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
|  36 | sync                   |  0x24 | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
|  37 | kill                   |  0x25 | pid_t pid                         | int sig                             | -                                             | -                                       | -                                           | -                   |
|  38 | rename                 |  0x26 | const char *oldname               | const char *newname                 | -                                             | -                                       | -                                           | -                   |
|  39 | mkdir                  |  0x27 | const char *pathname              | umode_t mode                        | -                                             | -                                       | -                                           | -                   |
|  40 | rmdir                  |  0x28 | const char *pathname              | -                                   | -                                             | -                                       | -                                           | -                   |
|  41 | dup                    |  0x29 | unsigned int fildes               | -                                   | -                                             | -                                       | -                                           | -                   |
|  42 | pipe                   |  0x2a | int *fildes                       | -                                   | -                                             | -                                       | -                                           | -                   |
|  43 | times                  |  0x2b | struct tms *tbuf                  | -                                   | -                                             | -                                       | -                                           | -                   |
|  44 | prof                   |  0x2c | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
|  45 | brk                    |  0x2d | unsigned long brk                 | -                                   | -                                             | -                                       | -                                           | -                   |
|  46 | setgid                 |  0x2e | gid_t gid                         | -                                   | -                                             | -                                       | -                                           | -                   |
|  47 | getgid                 |  0x2f | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
|  48 | signal                 |  0x30 | int sig                           | __sighandler_t handler              | -                                             | -                                       | -                                           | -                   |
|  49 | geteuid                |  0x31 | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
|  50 | getegid                |  0x32 | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
|  51 | acct                   |  0x33 | const char *name                  | -                                   | -                                             | -                                       | -                                           | -                   |
|  52 | umount2                |  0x34 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
|  53 | lock                   |  0x35 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
|  54 | ioctl                  |  0x36 | unsigned int fd                   | unsigned int cmd                    | unsigned long arg                             | -                                       | -                                           | -                   |
|  55 | fcntl                  |  0x37 | unsigned int fd                   | unsigned int cmd                    | unsigned long arg                             | -                                       | -                                           | -                   |
|  56 | mpx                    |  0x38 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
|  57 | setpgid                |  0x39 | pid_t pid                         | pid_t pgid                          | -                                             | -                                       | -                                           | -                   |
|  58 | ulimit                 |  0x3a | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
|  59 | oldolduname            |  0x3b | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
|  60 | umask                  |  0x3c | int mask                          | -                                   | -                                             | -                                       | -                                           | -                   |
|  61 | chroot                 |  0x3d | const char *filename              | -                                   | -                                             | -                                       | -                                           | -                   |
|  62 | ustat                  |  0x3e | unsigned dev                      | struct ustat *ubuf                  | -                                             | -                                       | -                                           | -                   |
|  63 | dup2                   |  0x3f | unsigned int oldfd                | unsigned int newfd                  | -                                             | -                                       | -                                           | -                   |
|  64 | getppid                |  0x40 | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
|  65 | getpgrp                |  0x41 | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
|  66 | setsid                 |  0x42 | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
|  67 | sigaction              |  0x43 | int                               | const struct old_sigaction *        | struct old_sigaction *                        | -                                       | -                                           | -                   |
|  68 | sgetmask               |  0x44 | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
|  69 | ssetmask               |  0x45 | int newmask                       | -                                   | -                                             | -                                       | -                                           | -                   |
|  70 | setreuid               |  0x46 | uid_t ruid                        | uid_t euid                          | -                                             | -                                       | -                                           | -                   |
|  71 | setregid               |  0x47 | gid_t rgid                        | gid_t egid                          | -                                             | -                                       | -                                           | -                   |
|  72 | sigsuspend             |  0x48 | int unused1                       | int unused2                         | old_sigset_t mask                             | -                                       | -                                           | -                   |
|  73 | sigpending             |  0x49 | old_sigset_t *uset                | -                                   | -                                             | -                                       | -                                           | -                   |
|  74 | sethostname            |  0x4a | char *name                        | int len                             | -                                             | -                                       | -                                           | -                   |
|  75 | setrlimit              |  0x4b | unsigned int resource             | struct rlimit *rlim                 | -                                             | -                                       | -                                           | -                   |
|  76 | getrlimit              |  0x4c | unsigned int resource             | struct rlimit *rlim                 | -                                             | -                                       | -                                           | -                   |
|  77 | getrusage              |  0x4d | int who                           | struct rusage *ru                   | -                                             | -                                       | -                                           | -                   |
|  78 | gettimeofday           |  0x4e | struct timeval *tv                | struct timezone *tz                 | -                                             | -                                       | -                                           | -                   |
|  79 | settimeofday           |  0x4f | struct timeval *tv                | struct timezone *tz                 | -                                             | -                                       | -                                           | -                   |
|  80 | getgroups              |  0x50 | int gidsetsize                    | gid_t *grouplist                    | -                                             | -                                       | -                                           | -                   |
|  81 | setgroups              |  0x51 | int gidsetsize                    | gid_t *grouplist                    | -                                             | -                                       | -                                           | -                   |
|  82 | select                 |  0x52 | int n                             | fd_set *inp                         | fd_set *outp                                  | fd_set *exp                             | struct timeval *tvp                         | -                   |
|  83 | symlink                |  0x53 | const char *old                   | const char *new                     | -                                             | -                                       | -                                           | -                   |
|  84 | oldlstat               |  0x54 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
|  85 | readlink               |  0x55 | const char *path                  | char *buf                           | int bufsiz                                    | -                                       | -                                           | -                   |
|  86 | uselib                 |  0x56 | const char *library               | -                                   | -                                             | -                                       | -                                           | -                   |
|  87 | swapon                 |  0x57 | const char *specialfile           | int swap_flags                      | -                                             | -                                       | -                                           | -                   |
|  88 | reboot                 |  0x58 | int magic1                        | int magic2                          | unsigned int cmd                              | void *arg                               | -                                           | -                   |
|  89 | readdir                |  0x59 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
|  90 | mmap                   |  0x5a | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
|  91 | munmap                 |  0x5b | unsigned long addr                | size_t len                          | -                                             | -                                       | -                                           | -                   |
|  92 | truncate               |  0x5c | const char *path                  | long length                         | -                                             | -                                       | -                                           | -                   |
|  93 | ftruncate              |  0x5d | unsigned int fd                   | unsigned long length                | -                                             | -                                       | -                                           | -                   |
|  94 | fchmod                 |  0x5e | unsigned int fd                   | umode_t mode                        | -                                             | -                                       | -                                           | -                   |
|  95 | fchown                 |  0x5f | unsigned int fd                   | uid_t user                          | gid_t group                                   | -                                       | -                                           | -                   |
|  96 | getpriority            |  0x60 | int which                         | int who                             | -                                             | -                                       | -                                           | -                   |
|  97 | setpriority            |  0x61 | int which                         | int who                             | int niceval                                   | -                                       | -                                           | -                   |
|  98 | profil                 |  0x62 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
|  99 | statfs                 |  0x63 | const char * path                 | struct statfs *buf                  | -                                             | -                                       | -                                           | -                   |
| 100 | fstatfs                |  0x64 | unsigned int fd                   | struct statfs *buf                  | -                                             | -                                       | -                                           | -                   |
| 101 | ioperm                 |  0x65 | unsigned long from                | unsigned long num                   | int on                                        | -                                       | -                                           | -                   |
| 102 | socketcall             |  0x66 | int call                          | unsigned long *args                 | -                                             | -                                       | -                                           | -                   |
| 103 | syslog                 |  0x67 | int type                          | char *buf                           | int len                                       | -                                       | -                                           | -                   |
| 104 | setitimer              |  0x68 | int which                         | struct itimerval *value             | struct itimerval *ovalue                      | -                                       | -                                           | -                   |
| 105 | getitimer              |  0x69 | int which                         | struct itimerval *value             | -                                             | -                                       | -                                           | -                   |
| 106 | stat                   |  0x6a | const char *filename              | struct __old_kernel_stat *statbuf   | -                                             | -                                       | -                                           | -                   |
| 107 | lstat                  |  0x6b | const char *filename              | struct __old_kernel_stat *statbuf   | -                                             | -                                       | -                                           | -                   |
| 108 | fstat                  |  0x6c | unsigned int fd                   | struct __old_kernel_stat *statbuf   | -                                             | -                                       | -                                           | -                   |
| 109 | olduname               |  0x6d | struct oldold_utsname *           | -                                   | -                                             | -                                       | -                                           | -                   |
| 110 | iopl                   |  0x6e | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 111 | vhangup                |  0x6f | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
| 112 | idle                   |  0x70 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 113 | vm86old                |  0x71 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 114 | wait4                  |  0x72 | pid_t pid                         | int *stat_addr                      | int options                                   | struct rusage *ru                       | -                                           | -                   |
| 115 | swapoff                |  0x73 | const char *specialfile           | -                                   | -                                             | -                                       | -                                           | -                   |
| 116 | sysinfo                |  0x74 | struct sysinfo *info              | -                                   | -                                             | -                                       | -                                           | -                   |
| 117 | ipc                    |  0x75 | unsigned int call                 | int first                           | unsigned long second                          | unsigned long third                     | void *ptr                                   | long fifth          |
| 118 | fsync                  |  0x76 | unsigned int fd                   | -                                   | -                                             | -                                       | -                                           | -                   |
| 119 | sigreturn              |  0x77 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 120 | clone                  |  0x78 | unsigned long                     | unsigned long                       | int *                                         | int *                                   | unsigned long                               | -                   |
| 121 | setdomainname          |  0x79 | char *name                        | int len                             | -                                             | -                                       | -                                           | -                   |
| 122 | uname                  |  0x7a | struct old_utsname *              | -                                   | -                                             | -                                       | -                                           | -                   |
| 123 | modify_ldt             |  0x7b | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 124 | adjtimex               |  0x7c | struct __kernel_timex *txc_p      | -                                   | -                                             | -                                       | -                                           | -                   |
| 125 | mprotect               |  0x7d | unsigned long start               | size_t len                          | unsigned long prot                            | -                                       | -                                           | -                   |
| 126 | sigprocmask            |  0x7e | int how                           | old_sigset_t *set                   | old_sigset_t *oset                            | -                                       | -                                           | -                   |
| 127 | create_module          |  0x7f | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 128 | init_module            |  0x80 | void *umod                        | unsigned long len                   | const char *uargs                             | -                                       | -                                           | -                   |
| 129 | delete_module          |  0x81 | const char *name_user             | unsigned int flags                  | -                                             | -                                       | -                                           | -                   |
| 130 | get_kernel_syms        |  0x82 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 131 | quotactl               |  0x83 | unsigned int cmd                  | const char *special                 | qid_t id                                      | void *addr                              | -                                           | -                   |
| 132 | getpgid                |  0x84 | pid_t pid                         | -                                   | -                                             | -                                       | -                                           | -                   |
| 133 | fchdir                 |  0x85 | unsigned int fd                   | -                                   | -                                             | -                                       | -                                           | -                   |
| 134 | bdflush                |  0x86 | int func                          | long data                           | -                                             | -                                       | -                                           | -                   |
| 135 | sysfs                  |  0x87 | int option                        | unsigned long arg1                  | unsigned long arg2                            | -                                       | -                                           | -                   |
| 136 | personality            |  0x88 | unsigned int personality          | -                                   | -                                             | -                                       | -                                           | -                   |
| 137 | afs_syscall            |  0x89 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 138 | setfsuid               |  0x8a | uid_t uid                         | -                                   | -                                             | -                                       | -                                           | -                   |
| 139 | setfsgid               |  0x8b | gid_t gid                         | -                                   | -                                             | -                                       | -                                           | -                   |
| 140 | _llseek                |  0x8c | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 141 | getdents               |  0x8d | unsigned int fd                   | struct linux_dirent *dirent         | unsigned int count                            | -                                       | -                                           | -                   |
| 142 | _newselect             |  0x8e | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 143 | flock                  |  0x8f | unsigned int fd                   | unsigned int cmd                    | -                                             | -                                       | -                                           | -                   |
| 144 | msync                  |  0x90 | unsigned long start               | size_t len                          | int flags                                     | -                                       | -                                           | -                   |
| 145 | readv                  |  0x91 | unsigned long fd                  | const struct iovec *vec             | unsigned long vlen                            | -                                       | -                                           | -                   |
| 146 | writev                 |  0x92 | unsigned long fd                  | const struct iovec *vec             | unsigned long vlen                            | -                                       | -                                           | -                   |
| 147 | getsid                 |  0x93 | pid_t pid                         | -                                   | -                                             | -                                       | -                                           | -                   |
| 148 | fdatasync              |  0x94 | unsigned int fd                   | -                                   | -                                             | -                                       | -                                           | -                   |
| 149 | _sysctl                |  0x95 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 150 | mlock                  |  0x96 | unsigned long start               | size_t len                          | -                                             | -                                       | -                                           | -                   |
| 151 | munlock                |  0x97 | unsigned long start               | size_t len                          | -                                             | -                                       | -                                           | -                   |
| 152 | mlockall               |  0x98 | int flags                         | -                                   | -                                             | -                                       | -                                           | -                   |
| 153 | munlockall             |  0x99 | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
| 154 | sched_setparam         |  0x9a | pid_t pid                         | struct sched_param *param           | -                                             | -                                       | -                                           | -                   |
| 155 | sched_getparam         |  0x9b | pid_t pid                         | struct sched_param *param           | -                                             | -                                       | -                                           | -                   |
| 156 | sched_setscheduler     |  0x9c | pid_t pid                         | int policy                          | struct sched_param *param                     | -                                       | -                                           | -                   |
| 157 | sched_getscheduler     |  0x9d | pid_t pid                         | -                                   | -                                             | -                                       | -                                           | -                   |
| 158 | sched_yield            |  0x9e | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
| 159 | sched_get_priority_max |  0x9f | int policy                        | -                                   | -                                             | -                                       | -                                           | -                   |
| 160 | sched_get_priority_min |  0xa0 | int policy                        | -                                   | -                                             | -                                       | -                                           | -                   |
| 161 | sched_rr_get_interval  |  0xa1 | pid_t pid                         | struct __kernel_timespec *interval  | -                                             | -                                       | -                                           | -                   |
| 162 | nanosleep              |  0xa2 | struct __kernel_timespec *rqtp    | struct __kernel_timespec *rmtp      | -                                             | -                                       | -                                           | -                   |
| 163 | mremap                 |  0xa3 | unsigned long addr                | unsigned long old_len               | unsigned long new_len                         | unsigned long flags                     | unsigned long new_addr                      | -                   |
| 164 | setresuid              |  0xa4 | uid_t ruid                        | uid_t euid                          | uid_t suid                                    | -                                       | -                                           | -                   |
| 165 | getresuid              |  0xa5 | uid_t *ruid                       | uid_t *euid                         | uid_t *suid                                   | -                                       | -                                           | -                   |
| 166 | vm86                   |  0xa6 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 167 | query_module           |  0xa7 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 168 | poll                   |  0xa8 | struct pollfd *ufds               | unsigned int nfds                   | int timeout                                   | -                                       | -                                           | -                   |
| 169 | nfsservctl             |  0xa9 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 170 | setresgid              |  0xaa | gid_t rgid                        | gid_t egid                          | gid_t sgid                                    | -                                       | -                                           | -                   |
| 171 | getresgid              |  0xab | gid_t *rgid                       | gid_t *egid                         | gid_t *sgid                                   | -                                       | -                                           | -                   |
| 172 | prctl                  |  0xac | int option                        | unsigned long arg2                  | unsigned long arg3                            | unsigned long arg4                      | unsigned long arg5                          | -                   |
| 173 | rt_sigreturn           |  0xad | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 174 | rt_sigaction           |  0xae | int                               | const struct sigaction *            | struct sigaction *                            | size_t                                  | -                                           | -                   |
| 175 | rt_sigprocmask         |  0xaf | int how                           | sigset_t *set                       | sigset_t *oset                                | size_t sigsetsize                       | -                                           | -                   |
| 176 | rt_sigpending          |  0xb0 | sigset_t *set                     | size_t sigsetsize                   | -                                             | -                                       | -                                           | -                   |
| 177 | rt_sigtimedwait        |  0xb1 | const sigset_t *uthese            | siginfo_t *uinfo                    | const struct __kernel_timespec *uts           | size_t sigsetsize                       | -                                           | -                   |
| 178 | rt_sigqueueinfo        |  0xb2 | pid_t pid                         | int sig                             | siginfo_t *uinfo                              | -                                       | -                                           | -                   |
| 179 | rt_sigsuspend          |  0xb3 | sigset_t *unewset                 | size_t sigsetsize                   | -                                             | -                                       | -                                           | -                   |
| 180 | pread64                |  0xb4 | unsigned int fd                   | char *buf                           | size_t count                                  | loff_t pos                              | -                                           | -                   |
| 181 | pwrite64               |  0xb5 | unsigned int fd                   | const char *buf                     | size_t count                                  | loff_t pos                              | -                                           | -                   |
| 182 | chown                  |  0xb6 | const char *filename              | uid_t user                          | gid_t group                                   | -                                       | -                                           | -                   |
| 183 | getcwd                 |  0xb7 | char *buf                         | unsigned long size                  | -                                             | -                                       | -                                           | -                   |
| 184 | capget                 |  0xb8 | cap_user_header_t header          | cap_user_data_t dataptr             | -                                             | -                                       | -                                           | -                   |
| 185 | capset                 |  0xb9 | cap_user_header_t header          | const cap_user_data_t data          | -                                             | -                                       | -                                           | -                   |
| 186 | sigaltstack            |  0xba | const struct sigaltstack *uss     | struct sigaltstack *uoss            | -                                             | -                                       | -                                           | -                   |
| 187 | sendfile               |  0xbb | int out_fd                        | int in_fd                           | off_t *offset                                 | size_t count                            | -                                           | -                   |
| 188 | getpmsg                |  0xbc | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 189 | putpmsg                |  0xbd | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 190 | vfork                  |  0xbe | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
| 191 | ugetrlimit             |  0xbf | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 192 | mmap2                  |  0xc0 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 193 | truncate64             |  0xc1 | const char *path                  | loff_t length                       | -                                             | -                                       | -                                           | -                   |
| 194 | ftruncate64            |  0xc2 | unsigned int fd                   | loff_t length                       | -                                             | -                                       | -                                           | -                   |
| 195 | stat64                 |  0xc3 | const char *filename              | struct stat64 *statbuf              | -                                             | -                                       | -                                           | -                   |
| 196 | lstat64                |  0xc4 | const char *filename              | struct stat64 *statbuf              | -                                             | -                                       | -                                           | -                   |
| 197 | fstat64                |  0xc5 | unsigned long fd                  | struct stat64 *statbuf              | -                                             | -                                       | -                                           | -                   |
| 198 | lchown32               |  0xc6 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 199 | getuid32               |  0xc7 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 200 | getgid32               |  0xc8 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 201 | geteuid32              |  0xc9 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 202 | getegid32              |  0xca | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 203 | setreuid32             |  0xcb | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 204 | setregid32             |  0xcc | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 205 | getgroups32            |  0xcd | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 206 | setgroups32            |  0xce | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 207 | fchown32               |  0xcf | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 208 | setresuid32            |  0xd0 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 209 | getresuid32            |  0xd1 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 210 | setresgid32            |  0xd2 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 211 | getresgid32            |  0xd3 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 212 | chown32                |  0xd4 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 213 | setuid32               |  0xd5 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 214 | setgid32               |  0xd6 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 215 | setfsuid32             |  0xd7 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 216 | setfsgid32             |  0xd8 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 217 | pivot_root             |  0xd9 | const char *new_root              | const char *put_old                 | -                                             | -                                       | -                                           | -                   |
| 218 | mincore                |  0xda | unsigned long start               | size_t len                          | unsigned char * vec                           | -                                       | -                                           | -                   |
| 219 | madvise                |  0xdb | unsigned long start               | size_t len                          | int behavior                                  | -                                       | -                                           | -                   |
| 220 | getdents64             |  0xdc | unsigned int fd                   | struct linux_dirent64 *dirent       | unsigned int count                            | -                                       | -                                           | -                   |
| 221 | fcntl64                |  0xdd | unsigned int fd                   | unsigned int cmd                    | unsigned long arg                             | -                                       | -                                           | -                   |
| 222 | not implemented        |  0xde |                                   |                                     |                                               |                                         |                                             |                     |
| 223 | not implemented        |  0xdf |                                   |                                     |                                               |                                         |                                             |                     |
| 224 | gettid                 |  0xe0 | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
| 225 | readahead              |  0xe1 | int fd                            | loff_t offset                       | size_t count                                  | -                                       | -                                           | -                   |
| 226 | setxattr               |  0xe2 | const char *path                  | const char *name                    | const void *value                             | size_t size                             | int flags                                   | -                   |
| 227 | lsetxattr              |  0xe3 | const char *path                  | const char *name                    | const void *value                             | size_t size                             | int flags                                   | -                   |
| 228 | fsetxattr              |  0xe4 | int fd                            | const char *name                    | const void *value                             | size_t size                             | int flags                                   | -                   |
| 229 | getxattr               |  0xe5 | const char *path                  | const char *name                    | void *value                                   | size_t size                             | -                                           | -                   |
| 230 | lgetxattr              |  0xe6 | const char *path                  | const char *name                    | void *value                                   | size_t size                             | -                                           | -                   |
| 231 | fgetxattr              |  0xe7 | int fd                            | const char *name                    | void *value                                   | size_t size                             | -                                           | -                   |
| 232 | listxattr              |  0xe8 | const char *path                  | char *list                          | size_t size                                   | -                                       | -                                           | -                   |
| 233 | llistxattr             |  0xe9 | const char *path                  | char *list                          | size_t size                                   | -                                       | -                                           | -                   |
| 234 | flistxattr             |  0xea | int fd                            | char *list                          | size_t size                                   | -                                       | -                                           | -                   |
| 235 | removexattr            |  0xeb | const char *path                  | const char *name                    | -                                             | -                                       | -                                           | -                   |
| 236 | lremovexattr           |  0xec | const char *path                  | const char *name                    | -                                             | -                                       | -                                           | -                   |
| 237 | fremovexattr           |  0xed | int fd                            | const char *name                    | -                                             | -                                       | -                                           | -                   |
| 238 | tkill                  |  0xee | pid_t pid                         | int sig                             | -                                             | -                                       | -                                           | -                   |
| 239 | sendfile64             |  0xef | int out_fd                        | int in_fd                           | loff_t *offset                                | size_t count                            | -                                           | -                   |
| 240 | futex                  |  0xf0 | u32 *uaddr                        | int op                              | u32 val                                       | struct __kernel_timespec *utime         | u32 *uaddr2                                 | u32 val3            |
| 241 | sched_setaffinity      |  0xf1 | pid_t pid                         | unsigned int len                    | unsigned long *user_mask_ptr                  | -                                       | -                                           | -                   |
| 242 | sched_getaffinity      |  0xf2 | pid_t pid                         | unsigned int len                    | unsigned long *user_mask_ptr                  | -                                       | -                                           | -                   |
| 243 | set_thread_area        |  0xf3 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 244 | get_thread_area        |  0xf4 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 245 | io_setup               |  0xf5 | unsigned nr_reqs                  | aio_context_t *ctx                  | -                                             | -                                       | -                                           | -                   |
| 246 | io_destroy             |  0xf6 | aio_context_t ctx                 | -                                   | -                                             | -                                       | -                                           | -                   |
| 247 | io_getevents           |  0xf7 | aio_context_t ctx_id              | long min_nr                         | long nr                                       | struct io_event *events                 | struct __kernel_timespec *timeout           | -                   |
| 248 | io_submit              |  0xf8 | aio_context_t                     | long                                | struct iocb * *                               | -                                       | -                                           | -                   |
| 249 | io_cancel              |  0xf9 | aio_context_t ctx_id              | struct iocb *iocb                   | struct io_event *result                       | -                                       | -                                           | -                   |
| 250 | fadvise64              |  0xfa | int fd                            | loff_t offset                       | size_t len                                    | int advice                              | -                                           | -                   |
| 251 | not implemented        |  0xfb |                                   |                                     |                                               |                                         |                                             |                     |
| 252 | exit_group             |  0xfc | int error_code                    | -                                   | -                                             | -                                       | -                                           | -                   |
| 253 | lookup_dcookie         |  0xfd | u64 cookie64                      | char *buf                           | size_t len                                    | -                                       | -                                           | -                   |
| 254 | epoll_create           |  0xfe | int size                          | -                                   | -                                             | -                                       | -                                           | -                   |
| 255 | epoll_ctl              |  0xff | int epfd                          | int op                              | int fd                                        | struct epoll_event *event               | -                                           | -                   |
| 256 | epoll_wait             | 0x100 | int epfd                          | struct epoll_event *events          | int maxevents                                 | int timeout                             | -                                           | -                   |
| 257 | remap_file_pages       | 0x101 | unsigned long start               | unsigned long size                  | unsigned long prot                            | unsigned long pgoff                     | unsigned long flags                         | -                   |
| 258 | set_tid_address        | 0x102 | int *tidptr                       | -                                   | -                                             | -                                       | -                                           | -                   |
| 259 | timer_create           | 0x103 | clockid_t which_clock             | struct sigevent *timer_event_spec   | timer_t * created_timer_id                    | -                                       | -                                           | -                   |
| 260 | timer_settime          | 0x104 | timer_t timer_id                  | int flags                           | const struct __kernel_itimerspec *new_setting | struct __kernel_itimerspec *old_setting | -                                           | -                   |
| 261 | timer_gettime          | 0x105 | timer_t timer_id                  | struct __kernel_itimerspec *setting | -                                             | -                                       | -                                           | -                   |
| 262 | timer_getoverrun       | 0x106 | timer_t timer_id                  | -                                   | -                                             | -                                       | -                                           | -                   |
| 263 | timer_delete           | 0x107 | timer_t timer_id                  | -                                   | -                                             | -                                       | -                                           | -                   |
| 264 | clock_settime          | 0x108 | clockid_t which_clock             | const struct __kernel_timespec *tp  | -                                             | -                                       | -                                           | -                   |
| 265 | clock_gettime          | 0x109 | clockid_t which_clock             | struct __kernel_timespec *tp        | -                                             | -                                       | -                                           | -                   |
| 266 | clock_getres           | 0x10a | clockid_t which_clock             | struct __kernel_timespec *tp        | -                                             | -                                       | -                                           | -                   |
| 267 | clock_nanosleep        | 0x10b | clockid_t which_clock             | int flags                           | const struct __kernel_timespec *rqtp          | struct __kernel_timespec *rmtp          | -                                           | -                   |
| 268 | statfs64               | 0x10c | const char *path                  | size_t sz                           | struct statfs64 *buf                          | -                                       | -                                           | -                   |
| 269 | fstatfs64              | 0x10d | unsigned int fd                   | size_t sz                           | struct statfs64 *buf                          | -                                       | -                                           | -                   |
| 270 | tgkill                 | 0x10e | pid_t tgid                        | pid_t pid                           | int sig                                       | -                                       | -                                           | -                   |
| 271 | utimes                 | 0x10f | char *filename                    | struct timeval *utimes              | -                                             | -                                       | -                                           | -                   |
| 272 | fadvise64_64           | 0x110 | int fd                            | loff_t offset                       | loff_t len                                    | int advice                              | -                                           | -                   |
| 273 | vserver                | 0x111 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 274 | mbind                  | 0x112 | unsigned long start               | unsigned long len                   | unsigned long mode                            | const unsigned long *nmask              | unsigned long maxnode                       | unsigned flags      |
| 275 | get_mempolicy          | 0x113 | int *policy                       | unsigned long *nmask                | unsigned long maxnode                         | unsigned long addr                      | unsigned long flags                         | -                   |
| 276 | set_mempolicy          | 0x114 | int mode                          | const unsigned long *nmask          | unsigned long maxnode                         | -                                       | -                                           | -                   |
| 277 | mq_open                | 0x115 | const char *name                  | int oflag                           | umode_t mode                                  | struct mq_attr *attr                    | -                                           | -                   |
| 278 | mq_unlink              | 0x116 | const char *name                  | -                                   | -                                             | -                                       | -                                           | -                   |
| 279 | mq_timedsend           | 0x117 | mqd_t mqdes                       | const char *msg_ptr                 | size_t msg_len                                | unsigned int msg_prio                   | const struct __kernel_timespec *abs_timeout | -                   |
| 280 | mq_timedreceive        | 0x118 | mqd_t mqdes                       | char *msg_ptr                       | size_t msg_len                                | unsigned int *msg_prio                  | const struct __kernel_timespec *abs_timeout | -                   |
| 281 | mq_notify              | 0x119 | mqd_t mqdes                       | const struct sigevent *notification | -                                             | -                                       | -                                           | -                   |
| 282 | mq_getsetattr          | 0x11a | mqd_t mqdes                       | const struct mq_attr *mqstat        | struct mq_attr *omqstat                       | -                                       | -                                           | -                   |
| 283 | kexec_load             | 0x11b | unsigned long entry               | unsigned long nr_segments           | struct kexec_segment *segments                | unsigned long flags                     | -                                           | -                   |
| 284 | waitid                 | 0x11c | int which                         | pid_t pid                           | struct siginfo *infop                         | int options                             | struct rusage *ru                           | -                   |
| 285 | not implemented        | 0x11d |                                   |                                     |                                               |                                         |                                             |                     |
| 286 | add_key                | 0x11e | const char *_type                 | const char *_description            | const void *_payload                          | size_t plen                             | key_serial_t destringid                     | -                   |
| 287 | request_key            | 0x11f | const char *_type                 | const char *_description            | const char *_callout_info                     | key_serial_t destringid                 | -                                           | -                   |
| 288 | keyctl                 | 0x120 | int cmd                           | unsigned long arg2                  | unsigned long arg3                            | unsigned long arg4                      | unsigned long arg5                          | -                   |
| 289 | ioprio_set             | 0x121 | int which                         | int who                             | int ioprio                                    | -                                       | -                                           | -                   |
| 290 | ioprio_get             | 0x122 | int which                         | int who                             | -                                             | -                                       | -                                           | -                   |
| 291 | inotify_init           | 0x123 | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
| 292 | inotify_add_watch      | 0x124 | int fd                            | const char *path                    | u32 mask                                      | -                                       | -                                           | -                   |
| 293 | inotify_rm_watch       | 0x125 | int fd                            | __s32 wd                            | -                                             | -                                       | -                                           | -                   |
| 294 | migrate_pages          | 0x126 | pid_t pid                         | unsigned long maxnode               | const unsigned long *from                     | const unsigned long *to                 | -                                           | -                   |
| 295 | openat                 | 0x127 | int dfd                           | const char *filename                | int flags                                     | umode_t mode                            | -                                           | -                   |
| 296 | mkdirat                | 0x128 | int dfd                           | const char * pathname               | umode_t mode                                  | -                                       | -                                           | -                   |
| 297 | mknodat                | 0x129 | int dfd                           | const char * filename               | umode_t mode                                  | unsigned dev                            | -                                           | -                   |
| 298 | fchownat               | 0x12a | int dfd                           | const char *filename                | uid_t user                                    | gid_t group                             | int flag                                    | -                   |
| 299 | futimesat              | 0x12b | int dfd                           | const char *filename                | struct timeval *utimes                        | -                                       | -                                           | -                   |
| 300 | fstatat64              | 0x12c | int dfd                           | const char *filename                | struct stat64 *statbuf                        | int flag                                | -                                           | -                   |
| 301 | unlinkat               | 0x12d | int dfd                           | const char * pathname               | int flag                                      | -                                       | -                                           | -                   |
| 302 | renameat               | 0x12e | int olddfd                        | const char * oldname                | int newdfd                                    | const char * newname                    | -                                           | -                   |
| 303 | linkat                 | 0x12f | int olddfd                        | const char *oldname                 | int newdfd                                    | const char *newname                     | int flags                                   | -                   |
| 304 | symlinkat              | 0x130 | const char * oldname              | int newdfd                          | const char * newname                          | -                                       | -                                           | -                   |
| 305 | readlinkat             | 0x131 | int dfd                           | const char *path                    | char *buf                                     | int bufsiz                              | -                                           | -                   |
| 306 | fchmodat               | 0x132 | int dfd                           | const char * filename               | umode_t mode                                  | -                                       | -                                           | -                   |
| 307 | faccessat              | 0x133 | int dfd                           | const char *filename                | int mode                                      | -                                       | -                                           | -                   |
| 308 | pselect6               | 0x134 | int                               | fd_set *                            | fd_set *                                      | fd_set *                                | struct __kernel_timespec *                  | void *              |
| 309 | ppoll                  | 0x135 | struct pollfd *                   | unsigned int                        | struct __kernel_timespec *                    | const sigset_t *                        | size_t                                      | -                   |
| 310 | unshare                | 0x136 | unsigned long unshare_flags       | -                                   | -                                             | -                                       | -                                           | -                   |
| 311 | set_robust_list        | 0x137 | struct robust_list_head *head     | size_t len                          | -                                             | -                                       | -                                           | -                   |
| 312 | get_robust_list        | 0x138 | int pid                           | struct robust_list_head * *head_ptr | size_t *len_ptr                               | -                                       | -                                           | -                   |
| 313 | splice                 | 0x139 | int fd_in                         | loff_t *off_in                      | int fd_out                                    | loff_t *off_out                         | size_t len                                  | unsigned int flags  |
| 314 | sync_file_range        | 0x13a | int fd                            | loff_t offset                       | loff_t nbytes                                 | unsigned int flags                      | -                                           | -                   |
| 315 | tee                    | 0x13b | int fdin                          | int fdout                           | size_t len                                    | unsigned int flags                      | -                                           | -                   |
| 316 | vmsplice               | 0x13c | int fd                            | const struct iovec *iov             | unsigned long nr_segs                         | unsigned int flags                      | -                                           | -                   |
| 317 | move_pages             | 0x13d | pid_t pid                         | unsigned long nr_pages              | const void * *pages                           | const int *nodes                        | int *status                                 | int flags           |
| 318 | getcpu                 | 0x13e | unsigned *cpu                     | unsigned *node                      | struct getcpu_cache *cache                    | -                                       | -                                           | -                   |
| 319 | epoll_pwait            | 0x13f | int epfd                          | struct epoll_event *events          | int maxevents                                 | int timeout                             | const sigset_t *sigmask                     | size_t sigsetsize   |
| 320 | utimensat              | 0x140 | int dfd                           | const char *filename                | struct __kernel_timespec *utimes              | int flags                               | -                                           | -                   |
| 321 | signalfd               | 0x141 | int ufd                           | sigset_t *user_mask                 | size_t sizemask                               | -                                       | -                                           | -                   |
| 322 | timerfd_create         | 0x142 | int clockid                       | int flags                           | -                                             | -                                       | -                                           | -                   |
| 323 | eventfd                | 0x143 | unsigned int count                | -                                   | -                                             | -                                       | -                                           | -                   |
| 324 | fallocate              | 0x144 | int fd                            | int mode                            | loff_t offset                                 | loff_t len                              | -                                           | -                   |
| 325 | timerfd_settime        | 0x145 | int ufd                           | int flags                           | const struct __kernel_itimerspec *utmr        | struct __kernel_itimerspec *otmr        | -                                           | -                   |
| 326 | timerfd_gettime        | 0x146 | int ufd                           | struct __kernel_itimerspec *otmr    | -                                             | -                                       | -                                           | -                   |
| 327 | signalfd4              | 0x147 | int ufd                           | sigset_t *user_mask                 | size_t sizemask                               | int flags                               | -                                           | -                   |
| 328 | eventfd2               | 0x148 | unsigned int count                | int flags                           | -                                             | -                                       | -                                           | -                   |
| 329 | epoll_create1          | 0x149 | int flags                         | -                                   | -                                             | -                                       | -                                           | -                   |
| 330 | dup3                   | 0x14a | unsigned int oldfd                | unsigned int newfd                  | int flags                                     | -                                       | -                                           | -                   |
| 331 | pipe2                  | 0x14b | int *fildes                       | int flags                           | -                                             | -                                       | -                                           | -                   |
| 332 | inotify_init1          | 0x14c | int flags                         | -                                   | -                                             | -                                       | -                                           | -                   |
| 333 | preadv                 | 0x14d | unsigned long fd                  | const struct iovec *vec             | unsigned long vlen                            | unsigned long pos_l                     | unsigned long pos_h                         | -                   |
| 334 | pwritev                | 0x14e | unsigned long fd                  | const struct iovec *vec             | unsigned long vlen                            | unsigned long pos_l                     | unsigned long pos_h                         | -                   |
| 335 | rt_tgsigqueueinfo      | 0x14f | pid_t tgid                        | pid_t pid                           | int sig                                       | siginfo_t *uinfo                        | -                                           | -                   |
| 336 | perf_event_open        | 0x150 | struct perf_event_attr *attr_uptr | pid_t pid                           | int cpu                                       | int group_fd                            | unsigned long flags                         | -                   |
| 337 | recvmmsg               | 0x151 | int fd                            | struct mmsghdr *msg                 | unsigned int vlen                             | unsigned flags                          | struct __kernel_timespec *timeout           | -                   |
| 338 | fanotify_init          | 0x152 | unsigned int flags                | unsigned int event_f_flags          | -                                             | -                                       | -                                           | -                   |
| 339 | fanotify_mark          | 0x153 | int fanotify_fd                   | unsigned int flags                  | u64 mask                                      | int fd                                  | const char *pathname                        | -                   |
| 340 | prlimit64              | 0x154 | pid_t pid                         | unsigned int resource               | const struct rlimit64 *new_rlim               | struct rlimit64 *old_rlim               | -                                           | -                   |
| 341 | name_to_handle_at      | 0x155 | int dfd                           | const char *name                    | struct file_handle *handle                    | int *mnt_id                             | int flag                                    | -                   |
| 342 | open_by_handle_at      | 0x156 | int mountdirfd                    | struct file_handle *handle          | int flags                                     | -                                       | -                                           | -                   |
| 343 | clock_adjtime          | 0x157 | clockid_t which_clock             | struct __kernel_timex *tx           | -                                             | -                                       | -                                           | -                   |
| 344 | syncfs                 | 0x158 | int fd                            | -                                   | -                                             | -                                       | -                                           | -                   |
| 345 | sendmmsg               | 0x159 | int fd                            | struct mmsghdr *msg                 | unsigned int vlen                             | unsigned flags                          | -                                           | -                   |
| 346 | setns                  | 0x15a | int fd                            | int nstype                          | -                                             | -                                       | -                                           | -                   |
| 347 | process_vm_readv       | 0x15b | pid_t pid                         | const struct iovec *lvec            | unsigned long liovcnt                         | const struct iovec *rvec                | unsigned long riovcnt                       | unsigned long flags |
| 348 | process_vm_writev      | 0x15c | pid_t pid                         | const struct iovec *lvec            | unsigned long liovcnt                         | const struct iovec *rvec                | unsigned long riovcnt                       | unsigned long flags |
| 349 | kcmp                   | 0x15d | pid_t pid1                        | pid_t pid2                          | int type                                      | unsigned long idx1                      | unsigned long idx2                          | -                   |
| 350 | finit_module           | 0x15e | int fd                            | const char *uargs                   | int flags                                     | -                                       | -                                           | -                   |
| 351 | sched_setattr          | 0x15f | pid_t pid                         | struct sched_attr *attr             | unsigned int flags                            | -                                       | -                                           | -                   |
| 352 | sched_getattr          | 0x160 | pid_t pid                         | struct sched_attr *attr             | unsigned int size                             | unsigned int flags                      | -                                           | -                   |
| 353 | renameat2              | 0x161 | int olddfd                        | const char *oldname                 | int newdfd                                    | const char *newname                     | unsigned int flags                          | -                   |
| 354 | seccomp                | 0x162 | unsigned int op                   | unsigned int flags                  | void *uargs                                   | -                                       | -                                           | -                   |
| 355 | getrandom              | 0x163 | char *buf                         | size_t count                        | unsigned int flags                            | -                                       | -                                           | -                   |
| 356 | memfd_create           | 0x164 | const char *uname_ptr             | unsigned int flags                  | -                                             | -                                       | -                                           | -                   |
| 357 | bpf                    | 0x165 | int cmd                           | union bpf_attr *attr                | unsigned int size                             | -                                       | -                                           | -                   |
| 358 | execveat               | 0x166 | int dfd                           | const char *filename                | const char *const *argv                       | const char *const *envp                 | int flags                                   | -                   |
| 359 | socket                 | 0x167 | int                               | int                                 | int                                           | -                                       | -                                           | -                   |
| 360 | socketpair             | 0x168 | int                               | int                                 | int                                           | int *                                   | -                                           | -                   |
| 361 | bind                   | 0x169 | int                               | struct sockaddr *                   | int                                           | -                                       | -                                           | -                   |
| 362 | connect                | 0x16a | int                               | struct sockaddr *                   | int                                           | -                                       | -                                           | -                   |
| 363 | listen                 | 0x16b | int                               | int                                 | -                                             | -                                       | -                                           | -                   |
| 364 | accept4                | 0x16c | int                               | struct sockaddr *                   | int *                                         | int                                     | -                                           | -                   |
| 365 | getsockopt             | 0x16d | int fd                            | int level                           | int optname                                   | char *optval                            | int *optlen                                 | -                   |
| 366 | setsockopt             | 0x16e | int fd                            | int level                           | int optname                                   | char *optval                            | int optlen                                  | -                   |
| 367 | getsockname            | 0x16f | int                               | struct sockaddr *                   | int *                                         | -                                       | -                                           | -                   |
| 368 | getpeername            | 0x170 | int                               | struct sockaddr *                   | int *                                         | -                                       | -                                           | -                   |
| 369 | sendto                 | 0x171 | int                               | void *                              | size_t                                        | unsigned                                | struct sockaddr *                           | int                 |
| 370 | sendmsg                | 0x172 | int fd                            | struct user_msghdr *msg             | unsigned flags                                | -                                       | -                                           | -                   |
| 371 | recvfrom               | 0x173 | int                               | void *                              | size_t                                        | unsigned                                | struct sockaddr *                           | int *               |
| 372 | recvmsg                | 0x174 | int fd                            | struct user_msghdr *msg             | unsigned flags                                | -                                       | -                                           | -                   |
| 373 | shutdown               | 0x175 | int                               | int                                 | -                                             | -                                       | -                                           | -                   |
| 374 | userfaultfd            | 0x176 | int flags                         | -                                   | -                                             | -                                       | -                                           | -                   |
| 375 | membarrier             | 0x177 | int cmd                           | int flags                           | -                                             | -                                       | -                                           | -                   |
| 376 | mlock2                 | 0x178 | unsigned long start               | size_t len                          | int flags                                     | -                                       | -                                           | -                   |
| 377 | copy_file_range        | 0x179 | int fd_in                         | loff_t *off_in                      | int fd_out                                    | loff_t *off_out                         | size_t len                                  | unsigned int flags  |
| 378 | preadv2                | 0x17a | unsigned long fd                  | const struct iovec *vec             | unsigned long vlen                            | unsigned long pos_l                     | unsigned long pos_h                         | rwf_t flags         |
| 379 | pwritev2               | 0x17b | unsigned long fd                  | const struct iovec *vec             | unsigned long vlen                            | unsigned long pos_l                     | unsigned long pos_h                         | rwf_t flags         |
| 380 | pkey_mprotect          | 0x17c | unsigned long start               | size_t len                          | unsigned long prot                            | int pkey                                | -                                           | -                   |
| 381 | pkey_alloc             | 0x17d | unsigned long flags               | unsigned long init_val              | -                                             | -                                       | -                                           | -                   |
| 382 | pkey_free              | 0x17e | int pkey                          | -                                   | -                                             | -                                       | -                                           | -                   |
| 383 | statx                  | 0x17f | int dfd                           | const char *path                    | unsigned flags                                | unsigned mask                           | struct statx *buffer                        | -                   |
| 384 | arch_prctl             | 0x180 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
****** facts
****** how to
******* call a syscall
#+begin_src asm
int 0x80
#+end_src
******* write a simple "hello world"
******** code
   #+begin_src asm
   section .data
       hello:     db 'Hello world!',10
       helloLen:  equ $-hello

   section .text
       global _start

   _start:
       mov eax,4
       mov ebx,1
       mov ecx,hello
       mov edx,helloLen
       int 80h

       mov eax,1
       mov ebx,0
       int 80h
   #+end_src
******** compilation command
   #+begin_src sh
nasm -f elf32 -o hello.o hello.s
ld -m elf_i386 -o hello hello.o
   #+end_src
***** x86_64 Linux
****** syscall table

|  NR | syscall name           |  %rax | arg0 (%rdi)                       | arg1 (%rsi)                         | arg2 (%rdx)                                   | arg3 (%r10)                             | arg4 (%r8)                                  | arg5 (%r9)          |
|-----+------------------------+-------+-----------------------------------+-------------------------------------+-----------------------------------------------+-----------------------------------------+---------------------------------------------+---------------------|
|   0 | read                   |  0x00 | unsigned int fd                   | char *buf                           | size_t count                                  | -                                       | -                                           | -                   |
|   1 | write                  |  0x01 | unsigned int fd                   | const char *buf                     | size_t count                                  | -                                       | -                                           | -                   |
|   2 | open                   |  0x02 | const char *filename              | int flags                           | umode_t mode                                  | -                                       | -                                           | -                   |
|   3 | close                  |  0x03 | unsigned int fd                   | -                                   | -                                             | -                                       | -                                           | -                   |
|   4 | stat                   |  0x04 | const char *filename              | struct __old_kernel_stat *statbuf   | -                                             | -                                       | -                                           | -                   |
|   5 | fstat                  |  0x05 | unsigned int fd                   | struct __old_kernel_stat *statbuf   | -                                             | -                                       | -                                           | -                   |
|   6 | lstat                  |  0x06 | const char *filename              | struct __old_kernel_stat *statbuf   | -                                             | -                                       | -                                           | -                   |
|   7 | poll                   |  0x07 | struct pollfd *ufds               | unsigned int nfds                   | int timeout                                   | -                                       | -                                           | -                   |
|   8 | lseek                  |  0x08 | unsigned int fd                   | off_t offset                        | unsigned int whence                           | -                                       | -                                           | -                   |
|   9 | mmap                   |  0x09 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
|  10 | mprotect               |  0x0a | unsigned long start               | size_t len                          | unsigned long prot                            | -                                       | -                                           | -                   |
|  11 | munmap                 |  0x0b | unsigned long addr                | size_t len                          | -                                             | -                                       | -                                           | -                   |
|  12 | brk                    |  0x0c | unsigned long brk                 | -                                   | -                                             | -                                       | -                                           | -                   |
|  13 | rt_sigaction           |  0x0d | int                               | const struct sigaction *            | struct sigaction *                            | size_t                                  | -                                           | -                   |
|  14 | rt_sigprocmask         |  0x0e | int how                           | sigset_t *set                       | sigset_t *oset                                | size_t sigsetsize                       | -                                           | -                   |
|  15 | rt_sigreturn           |  0x0f | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
|  16 | ioctl                  |  0x10 | unsigned int fd                   | unsigned int cmd                    | unsigned long arg                             | -                                       | -                                           | -                   |
|  17 | pread64                |  0x11 | unsigned int fd                   | char *buf                           | size_t count                                  | loff_t pos                              | -                                           | -                   |
|  18 | pwrite64               |  0x12 | unsigned int fd                   | const char *buf                     | size_t count                                  | loff_t pos                              | -                                           | -                   |
|  19 | readv                  |  0x13 | unsigned long fd                  | const struct iovec *vec             | unsigned long vlen                            | -                                       | -                                           | -                   |
|  20 | writev                 |  0x14 | unsigned long fd                  | const struct iovec *vec             | unsigned long vlen                            | -                                       | -                                           | -                   |
|  21 | access                 |  0x15 | const char *filename              | int mode                            | -                                             | -                                       | -                                           | -                   |
|  22 | pipe                   |  0x16 | int *fildes                       | -                                   | -                                             | -                                       | -                                           | -                   |
|  23 | select                 |  0x17 | int n                             | fd_set *inp                         | fd_set *outp                                  | fd_set *exp                             | struct timeval *tvp                         | -                   |
|  24 | sched_yield            |  0x18 | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
|  25 | mremap                 |  0x19 | unsigned long addr                | unsigned long old_len               | unsigned long new_len                         | unsigned long flags                     | unsigned long new_addr                      | -                   |
|  26 | msync                  |  0x1a | unsigned long start               | size_t len                          | int flags                                     | -                                       | -                                           | -                   |
|  27 | mincore                |  0x1b | unsigned long start               | size_t len                          | unsigned char * vec                           | -                                       | -                                           | -                   |
|  28 | madvise                |  0x1c | unsigned long start               | size_t len                          | int behavior                                  | -                                       | -                                           | -                   |
|  29 | shmget                 |  0x1d | key_t key                         | size_t size                         | int flag                                      | -                                       | -                                           | -                   |
|  30 | shmat                  |  0x1e | int shmid                         | char *shmaddr                       | int shmflg                                    | -                                       | -                                           | -                   |
|  31 | shmctl                 |  0x1f | int shmid                         | int cmd                             | struct shmid_ds *buf                          | -                                       | -                                           | -                   |
|  32 | dup                    |  0x20 | unsigned int fildes               | -                                   | -                                             | -                                       | -                                           | -                   |
|  33 | dup2                   |  0x21 | unsigned int oldfd                | unsigned int newfd                  | -                                             | -                                       | -                                           | -                   |
|  34 | pause                  |  0x22 | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
|  35 | nanosleep              |  0x23 | struct __kernel_timespec *rqtp    | struct __kernel_timespec *rmtp      | -                                             | -                                       | -                                           | -                   |
|  36 | getitimer              |  0x24 | int which                         | struct itimerval *value             | -                                             | -                                       | -                                           | -                   |
|  37 | alarm                  |  0x25 | unsigned int seconds              | -                                   | -                                             | -                                       | -                                           | -                   |
|  38 | setitimer              |  0x26 | int which                         | struct itimerval *value             | struct itimerval *ovalue                      | -                                       | -                                           | -                   |
|  39 | getpid                 |  0x27 | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
|  40 | sendfile               |  0x28 | int out_fd                        | int in_fd                           | off_t *offset                                 | size_t count                            | -                                           | -                   |
|  41 | socket                 |  0x29 | int                               | int                                 | int                                           | -                                       | -                                           | -                   |
|  42 | connect                |  0x2a | int                               | struct sockaddr *                   | int                                           | -                                       | -                                           | -                   |
|  43 | accept                 |  0x2b | int                               | struct sockaddr *                   | int *                                         | -                                       | -                                           | -                   |
|  44 | sendto                 |  0x2c | int                               | void *                              | size_t                                        | unsigned                                | struct sockaddr *                           | int                 |
|  45 | recvfrom               |  0x2d | int                               | void *                              | size_t                                        | unsigned                                | struct sockaddr *                           | int *               |
|  46 | sendmsg                |  0x2e | int fd                            | struct user_msghdr *msg             | unsigned flags                                | -                                       | -                                           | -                   |
|  47 | recvmsg                |  0x2f | int fd                            | struct user_msghdr *msg             | unsigned flags                                | -                                       | -                                           | -                   |
|  48 | shutdown               |  0x30 | int                               | int                                 | -                                             | -                                       | -                                           | -                   |
|  49 | bind                   |  0x31 | int                               | struct sockaddr *                   | int                                           | -                                       | -                                           | -                   |
|  50 | listen                 |  0x32 | int                               | int                                 | -                                             | -                                       | -                                           | -                   |
|  51 | getsockname            |  0x33 | int                               | struct sockaddr *                   | int *                                         | -                                       | -                                           | -                   |
|  52 | getpeername            |  0x34 | int                               | struct sockaddr *                   | int *                                         | -                                       | -                                           | -                   |
|  53 | socketpair             |  0x35 | int                               | int                                 | int                                           | int *                                   | -                                           | -                   |
|  54 | setsockopt             |  0x36 | int fd                            | int level                           | int optname                                   | char *optval                            | int optlen                                  | -                   |
|  55 | getsockopt             |  0x37 | int fd                            | int level                           | int optname                                   | char *optval                            | int *optlen                                 | -                   |
|  56 | clone                  |  0x38 | unsigned long                     | unsigned long                       | int *                                         | int *                                   | unsigned long                               | -                   |
|  57 | fork                   |  0x39 | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
|  58 | vfork                  |  0x3a | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
|  59 | execve                 |  0x3b | const char *filename              | const char *const *argv             | const char *const *envp                       | -                                       | -                                           | -                   |
|  60 | exit                   |  0x3c | int error_code                    | -                                   | -                                             | -                                       | -                                           | -                   |
|  61 | wait4                  |  0x3d | pid_t pid                         | int *stat_addr                      | int options                                   | struct rusage *ru                       | -                                           | -                   |
|  62 | kill                   |  0x3e | pid_t pid                         | int sig                             | -                                             | -                                       | -                                           | -                   |
|  63 | uname                  |  0x3f | struct old_utsname *              | -                                   | -                                             | -                                       | -                                           | -                   |
|  64 | semget                 |  0x40 | key_t key                         | int nsems                           | int semflg                                    | -                                       | -                                           | -                   |
|  65 | semop                  |  0x41 | int semid                         | struct sembuf *sops                 | unsigned nsops                                | -                                       | -                                           | -                   |
|  66 | semctl                 |  0x42 | int semid                         | int semnum                          | int cmd                                       | unsigned long arg                       | -                                           | -                   |
|  67 | shmdt                  |  0x43 | char *shmaddr                     | -                                   | -                                             | -                                       | -                                           | -                   |
|  68 | msgget                 |  0x44 | key_t key                         | int msgflg                          | -                                             | -                                       | -                                           | -                   |
|  69 | msgsnd                 |  0x45 | int msqid                         | struct msgbuf *msgp                 | size_t msgsz                                  | int msgflg                              | -                                           | -                   |
|  70 | msgrcv                 |  0x46 | int msqid                         | struct msgbuf *msgp                 | size_t msgsz                                  | long msgtyp                             | int msgflg                                  | -                   |
|  71 | msgctl                 |  0x47 | int msqid                         | int cmd                             | struct msqid_ds *buf                          | -                                       | -                                           | -                   |
|  72 | fcntl                  |  0x48 | unsigned int fd                   | unsigned int cmd                    | unsigned long arg                             | -                                       | -                                           | -                   |
|  73 | flock                  |  0x49 | unsigned int fd                   | unsigned int cmd                    | -                                             | -                                       | -                                           | -                   |
|  74 | fsync                  |  0x4a | unsigned int fd                   | -                                   | -                                             | -                                       | -                                           | -                   |
|  75 | fdatasync              |  0x4b | unsigned int fd                   | -                                   | -                                             | -                                       | -                                           | -                   |
|  76 | truncate               |  0x4c | const char *path                  | long length                         | -                                             | -                                       | -                                           | -                   |
|  77 | ftruncate              |  0x4d | unsigned int fd                   | unsigned long length                | -                                             | -                                       | -                                           | -                   |
|  78 | getdents               |  0x4e | unsigned int fd                   | struct linux_dirent *dirent         | unsigned int count                            | -                                       | -                                           | -                   |
|  79 | getcwd                 |  0x4f | char *buf                         | unsigned long size                  | -                                             | -                                       | -                                           | -                   |
|  80 | chdir                  |  0x50 | const char *filename              | -                                   | -                                             | -                                       | -                                           | -                   |
|  81 | fchdir                 |  0x51 | unsigned int fd                   | -                                   | -                                             | -                                       | -                                           | -                   |
|  82 | rename                 |  0x52 | const char *oldname               | const char *newname                 | -                                             | -                                       | -                                           | -                   |
|  83 | mkdir                  |  0x53 | const char *pathname              | umode_t mode                        | -                                             | -                                       | -                                           | -                   |
|  84 | rmdir                  |  0x54 | const char *pathname              | -                                   | -                                             | -                                       | -                                           | -                   |
|  85 | creat                  |  0x55 | const char *pathname              | umode_t mode                        | -                                             | -                                       | -                                           | -                   |
|  86 | link                   |  0x56 | const char *oldname               | const char *newname                 | -                                             | -                                       | -                                           | -                   |
|  87 | unlink                 |  0x57 | const char *pathname              | -                                   | -                                             | -                                       | -                                           | -                   |
|  88 | symlink                |  0x58 | const char *old                   | const char *new                     | -                                             | -                                       | -                                           | -                   |
|  89 | readlink               |  0x59 | const char *path                  | char *buf                           | int bufsiz                                    | -                                       | -                                           | -                   |
|  90 | chmod                  |  0x5a | const char *filename              | umode_t mode                        | -                                             | -                                       | -                                           | -                   |
|  91 | fchmod                 |  0x5b | unsigned int fd                   | umode_t mode                        | -                                             | -                                       | -                                           | -                   |
|  92 | chown                  |  0x5c | const char *filename              | uid_t user                          | gid_t group                                   | -                                       | -                                           | -                   |
|  93 | fchown                 |  0x5d | unsigned int fd                   | uid_t user                          | gid_t group                                   | -                                       | -                                           | -                   |
|  94 | lchown                 |  0x5e | const char *filename              | uid_t user                          | gid_t group                                   | -                                       | -                                           | -                   |
|  95 | umask                  |  0x5f | int mask                          | -                                   | -                                             | -                                       | -                                           | -                   |
|  96 | gettimeofday           |  0x60 | struct timeval *tv                | struct timezone *tz                 | -                                             | -                                       | -                                           | -                   |
|  97 | getrlimit              |  0x61 | unsigned int resource             | struct rlimit *rlim                 | -                                             | -                                       | -                                           | -                   |
|  98 | getrusage              |  0x62 | int who                           | struct rusage *ru                   | -                                             | -                                       | -                                           | -                   |
|  99 | sysinfo                |  0x63 | struct sysinfo *info              | -                                   | -                                             | -                                       | -                                           | -                   |
| 100 | times                  |  0x64 | struct tms *tbuf                  | -                                   | -                                             | -                                       | -                                           | -                   |
| 101 | ptrace                 |  0x65 | long request                      | long pid                            | unsigned long addr                            | unsigned long data                      | -                                           | -                   |
| 102 | getuid                 |  0x66 | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
| 103 | syslog                 |  0x67 | int type                          | char *buf                           | int len                                       | -                                       | -                                           | -                   |
| 104 | getgid                 |  0x68 | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
| 105 | setuid                 |  0x69 | uid_t uid                         | -                                   | -                                             | -                                       | -                                           | -                   |
| 106 | setgid                 |  0x6a | gid_t gid                         | -                                   | -                                             | -                                       | -                                           | -                   |
| 107 | geteuid                |  0x6b | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
| 108 | getegid                |  0x6c | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
| 109 | setpgid                |  0x6d | pid_t pid                         | pid_t pgid                          | -                                             | -                                       | -                                           | -                   |
| 110 | getppid                |  0x6e | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
| 111 | getpgrp                |  0x6f | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
| 112 | setsid                 |  0x70 | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
| 113 | setreuid               |  0x71 | uid_t ruid                        | uid_t euid                          | -                                             | -                                       | -                                           | -                   |
| 114 | setregid               |  0x72 | gid_t rgid                        | gid_t egid                          | -                                             | -                                       | -                                           | -                   |
| 115 | getgroups              |  0x73 | int gidsetsize                    | gid_t *grouplist                    | -                                             | -                                       | -                                           | -                   |
| 116 | setgroups              |  0x74 | int gidsetsize                    | gid_t *grouplist                    | -                                             | -                                       | -                                           | -                   |
| 117 | setresuid              |  0x75 | uid_t ruid                        | uid_t euid                          | uid_t suid                                    | -                                       | -                                           | -                   |
| 118 | getresuid              |  0x76 | uid_t *ruid                       | uid_t *euid                         | uid_t *suid                                   | -                                       | -                                           | -                   |
| 119 | setresgid              |  0x77 | gid_t rgid                        | gid_t egid                          | gid_t sgid                                    | -                                       | -                                           | -                   |
| 120 | getresgid              |  0x78 | gid_t *rgid                       | gid_t *egid                         | gid_t *sgid                                   | -                                       | -                                           | -                   |
| 121 | getpgid                |  0x79 | pid_t pid                         | -                                   | -                                             | -                                       | -                                           | -                   |
| 122 | setfsuid               |  0x7a | uid_t uid                         | -                                   | -                                             | -                                       | -                                           | -                   |
| 123 | setfsgid               |  0x7b | gid_t gid                         | -                                   | -                                             | -                                       | -                                           | -                   |
| 124 | getsid                 |  0x7c | pid_t pid                         | -                                   | -                                             | -                                       | -                                           | -                   |
| 125 | capget                 |  0x7d | cap_user_header_t header          | cap_user_data_t dataptr             | -                                             | -                                       | -                                           | -                   |
| 126 | capset                 |  0x7e | cap_user_header_t header          | const cap_user_data_t data          | -                                             | -                                       | -                                           | -                   |
| 127 | rt_sigpending          |  0x7f | sigset_t *set                     | size_t sigsetsize                   | -                                             | -                                       | -                                           | -                   |
| 128 | rt_sigtimedwait        |  0x80 | const sigset_t *uthese            | siginfo_t *uinfo                    | const struct __kernel_timespec *uts           | size_t sigsetsize                       | -                                           | -                   |
| 129 | rt_sigqueueinfo        |  0x81 | pid_t pid                         | int sig                             | siginfo_t *uinfo                              | -                                       | -                                           | -                   |
| 130 | rt_sigsuspend          |  0x82 | sigset_t *unewset                 | size_t sigsetsize                   | -                                             | -                                       | -                                           | -                   |
| 131 | sigaltstack            |  0x83 | const struct sigaltstack *uss     | struct sigaltstack *uoss            | -                                             | -                                       | -                                           | -                   |
| 132 | utime                  |  0x84 | char *filename                    | struct utimbuf *times               | -                                             | -                                       | -                                           | -                   |
| 133 | mknod                  |  0x85 | const char *filename              | umode_t mode                        | unsigned dev                                  | -                                       | -                                           | -                   |
| 134 | uselib                 |  0x86 | const char *library               | -                                   | -                                             | -                                       | -                                           | -                   |
| 135 | personality            |  0x87 | unsigned int personality          | -                                   | -                                             | -                                       | -                                           | -                   |
| 136 | ustat                  |  0x88 | unsigned dev                      | struct ustat *ubuf                  | -                                             | -                                       | -                                           | -                   |
| 137 | statfs                 |  0x89 | const char * path                 | struct statfs *buf                  | -                                             | -                                       | -                                           | -                   |
| 138 | fstatfs                |  0x8a | unsigned int fd                   | struct statfs *buf                  | -                                             | -                                       | -                                           | -                   |
| 139 | sysfs                  |  0x8b | int option                        | unsigned long arg1                  | unsigned long arg2                            | -                                       | -                                           | -                   |
| 140 | getpriority            |  0x8c | int which                         | int who                             | -                                             | -                                       | -                                           | -                   |
| 141 | setpriority            |  0x8d | int which                         | int who                             | int niceval                                   | -                                       | -                                           | -                   |
| 142 | sched_setparam         |  0x8e | pid_t pid                         | struct sched_param *param           | -                                             | -                                       | -                                           | -                   |
| 143 | sched_getparam         |  0x8f | pid_t pid                         | struct sched_param *param           | -                                             | -                                       | -                                           | -                   |
| 144 | sched_setscheduler     |  0x90 | pid_t pid                         | int policy                          | struct sched_param *param                     | -                                       | -                                           | -                   |
| 145 | sched_getscheduler     |  0x91 | pid_t pid                         | -                                   | -                                             | -                                       | -                                           | -                   |
| 146 | sched_get_priority_max |  0x92 | int policy                        | -                                   | -                                             | -                                       | -                                           | -                   |
| 147 | sched_get_priority_min |  0x93 | int policy                        | -                                   | -                                             | -                                       | -                                           | -                   |
| 148 | sched_rr_get_interval  |  0x94 | pid_t pid                         | struct __kernel_timespec *interval  | -                                             | -                                       | -                                           | -                   |
| 149 | mlock                  |  0x95 | unsigned long start               | size_t len                          | -                                             | -                                       | -                                           | -                   |
| 150 | munlock                |  0x96 | unsigned long start               | size_t len                          | -                                             | -                                       | -                                           | -                   |
| 151 | mlockall               |  0x97 | int flags                         | -                                   | -                                             | -                                       | -                                           | -                   |
| 152 | munlockall             |  0x98 | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
| 153 | vhangup                |  0x99 | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
| 154 | modify_ldt             |  0x9a | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 155 | pivot_root             |  0x9b | const char *new_root              | const char *put_old                 | -                                             | -                                       | -                                           | -                   |
| 156 | _sysctl                |  0x9c | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 157 | prctl                  |  0x9d | int option                        | unsigned long arg2                  | unsigned long arg3                            | unsigned long arg4                      | unsigned long arg5                          | -                   |
| 158 | arch_prctl             |  0x9e | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 159 | adjtimex               |  0x9f | struct __kernel_timex *txc_p      | -                                   | -                                             | -                                       | -                                           | -                   |
| 160 | setrlimit              |  0xa0 | unsigned int resource             | struct rlimit *rlim                 | -                                             | -                                       | -                                           | -                   |
| 161 | chroot                 |  0xa1 | const char *filename              | -                                   | -                                             | -                                       | -                                           | -                   |
| 162 | sync                   |  0xa2 | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
| 163 | acct                   |  0xa3 | const char *name                  | -                                   | -                                             | -                                       | -                                           | -                   |
| 164 | settimeofday           |  0xa4 | struct timeval *tv                | struct timezone *tz                 | -                                             | -                                       | -                                           | -                   |
| 165 | mount                  |  0xa5 | char *dev_name                    | char *dir_name                      | char *type                                    | unsigned long flags                     | void *data                                  | -                   |
| 166 | umount2                |  0xa6 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 167 | swapon                 |  0xa7 | const char *specialfile           | int swap_flags                      | -                                             | -                                       | -                                           | -                   |
| 168 | swapoff                |  0xa8 | const char *specialfile           | -                                   | -                                             | -                                       | -                                           | -                   |
| 169 | reboot                 |  0xa9 | int magic1                        | int magic2                          | unsigned int cmd                              | void *arg                               | -                                           | -                   |
| 170 | sethostname            |  0xaa | char *name                        | int len                             | -                                             | -                                       | -                                           | -                   |
| 171 | setdomainname          |  0xab | char *name                        | int len                             | -                                             | -                                       | -                                           | -                   |
| 172 | iopl                   |  0xac | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 173 | ioperm                 |  0xad | unsigned long from                | unsigned long num                   | int on                                        | -                                       | -                                           | -                   |
| 174 | create_module          |  0xae | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 175 | init_module            |  0xaf | void *umod                        | unsigned long len                   | const char *uargs                             | -                                       | -                                           | -                   |
| 176 | delete_module          |  0xb0 | const char *name_user             | unsigned int flags                  | -                                             | -                                       | -                                           | -                   |
| 177 | get_kernel_syms        |  0xb1 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 178 | query_module           |  0xb2 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 179 | quotactl               |  0xb3 | unsigned int cmd                  | const char *special                 | qid_t id                                      | void *addr                              | -                                           | -                   |
| 180 | nfsservctl             |  0xb4 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 181 | getpmsg                |  0xb5 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 182 | putpmsg                |  0xb6 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 183 | afs_syscall            |  0xb7 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 184 | tuxcall                |  0xb8 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 185 | security               |  0xb9 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 186 | gettid                 |  0xba | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
| 187 | readahead              |  0xbb | int fd                            | loff_t offset                       | size_t count                                  | -                                       | -                                           | -                   |
| 188 | setxattr               |  0xbc | const char *path                  | const char *name                    | const void *value                             | size_t size                             | int flags                                   | -                   |
| 189 | lsetxattr              |  0xbd | const char *path                  | const char *name                    | const void *value                             | size_t size                             | int flags                                   | -                   |
| 190 | fsetxattr              |  0xbe | int fd                            | const char *name                    | const void *value                             | size_t size                             | int flags                                   | -                   |
| 191 | getxattr               |  0xbf | const char *path                  | const char *name                    | void *value                                   | size_t size                             | -                                           | -                   |
| 192 | lgetxattr              |  0xc0 | const char *path                  | const char *name                    | void *value                                   | size_t size                             | -                                           | -                   |
| 193 | fgetxattr              |  0xc1 | int fd                            | const char *name                    | void *value                                   | size_t size                             | -                                           | -                   |
| 194 | listxattr              |  0xc2 | const char *path                  | char *list                          | size_t size                                   | -                                       | -                                           | -                   |
| 195 | llistxattr             |  0xc3 | const char *path                  | char *list                          | size_t size                                   | -                                       | -                                           | -                   |
| 196 | flistxattr             |  0xc4 | int fd                            | char *list                          | size_t size                                   | -                                       | -                                           | -                   |
| 197 | removexattr            |  0xc5 | const char *path                  | const char *name                    | -                                             | -                                       | -                                           | -                   |
| 198 | lremovexattr           |  0xc6 | const char *path                  | const char *name                    | -                                             | -                                       | -                                           | -                   |
| 199 | fremovexattr           |  0xc7 | int fd                            | const char *name                    | -                                             | -                                       | -                                           | -                   |
| 200 | tkill                  |  0xc8 | pid_t pid                         | int sig                             | -                                             | -                                       | -                                           | -                   |
| 201 | time                   |  0xc9 | time_t *tloc                      | -                                   | -                                             | -                                       | -                                           | -                   |
| 202 | futex                  |  0xca | u32 *uaddr                        | int op                              | u32 val                                       | struct __kernel_timespec *utime         | u32 *uaddr2                                 | u32 val3            |
| 203 | sched_setaffinity      |  0xcb | pid_t pid                         | unsigned int len                    | unsigned long *user_mask_ptr                  | -                                       | -                                           | -                   |
| 204 | sched_getaffinity      |  0xcc | pid_t pid                         | unsigned int len                    | unsigned long *user_mask_ptr                  | -                                       | -                                           | -                   |
| 205 | set_thread_area        |  0xcd | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 206 | io_setup               |  0xce | unsigned nr_reqs                  | aio_context_t *ctx                  | -                                             | -                                       | -                                           | -                   |
| 207 | io_destroy             |  0xcf | aio_context_t ctx                 | -                                   | -                                             | -                                       | -                                           | -                   |
| 208 | io_getevents           |  0xd0 | aio_context_t ctx_id              | long min_nr                         | long nr                                       | struct io_event *events                 | struct __kernel_timespec *timeout           | -                   |
| 209 | io_submit              |  0xd1 | aio_context_t                     | long                                | struct iocb * *                               | -                                       | -                                           | -                   |
| 210 | io_cancel              |  0xd2 | aio_context_t ctx_id              | struct iocb *iocb                   | struct io_event *result                       | -                                       | -                                           | -                   |
| 211 | get_thread_area        |  0xd3 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 212 | lookup_dcookie         |  0xd4 | u64 cookie64                      | char *buf                           | size_t len                                    | -                                       | -                                           | -                   |
| 213 | epoll_create           |  0xd5 | int size                          | -                                   | -                                             | -                                       | -                                           | -                   |
| 214 | epoll_ctl_old          |  0xd6 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 215 | epoll_wait_old         |  0xd7 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 216 | remap_file_pages       |  0xd8 | unsigned long start               | unsigned long size                  | unsigned long prot                            | unsigned long pgoff                     | unsigned long flags                         | -                   |
| 217 | getdents64             |  0xd9 | unsigned int fd                   | struct linux_dirent64 *dirent       | unsigned int count                            | -                                       | -                                           | -                   |
| 218 | set_tid_address        |  0xda | int *tidptr                       | -                                   | -                                             | -                                       | -                                           | -                   |
| 219 | restart_syscall        |  0xdb | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
| 220 | semtimedop             |  0xdc | int semid                         | struct sembuf *sops                 | unsigned nsops                                | const struct __kernel_timespec *timeout | -                                           | -                   |
| 221 | fadvise64              |  0xdd | int fd                            | loff_t offset                       | size_t len                                    | int advice                              | -                                           | -                   |
| 222 | timer_create           |  0xde | clockid_t which_clock             | struct sigevent *timer_event_spec   | timer_t * created_timer_id                    | -                                       | -                                           | -                   |
| 223 | timer_settime          |  0xdf | timer_t timer_id                  | int flags                           | const struct __kernel_itimerspec *new_setting | struct __kernel_itimerspec *old_setting | -                                           | -                   |
| 224 | timer_gettime          |  0xe0 | timer_t timer_id                  | struct __kernel_itimerspec *setting | -                                             | -                                       | -                                           | -                   |
| 225 | timer_getoverrun       |  0xe1 | timer_t timer_id                  | -                                   | -                                             | -                                       | -                                           | -                   |
| 226 | timer_delete           |  0xe2 | timer_t timer_id                  | -                                   | -                                             | -                                       | -                                           | -                   |
| 227 | clock_settime          |  0xe3 | clockid_t which_clock             | const struct __kernel_timespec *tp  | -                                             | -                                       | -                                           | -                   |
| 228 | clock_gettime          |  0xe4 | clockid_t which_clock             | struct __kernel_timespec *tp        | -                                             | -                                       | -                                           | -                   |
| 229 | clock_getres           |  0xe5 | clockid_t which_clock             | struct __kernel_timespec *tp        | -                                             | -                                       | -                                           | -                   |
| 230 | clock_nanosleep        |  0xe6 | clockid_t which_clock             | int flags                           | const struct __kernel_timespec *rqtp          | struct __kernel_timespec *rmtp          | -                                           | -                   |
| 231 | exit_group             |  0xe7 | int error_code                    | -                                   | -                                             | -                                       | -                                           | -                   |
| 232 | epoll_wait             |  0xe8 | int epfd                          | struct epoll_event *events          | int maxevents                                 | int timeout                             | -                                           | -                   |
| 233 | epoll_ctl              |  0xe9 | int epfd                          | int op                              | int fd                                        | struct epoll_event *event               | -                                           | -                   |
| 234 | tgkill                 |  0xea | pid_t tgid                        | pid_t pid                           | int sig                                       | -                                       | -                                           | -                   |
| 235 | utimes                 |  0xeb | char *filename                    | struct timeval *utimes              | -                                             | -                                       | -                                           | -                   |
| 236 | vserver                |  0xec | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 237 | mbind                  |  0xed | unsigned long start               | unsigned long len                   | unsigned long mode                            | const unsigned long *nmask              | unsigned long maxnode                       | unsigned flags      |
| 238 | set_mempolicy          |  0xee | int mode                          | const unsigned long *nmask          | unsigned long maxnode                         | -                                       | -                                           | -                   |
| 239 | get_mempolicy          |  0xef | int *policy                       | unsigned long *nmask                | unsigned long maxnode                         | unsigned long addr                      | unsigned long flags                         | -                   |
| 240 | mq_open                |  0xf0 | const char *name                  | int oflag                           | umode_t mode                                  | struct mq_attr *attr                    | -                                           | -                   |
| 241 | mq_unlink              |  0xf1 | const char *name                  | -                                   | -                                             | -                                       | -                                           | -                   |
| 242 | mq_timedsend           |  0xf2 | mqd_t mqdes                       | const char *msg_ptr                 | size_t msg_len                                | unsigned int msg_prio                   | const struct __kernel_timespec *abs_timeout | -                   |
| 243 | mq_timedreceive        |  0xf3 | mqd_t mqdes                       | char *msg_ptr                       | size_t msg_len                                | unsigned int *msg_prio                  | const struct __kernel_timespec *abs_timeout | -                   |
| 244 | mq_notify              |  0xf4 | mqd_t mqdes                       | const struct sigevent *notification | -                                             | -                                       | -                                           | -                   |
| 245 | mq_getsetattr          |  0xf5 | mqd_t mqdes                       | const struct mq_attr *mqstat        | struct mq_attr *omqstat                       | -                                       | -                                           | -                   |
| 246 | kexec_load             |  0xf6 | unsigned long entry               | unsigned long nr_segments           | struct kexec_segment *segments                | unsigned long flags                     | -                                           | -                   |
| 247 | waitid                 |  0xf7 | int which                         | pid_t pid                           | struct siginfo *infop                         | int options                             | struct rusage *ru                           | -                   |
| 248 | add_key                |  0xf8 | const char *_type                 | const char *_description            | const void *_payload                          | size_t plen                             | key_serial_t destringid                     | -                   |
| 249 | request_key            |  0xf9 | const char *_type                 | const char *_description            | const char *_callout_info                     | key_serial_t destringid                 | -                                           | -                   |
| 250 | keyctl                 |  0xfa | int cmd                           | unsigned long arg2                  | unsigned long arg3                            | unsigned long arg4                      | unsigned long arg5                          | -                   |
| 251 | ioprio_set             |  0xfb | int which                         | int who                             | int ioprio                                    | -                                       | -                                           | -                   |
| 252 | ioprio_get             |  0xfc | int which                         | int who                             | -                                             | -                                       | -                                           | -                   |
| 253 | inotify_init           |  0xfd | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
| 254 | inotify_add_watch      |  0xfe | int fd                            | const char *path                    | u32 mask                                      | -                                       | -                                           | -                   |
| 255 | inotify_rm_watch       |  0xff | int fd                            | __s32 wd                            | -                                             | -                                       | -                                           | -                   |
| 256 | migrate_pages          | 0x100 | pid_t pid                         | unsigned long maxnode               | const unsigned long *from                     | const unsigned long *to                 | -                                           | -                   |
| 257 | openat                 | 0x101 | int dfd                           | const char *filename                | int flags                                     | umode_t mode                            | -                                           | -                   |
| 258 | mkdirat                | 0x102 | int dfd                           | const char * pathname               | umode_t mode                                  | -                                       | -                                           | -                   |
| 259 | mknodat                | 0x103 | int dfd                           | const char * filename               | umode_t mode                                  | unsigned dev                            | -                                           | -                   |
| 260 | fchownat               | 0x104 | int dfd                           | const char *filename                | uid_t user                                    | gid_t group                             | int flag                                    | -                   |
| 261 | futimesat              | 0x105 | int dfd                           | const char *filename                | struct timeval *utimes                        | -                                       | -                                           | -                   |
| 262 | newfstatat             | 0x106 | int dfd                           | const char *filename                | struct stat *statbuf                          | int flag                                | -                                           | -                   |
| 263 | unlinkat               | 0x107 | int dfd                           | const char * pathname               | int flag                                      | -                                       | -                                           | -                   |
| 264 | renameat               | 0x108 | int olddfd                        | const char * oldname                | int newdfd                                    | const char * newname                    | -                                           | -                   |
| 265 | linkat                 | 0x109 | int olddfd                        | const char *oldname                 | int newdfd                                    | const char *newname                     | int flags                                   | -                   |
| 266 | symlinkat              | 0x10a | const char * oldname              | int newdfd                          | const char * newname                          | -                                       | -                                           | -                   |
| 267 | readlinkat             | 0x10b | int dfd                           | const char *path                    | char *buf                                     | int bufsiz                              | -                                           | -                   |
| 268 | fchmodat               | 0x10c | int dfd                           | const char * filename               | umode_t mode                                  | -                                       | -                                           | -                   |
| 269 | faccessat              | 0x10d | int dfd                           | const char *filename                | int mode                                      | -                                       | -                                           | -                   |
| 270 | pselect6               | 0x10e | int                               | fd_set *                            | fd_set *                                      | fd_set *                                | struct __kernel_timespec *                  | void *              |
| 271 | ppoll                  | 0x10f | struct pollfd *                   | unsigned int                        | struct __kernel_timespec *                    | const sigset_t *                        | size_t                                      | -                   |
| 272 | unshare                | 0x110 | unsigned long unshare_flags       | -                                   | -                                             | -                                       | -                                           | -                   |
| 273 | set_robust_list        | 0x111 | struct robust_list_head *head     | size_t len                          | -                                             | -                                       | -                                           | -                   |
| 274 | get_robust_list        | 0x112 | int pid                           | struct robust_list_head * *head_ptr | size_t *len_ptr                               | -                                       | -                                           | -                   |
| 275 | splice                 | 0x113 | int fd_in                         | loff_t *off_in                      | int fd_out                                    | loff_t *off_out                         | size_t len                                  | unsigned int flags  |
| 276 | tee                    | 0x114 | int fdin                          | int fdout                           | size_t len                                    | unsigned int flags                      | -                                           | -                   |
| 277 | sync_file_range        | 0x115 | int fd                            | loff_t offset                       | loff_t nbytes                                 | unsigned int flags                      | -                                           | -                   |
| 278 | vmsplice               | 0x116 | int fd                            | const struct iovec *iov             | unsigned long nr_segs                         | unsigned int flags                      | -                                           | -                   |
| 279 | move_pages             | 0x117 | pid_t pid                         | unsigned long nr_pages              | const void * *pages                           | const int *nodes                        | int *status                                 | int flags           |
| 280 | utimensat              | 0x118 | int dfd                           | const char *filename                | struct __kernel_timespec *utimes              | int flags                               | -                                           | -                   |
| 281 | epoll_pwait            | 0x119 | int epfd                          | struct epoll_event *events          | int maxevents                                 | int timeout                             | const sigset_t *sigmask                     | size_t sigsetsize   |
| 282 | signalfd               | 0x11a | int ufd                           | sigset_t *user_mask                 | size_t sizemask                               | -                                       | -                                           | -                   |
| 283 | timerfd_create         | 0x11b | int clockid                       | int flags                           | -                                             | -                                       | -                                           | -                   |
| 284 | eventfd                | 0x11c | unsigned int count                | -                                   | -                                             | -                                       | -                                           | -                   |
| 285 | fallocate              | 0x11d | int fd                            | int mode                            | loff_t offset                                 | loff_t len                              | -                                           | -                   |
| 286 | timerfd_settime        | 0x11e | int ufd                           | int flags                           | const struct __kernel_itimerspec *utmr        | struct __kernel_itimerspec *otmr        | -                                           | -                   |
| 287 | timerfd_gettime        | 0x11f | int ufd                           | struct __kernel_itimerspec *otmr    | -                                             | -                                       | -                                           | -                   |
| 288 | accept4                | 0x120 | int                               | struct sockaddr *                   | int *                                         | int                                     | -                                           | -                   |
| 289 | signalfd4              | 0x121 | int ufd                           | sigset_t *user_mask                 | size_t sizemask                               | int flags                               | -                                           | -                   |
| 290 | eventfd2               | 0x122 | unsigned int count                | int flags                           | -                                             | -                                       | -                                           | -                   |
| 291 | epoll_create1          | 0x123 | int flags                         | -                                   | -                                             | -                                       | -                                           | -                   |
| 292 | dup3                   | 0x124 | unsigned int oldfd                | unsigned int newfd                  | int flags                                     | -                                       | -                                           | -                   |
| 293 | pipe2                  | 0x125 | int *fildes                       | int flags                           | -                                             | -                                       | -                                           | -                   |
| 294 | inotify_init1          | 0x126 | int flags                         | -                                   | -                                             | -                                       | -                                           | -                   |
| 295 | preadv                 | 0x127 | unsigned long fd                  | const struct iovec *vec             | unsigned long vlen                            | unsigned long pos_l                     | unsigned long pos_h                         | -                   |
| 296 | pwritev                | 0x128 | unsigned long fd                  | const struct iovec *vec             | unsigned long vlen                            | unsigned long pos_l                     | unsigned long pos_h                         | -                   |
| 297 | rt_tgsigqueueinfo      | 0x129 | pid_t tgid                        | pid_t pid                           | int sig                                       | siginfo_t *uinfo                        | -                                           | -                   |
| 298 | perf_event_open        | 0x12a | struct perf_event_attr *attr_uptr | pid_t pid                           | int cpu                                       | int group_fd                            | unsigned long flags                         | -                   |
| 299 | recvmmsg               | 0x12b | int fd                            | struct mmsghdr *msg                 | unsigned int vlen                             | unsigned flags                          | struct __kernel_timespec *timeout           | -                   |
| 300 | fanotify_init          | 0x12c | unsigned int flags                | unsigned int event_f_flags          | -                                             | -                                       | -                                           | -                   |
| 301 | fanotify_mark          | 0x12d | int fanotify_fd                   | unsigned int flags                  | u64 mask                                      | int fd                                  | const char *pathname                        | -                   |
| 302 | prlimit64              | 0x12e | pid_t pid                         | unsigned int resource               | const struct rlimit64 *new_rlim               | struct rlimit64 *old_rlim               | -                                           | -                   |
| 303 | name_to_handle_at      | 0x12f | int dfd                           | const char *name                    | struct file_handle *handle                    | int *mnt_id                             | int flag                                    | -                   |
| 304 | open_by_handle_at      | 0x130 | int mountdirfd                    | struct file_handle *handle          | int flags                                     | -                                       | -                                           | -                   |
| 305 | clock_adjtime          | 0x131 | clockid_t which_clock             | struct __kernel_timex *tx           | -                                             | -                                       | -                                           | -                   |
| 306 | syncfs                 | 0x132 | int fd                            | -                                   | -                                             | -                                       | -                                           | -                   |
| 307 | sendmmsg               | 0x133 | int fd                            | struct mmsghdr *msg                 | unsigned int vlen                             | unsigned flags                          | -                                           | -                   |
| 308 | setns                  | 0x134 | int fd                            | int nstype                          | -                                             | -                                       | -                                           | -                   |
| 309 | getcpu                 | 0x135 | unsigned *cpu                     | unsigned *node                      | struct getcpu_cache *cache                    | -                                       | -                                           | -                   |
| 310 | process_vm_readv       | 0x136 | pid_t pid                         | const struct iovec *lvec            | unsigned long liovcnt                         | const struct iovec *rvec                | unsigned long riovcnt                       | unsigned long flags |
| 311 | process_vm_writev      | 0x137 | pid_t pid                         | const struct iovec *lvec            | unsigned long liovcnt                         | const struct iovec *rvec                | unsigned long riovcnt                       | unsigned long flags |
| 312 | kcmp                   | 0x138 | pid_t pid1                        | pid_t pid2                          | int type                                      | unsigned long idx1                      | unsigned long idx2                          | -                   |
| 313 | finit_module           | 0x139 | int fd                            | const char *uargs                   | int flags                                     | -                                       | -                                           | -                   |
| 314 | sched_setattr          | 0x13a | pid_t pid                         | struct sched_attr *attr             | unsigned int flags                            | -                                       | -                                           | -                   |
| 315 | sched_getattr          | 0x13b | pid_t pid                         | struct sched_attr *attr             | unsigned int size                             | unsigned int flags                      | -                                           | -                   |
| 316 | renameat2              | 0x13c | int olddfd                        | const char *oldname                 | int newdfd                                    | const char *newname                     | unsigned int flags                          | -                   |
| 317 | seccomp                | 0x13d | unsigned int op                   | unsigned int flags                  | void *uargs                                   | -                                       | -                                           | -                   |
| 318 | getrandom              | 0x13e | char *buf                         | size_t count                        | unsigned int flags                            | -                                       | -                                           | -                   |
| 319 | memfd_create           | 0x13f | const char *uname_ptr             | unsigned int flags                  | -                                             | -                                       | -                                           | -                   |
| 320 | kexec_file_load        | 0x140 | int kernel_fd                     | int initrd_fd                       | unsigned long cmdline_len                     | const char *cmdline_ptr                 | unsigned long flags                         | -                   |
| 321 | bpf                    | 0x141 | int cmd                           | union bpf_attr *attr                | unsigned int size                             | -                                       | -                                           | -                   |
| 322 | execveat               | 0x142 | int dfd                           | const char *filename                | const char *const *argv                       | const char *const *envp                 | int flags                                   | -                   |
| 323 | userfaultfd            | 0x143 | int flags                         | -                                   | -                                             | -                                       | -                                           | -                   |
| 324 | membarrier             | 0x144 | int cmd                           | int flags                           | -                                             | -                                       | -                                           | -                   |
| 325 | mlock2                 | 0x145 | unsigned long start               | size_t len                          | int flags                                     | -                                       | -                                           | -                   |
| 326 | copy_file_range        | 0x146 | int fd_in                         | loff_t *off_in                      | int fd_out                                    | loff_t *off_out                         | size_t len                                  | unsigned int flags  |
| 327 | preadv2                | 0x147 | unsigned long fd                  | const struct iovec *vec             | unsigned long vlen                            | unsigned long pos_l                     | unsigned long pos_h                         | rwf_t flags         |
| 328 | pwritev2               | 0x148 | unsigned long fd                  | const struct iovec *vec             | unsigned long vlen                            | unsigned long pos_l                     | unsigned long pos_h                         | rwf_t flags         |
| 329 | pkey_mprotect          | 0x149 | unsigned long start               | size_t len                          | unsigned long prot                            | int pkey                                | -                                           | -                   |
| 330 | pkey_alloc             | 0x14a | unsigned long flags               | unsigned long init_val              | -                                             | -                                       | -                                           | -                   |
| 331 | pkey_free              | 0x14b | int pkey                          | -                                   | -                                             | -                                       | -                                           | -                   |
| 332 | statx                  | 0x14c | int dfd                           | const char *path                    | unsigned flags                                | unsigned mask                           | struct statx *buffer                        | -                   |

****** facts
****** how to
******* call a syscall
#+begin_src asm
syscall
#+end_src
******* write a simple "hello world"
******** code
#+begin_src asm
section .data
    hello:     db 'Hello world!',10
    helloLen:  equ $-hello

section .text
    global _start

_start:
    mov rax, 0x01
    mov rdi, 0x01
    mov rsi, hello
    mov rdx, helloLen
    syscall

    mov rax, 0x3c
    mov rdi, 0
    syscall

#+end_src
******** compilation command
   #+begin_src sh
nasm -f elf64 -o hello.o hello.s
ld -m elf_x86_64 -o hello hello.o
   #+end_src

***** ARM Linux
****** syscall table
|     NR | syscall name           |     %r7 | arg0 (%r0)                        | arg1 (%r1)                          | arg2 (%r2)                                    | arg3 (%r3)                              | arg4 (%r4)                                  | arg5 (%r5)          |
|--------+------------------------+---------+-----------------------------------+-------------------------------------+-----------------------------------------------+-----------------------------------------+---------------------------------------------+---------------------|
|      0 | restart_syscall        |    0x00 | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
|      1 | exit                   |    0x01 | int error_code                    | -                                   | -                                             | -                                       | -                                           | -                   |
|      2 | fork                   |    0x02 | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
|      3 | read                   |    0x03 | unsigned int fd                   | char *buf                           | size_t count                                  | -                                       | -                                           | -                   |
|      4 | write                  |    0x04 | unsigned int fd                   | const char *buf                     | size_t count                                  | -                                       | -                                           | -                   |
|      5 | open                   |    0x05 | const char *filename              | int flags                           | umode_t mode                                  | -                                       | -                                           | -                   |
|      6 | close                  |    0x06 | unsigned int fd                   | -                                   | -                                             | -                                       | -                                           | -                   |
|      7 | not implemented        |    0x07 |                                   |                                     |                                               |                                         |                                             |                     |
|      8 | creat                  |    0x08 | const char *pathname              | umode_t mode                        | -                                             | -                                       | -                                           | -                   |
|      9 | link                   |    0x09 | const char *oldname               | const char *newname                 | -                                             | -                                       | -                                           | -                   |
|     10 | unlink                 |    0x0a | const char *pathname              | -                                   | -                                             | -                                       | -                                           | -                   |
|     11 | execve                 |    0x0b | const char *filename              | const char *const *argv             | const char *const *envp                       | -                                       | -                                           | -                   |
|     12 | chdir                  |    0x0c | const char *filename              | -                                   | -                                             | -                                       | -                                           | -                   |
|     13 | not implemented        |    0x0d |                                   |                                     |                                               |                                         |                                             |                     |
|     14 | mknod                  |    0x0e | const char *filename              | umode_t mode                        | unsigned dev                                  | -                                       | -                                           | -                   |
|     15 | chmod                  |    0x0f | const char *filename              | umode_t mode                        | -                                             | -                                       | -                                           | -                   |
|     16 | lchown                 |    0x10 | const char *filename              | uid_t user                          | gid_t group                                   | -                                       | -                                           | -                   |
|     17 | not implemented        |    0x11 |                                   |                                     |                                               |                                         |                                             |                     |
|     18 | not implemented        |    0x12 |                                   |                                     |                                               |                                         |                                             |                     |
|     19 | lseek                  |    0x13 | unsigned int fd                   | off_t offset                        | unsigned int whence                           | -                                       | -                                           | -                   |
|     20 | getpid                 |    0x14 | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
|     21 | mount                  |    0x15 | char *dev_name                    | char *dir_name                      | char *type                                    | unsigned long flags                     | void *data                                  | -                   |
|     22 | not implemented        |    0x16 |                                   |                                     |                                               |                                         |                                             |                     |
|     23 | setuid                 |    0x17 | uid_t uid                         | -                                   | -                                             | -                                       | -                                           | -                   |
|     24 | getuid                 |    0x18 | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
|     25 | not implemented        |    0x19 |                                   |                                     |                                               |                                         |                                             |                     |
|     26 | ptrace                 |    0x1a | long request                      | long pid                            | unsigned long addr                            | unsigned long data                      | -                                           | -                   |
|     27 | not implemented        |    0x1b |                                   |                                     |                                               |                                         |                                             |                     |
|     28 | not implemented        |    0x1c |                                   |                                     |                                               |                                         |                                             |                     |
|     29 | pause                  |    0x1d | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
|     30 | not implemented        |    0x1e |                                   |                                     |                                               |                                         |                                             |                     |
|     31 | not implemented        |    0x1f |                                   |                                     |                                               |                                         |                                             |                     |
|     32 | not implemented        |    0x20 |                                   |                                     |                                               |                                         |                                             |                     |
|     33 | access                 |    0x21 | const char *filename              | int mode                            | -                                             | -                                       | -                                           | -                   |
|     34 | nice                   |    0x22 | int increment                     | -                                   | -                                             | -                                       | -                                           | -                   |
|     35 | not implemented        |    0x23 |                                   |                                     |                                               |                                         |                                             |                     |
|     36 | sync                   |    0x24 | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
|     37 | kill                   |    0x25 | pid_t pid                         | int sig                             | -                                             | -                                       | -                                           | -                   |
|     38 | rename                 |    0x26 | const char *oldname               | const char *newname                 | -                                             | -                                       | -                                           | -                   |
|     39 | mkdir                  |    0x27 | const char *pathname              | umode_t mode                        | -                                             | -                                       | -                                           | -                   |
|     40 | rmdir                  |    0x28 | const char *pathname              | -                                   | -                                             | -                                       | -                                           | -                   |
|     41 | dup                    |    0x29 | unsigned int fildes               | -                                   | -                                             | -                                       | -                                           | -                   |
|     42 | pipe                   |    0x2a | int *fildes                       | -                                   | -                                             | -                                       | -                                           | -                   |
|     43 | times                  |    0x2b | struct tms *tbuf                  | -                                   | -                                             | -                                       | -                                           | -                   |
|     44 | not implemented        |    0x2c |                                   |                                     |                                               |                                         |                                             |                     |
|     45 | brk                    |    0x2d | unsigned long brk                 | -                                   | -                                             | -                                       | -                                           | -                   |
|     46 | setgid                 |    0x2e | gid_t gid                         | -                                   | -                                             | -                                       | -                                           | -                   |
|     47 | getgid                 |    0x2f | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
|     48 | not implemented        |    0x30 |                                   |                                     |                                               |                                         |                                             |                     |
|     49 | geteuid                |    0x31 | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
|     50 | getegid                |    0x32 | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
|     51 | acct                   |    0x33 | const char *name                  | -                                   | -                                             | -                                       | -                                           | -                   |
|     52 | umount2                |    0x34 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
|     53 | not implemented        |    0x35 |                                   |                                     |                                               |                                         |                                             |                     |
|     54 | ioctl                  |    0x36 | unsigned int fd                   | unsigned int cmd                    | unsigned long arg                             | -                                       | -                                           | -                   |
|     55 | fcntl                  |    0x37 | unsigned int fd                   | unsigned int cmd                    | unsigned long arg                             | -                                       | -                                           | -                   |
|     56 | not implemented        |    0x38 |                                   |                                     |                                               |                                         |                                             |                     |
|     57 | setpgid                |    0x39 | pid_t pid                         | pid_t pgid                          | -                                             | -                                       | -                                           | -                   |
|     58 | not implemented        |    0x3a |                                   |                                     |                                               |                                         |                                             |                     |
|     59 | not implemented        |    0x3b |                                   |                                     |                                               |                                         |                                             |                     |
|     60 | umask                  |    0x3c | int mask                          | -                                   | -                                             | -                                       | -                                           | -                   |
|     61 | chroot                 |    0x3d | const char *filename              | -                                   | -                                             | -                                       | -                                           | -                   |
|     62 | ustat                  |    0x3e | unsigned dev                      | struct ustat *ubuf                  | -                                             | -                                       | -                                           | -                   |
|     63 | dup2                   |    0x3f | unsigned int oldfd                | unsigned int newfd                  | -                                             | -                                       | -                                           | -                   |
|     64 | getppid                |    0x40 | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
|     65 | getpgrp                |    0x41 | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
|     66 | setsid                 |    0x42 | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
|     67 | sigaction              |    0x43 | int                               | const struct old_sigaction *        | struct old_sigaction *                        | -                                       | -                                           | -                   |
|     68 | not implemented        |    0x44 |                                   |                                     |                                               |                                         |                                             |                     |
|     69 | not implemented        |    0x45 |                                   |                                     |                                               |                                         |                                             |                     |
|     70 | setreuid               |    0x46 | uid_t ruid                        | uid_t euid                          | -                                             | -                                       | -                                           | -                   |
|     71 | setregid               |    0x47 | gid_t rgid                        | gid_t egid                          | -                                             | -                                       | -                                           | -                   |
|     72 | sigsuspend             |    0x48 | int unused1                       | int unused2                         | old_sigset_t mask                             | -                                       | -                                           | -                   |
|     73 | sigpending             |    0x49 | old_sigset_t *uset                | -                                   | -                                             | -                                       | -                                           | -                   |
|     74 | sethostname            |    0x4a | char *name                        | int len                             | -                                             | -                                       | -                                           | -                   |
|     75 | setrlimit              |    0x4b | unsigned int resource             | struct rlimit *rlim                 | -                                             | -                                       | -                                           | -                   |
|     76 | not implemented        |    0x4c |                                   |                                     |                                               |                                         |                                             |                     |
|     77 | getrusage              |    0x4d | int who                           | struct rusage *ru                   | -                                             | -                                       | -                                           | -                   |
|     78 | gettimeofday           |    0x4e | struct timeval *tv                | struct timezone *tz                 | -                                             | -                                       | -                                           | -                   |
|     79 | settimeofday           |    0x4f | struct timeval *tv                | struct timezone *tz                 | -                                             | -                                       | -                                           | -                   |
|     80 | getgroups              |    0x50 | int gidsetsize                    | gid_t *grouplist                    | -                                             | -                                       | -                                           | -                   |
|     81 | setgroups              |    0x51 | int gidsetsize                    | gid_t *grouplist                    | -                                             | -                                       | -                                           | -                   |
|     82 | not implemented        |    0x52 |                                   |                                     |                                               |                                         |                                             |                     |
|     83 | symlink                |    0x53 | const char *old                   | const char *new                     | -                                             | -                                       | -                                           | -                   |
|     84 | not implemented        |    0x54 |                                   |                                     |                                               |                                         |                                             |                     |
|     85 | readlink               |    0x55 | const char *path                  | char *buf                           | int bufsiz                                    | -                                       | -                                           | -                   |
|     86 | uselib                 |    0x56 | const char *library               | -                                   | -                                             | -                                       | -                                           | -                   |
|     87 | swapon                 |    0x57 | const char *specialfile           | int swap_flags                      | -                                             | -                                       | -                                           | -                   |
|     88 | reboot                 |    0x58 | int magic1                        | int magic2                          | unsigned int cmd                              | void *arg                               | -                                           | -                   |
|     89 | not implemented        |    0x59 |                                   |                                     |                                               |                                         |                                             |                     |
|     90 | not implemented        |    0x5a |                                   |                                     |                                               |                                         |                                             |                     |
|     91 | munmap                 |    0x5b | unsigned long addr                | size_t len                          | -                                             | -                                       | -                                           | -                   |
|     92 | truncate               |    0x5c | const char *path                  | long length                         | -                                             | -                                       | -                                           | -                   |
|     93 | ftruncate              |    0x5d | unsigned int fd                   | unsigned long length                | -                                             | -                                       | -                                           | -                   |
|     94 | fchmod                 |    0x5e | unsigned int fd                   | umode_t mode                        | -                                             | -                                       | -                                           | -                   |
|     95 | fchown                 |    0x5f | unsigned int fd                   | uid_t user                          | gid_t group                                   | -                                       | -                                           | -                   |
|     96 | getpriority            |    0x60 | int which                         | int who                             | -                                             | -                                       | -                                           | -                   |
|     97 | setpriority            |    0x61 | int which                         | int who                             | int niceval                                   | -                                       | -                                           | -                   |
|     98 | not implemented        |    0x62 |                                   |                                     |                                               |                                         |                                             |                     |
|     99 | statfs                 |    0x63 | const char * path                 | struct statfs *buf                  | -                                             | -                                       | -                                           | -                   |
|    100 | fstatfs                |    0x64 | unsigned int fd                   | struct statfs *buf                  | -                                             | -                                       | -                                           | -                   |
|    101 | not implemented        |    0x65 |                                   |                                     |                                               |                                         |                                             |                     |
|    102 | not implemented        |    0x66 |                                   |                                     |                                               |                                         |                                             |                     |
|    103 | syslog                 |    0x67 | int type                          | char *buf                           | int len                                       | -                                       | -                                           | -                   |
|    104 | setitimer              |    0x68 | int which                         | struct itimerval *value             | struct itimerval *ovalue                      | -                                       | -                                           | -                   |
|    105 | getitimer              |    0x69 | int which                         | struct itimerval *value             | -                                             | -                                       | -                                           | -                   |
|    106 | stat                   |    0x6a | const char *filename              | struct __old_kernel_stat *statbuf   | -                                             | -                                       | -                                           | -                   |
|    107 | lstat                  |    0x6b | const char *filename              | struct __old_kernel_stat *statbuf   | -                                             | -                                       | -                                           | -                   |
|    108 | fstat                  |    0x6c | unsigned int fd                   | struct __old_kernel_stat *statbuf   | -                                             | -                                       | -                                           | -                   |
|    109 | not implemented        |    0x6d |                                   |                                     |                                               |                                         |                                             |                     |
|    110 | not implemented        |    0x6e |                                   |                                     |                                               |                                         |                                             |                     |
|    111 | vhangup                |    0x6f | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
|    112 | not implemented        |    0x70 |                                   |                                     |                                               |                                         |                                             |                     |
|    113 | not implemented        |    0x71 |                                   |                                     |                                               |                                         |                                             |                     |
|    114 | wait4                  |    0x72 | pid_t pid                         | int *stat_addr                      | int options                                   | struct rusage *ru                       | -                                           | -                   |
|    115 | swapoff                |    0x73 | const char *specialfile           | -                                   | -                                             | -                                       | -                                           | -                   |
|    116 | sysinfo                |    0x74 | struct sysinfo *info              | -                                   | -                                             | -                                       | -                                           | -                   |
|    117 | not implemented        |    0x75 |                                   |                                     |                                               |                                         |                                             |                     |
|    118 | fsync                  |    0x76 | unsigned int fd                   | -                                   | -                                             | -                                       | -                                           | -                   |
|    119 | sigreturn              |    0x77 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
|    120 | clone                  |    0x78 | unsigned long                     | unsigned long                       | int *                                         | int *                                   | unsigned long                               | -                   |
|    121 | setdomainname          |    0x79 | char *name                        | int len                             | -                                             | -                                       | -                                           | -                   |
|    122 | uname                  |    0x7a | struct old_utsname *              | -                                   | -                                             | -                                       | -                                           | -                   |
|    123 | not implemented        |    0x7b |                                   |                                     |                                               |                                         |                                             |                     |
|    124 | adjtimex               |    0x7c | struct __kernel_timex *txc_p      | -                                   | -                                             | -                                       | -                                           | -                   |
|    125 | mprotect               |    0x7d | unsigned long start               | size_t len                          | unsigned long prot                            | -                                       | -                                           | -                   |
|    126 | sigprocmask            |    0x7e | int how                           | old_sigset_t *set                   | old_sigset_t *oset                            | -                                       | -                                           | -                   |
|    127 | not implemented        |    0x7f |                                   |                                     |                                               |                                         |                                             |                     |
|    128 | init_module            |    0x80 | void *umod                        | unsigned long len                   | const char *uargs                             | -                                       | -                                           | -                   |
|    129 | delete_module          |    0x81 | const char *name_user             | unsigned int flags                  | -                                             | -                                       | -                                           | -                   |
|    130 | not implemented        |    0x82 |                                   |                                     |                                               |                                         |                                             |                     |
|    131 | quotactl               |    0x83 | unsigned int cmd                  | const char *special                 | qid_t id                                      | void *addr                              | -                                           | -                   |
|    132 | getpgid                |    0x84 | pid_t pid                         | -                                   | -                                             | -                                       | -                                           | -                   |
|    133 | fchdir                 |    0x85 | unsigned int fd                   | -                                   | -                                             | -                                       | -                                           | -                   |
|    134 | bdflush                |    0x86 | int func                          | long data                           | -                                             | -                                       | -                                           | -                   |
|    135 | sysfs                  |    0x87 | int option                        | unsigned long arg1                  | unsigned long arg2                            | -                                       | -                                           | -                   |
|    136 | personality            |    0x88 | unsigned int personality          | -                                   | -                                             | -                                       | -                                           | -                   |
|    137 | not implemented        |    0x89 |                                   |                                     |                                               |                                         |                                             |                     |
|    138 | setfsuid               |    0x8a | uid_t uid                         | -                                   | -                                             | -                                       | -                                           | -                   |
|    139 | setfsgid               |    0x8b | gid_t gid                         | -                                   | -                                             | -                                       | -                                           | -                   |
|    140 | _llseek                |    0x8c | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
|    141 | getdents               |    0x8d | unsigned int fd                   | struct linux_dirent *dirent         | unsigned int count                            | -                                       | -                                           | -                   |
|    142 | _newselect             |    0x8e | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
|    143 | flock                  |    0x8f | unsigned int fd                   | unsigned int cmd                    | -                                             | -                                       | -                                           | -                   |
|    144 | msync                  |    0x90 | unsigned long start               | size_t len                          | int flags                                     | -                                       | -                                           | -                   |
|    145 | readv                  |    0x91 | unsigned long fd                  | const struct iovec *vec             | unsigned long vlen                            | -                                       | -                                           | -                   |
|    146 | writev                 |    0x92 | unsigned long fd                  | const struct iovec *vec             | unsigned long vlen                            | -                                       | -                                           | -                   |
|    147 | getsid                 |    0x93 | pid_t pid                         | -                                   | -                                             | -                                       | -                                           | -                   |
|    148 | fdatasync              |    0x94 | unsigned int fd                   | -                                   | -                                             | -                                       | -                                           | -                   |
|    149 | _sysctl                |    0x95 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
|    150 | mlock                  |    0x96 | unsigned long start               | size_t len                          | -                                             | -                                       | -                                           | -                   |
|    151 | munlock                |    0x97 | unsigned long start               | size_t len                          | -                                             | -                                       | -                                           | -                   |
|    152 | mlockall               |    0x98 | int flags                         | -                                   | -                                             | -                                       | -                                           | -                   |
|    153 | munlockall             |    0x99 | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
|    154 | sched_setparam         |    0x9a | pid_t pid                         | struct sched_param *param           | -                                             | -                                       | -                                           | -                   |
|    155 | sched_getparam         |    0x9b | pid_t pid                         | struct sched_param *param           | -                                             | -                                       | -                                           | -                   |
|    156 | sched_setscheduler     |    0x9c | pid_t pid                         | int policy                          | struct sched_param *param                     | -                                       | -                                           | -                   |
|    157 | sched_getscheduler     |    0x9d | pid_t pid                         | -                                   | -                                             | -                                       | -                                           | -                   |
|    158 | sched_yield            |    0x9e | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
|    159 | sched_get_priority_max |    0x9f | int policy                        | -                                   | -                                             | -                                       | -                                           | -                   |
|    160 | sched_get_priority_min |    0xa0 | int policy                        | -                                   | -                                             | -                                       | -                                           | -                   |
|    161 | sched_rr_get_interval  |    0xa1 | pid_t pid                         | struct __kernel_timespec *interval  | -                                             | -                                       | -                                           | -                   |
|    162 | nanosleep              |    0xa2 | struct __kernel_timespec *rqtp    | struct __kernel_timespec *rmtp      | -                                             | -                                       | -                                           | -                   |
|    163 | mremap                 |    0xa3 | unsigned long addr                | unsigned long old_len               | unsigned long new_len                         | unsigned long flags                     | unsigned long new_addr                      | -                   |
|    164 | setresuid              |    0xa4 | uid_t ruid                        | uid_t euid                          | uid_t suid                                    | -                                       | -                                           | -                   |
|    165 | getresuid              |    0xa5 | uid_t *ruid                       | uid_t *euid                         | uid_t *suid                                   | -                                       | -                                           | -                   |
|    166 | not implemented        |    0xa6 |                                   |                                     |                                               |                                         |                                             |                     |
|    167 | not implemented        |    0xa7 |                                   |                                     |                                               |                                         |                                             |                     |
|    168 | poll                   |    0xa8 | struct pollfd *ufds               | unsigned int nfds                   | int timeout                                   | -                                       | -                                           | -                   |
|    169 | nfsservctl             |    0xa9 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
|    170 | setresgid              |    0xaa | gid_t rgid                        | gid_t egid                          | gid_t sgid                                    | -                                       | -                                           | -                   |
|    171 | getresgid              |    0xab | gid_t *rgid                       | gid_t *egid                         | gid_t *sgid                                   | -                                       | -                                           | -                   |
|    172 | prctl                  |    0xac | int option                        | unsigned long arg2                  | unsigned long arg3                            | unsigned long arg4                      | unsigned long arg5                          | -                   |
|    173 | rt_sigreturn           |    0xad | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
|    174 | rt_sigaction           |    0xae | int                               | const struct sigaction *            | struct sigaction *                            | size_t                                  | -                                           | -                   |
|    175 | rt_sigprocmask         |    0xaf | int how                           | sigset_t *set                       | sigset_t *oset                                | size_t sigsetsize                       | -                                           | -                   |
|    176 | rt_sigpending          |    0xb0 | sigset_t *set                     | size_t sigsetsize                   | -                                             | -                                       | -                                           | -                   |
|    177 | rt_sigtimedwait        |    0xb1 | const sigset_t *uthese            | siginfo_t *uinfo                    | const struct __kernel_timespec *uts           | size_t sigsetsize                       | -                                           | -                   |
|    178 | rt_sigqueueinfo        |    0xb2 | pid_t pid                         | int sig                             | siginfo_t *uinfo                              | -                                       | -                                           | -                   |
|    179 | rt_sigsuspend          |    0xb3 | sigset_t *unewset                 | size_t sigsetsize                   | -                                             | -                                       | -                                           | -                   |
|    180 | pread64                |    0xb4 | unsigned int fd                   | char *buf                           | size_t count                                  | loff_t pos                              | -                                           | -                   |
|    181 | pwrite64               |    0xb5 | unsigned int fd                   | const char *buf                     | size_t count                                  | loff_t pos                              | -                                           | -                   |
|    182 | chown                  |    0xb6 | const char *filename              | uid_t user                          | gid_t group                                   | -                                       | -                                           | -                   |
|    183 | getcwd                 |    0xb7 | char *buf                         | unsigned long size                  | -                                             | -                                       | -                                           | -                   |
|    184 | capget                 |    0xb8 | cap_user_header_t header          | cap_user_data_t dataptr             | -                                             | -                                       | -                                           | -                   |
|    185 | capset                 |    0xb9 | cap_user_header_t header          | const cap_user_data_t data          | -                                             | -                                       | -                                           | -                   |
|    186 | sigaltstack            |    0xba | const struct sigaltstack *uss     | struct sigaltstack *uoss            | -                                             | -                                       | -                                           | -                   |
|    187 | sendfile               |    0xbb | int out_fd                        | int in_fd                           | off_t *offset                                 | size_t count                            | -                                           | -                   |
|    188 | not implemented        |    0xbc |                                   |                                     |                                               |                                         |                                             |                     |
|    189 | not implemented        |    0xbd |                                   |                                     |                                               |                                         |                                             |                     |
|    190 | vfork                  |    0xbe | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
|    191 | ugetrlimit             |    0xbf | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
|    192 | mmap2                  |    0xc0 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
|    193 | truncate64             |    0xc1 | const char *path                  | loff_t length                       | -                                             | -                                       | -                                           | -                   |
|    194 | ftruncate64            |    0xc2 | unsigned int fd                   | loff_t length                       | -                                             | -                                       | -                                           | -                   |
|    195 | stat64                 |    0xc3 | const char *filename              | struct stat64 *statbuf              | -                                             | -                                       | -                                           | -                   |
|    196 | lstat64                |    0xc4 | const char *filename              | struct stat64 *statbuf              | -                                             | -                                       | -                                           | -                   |
|    197 | fstat64                |    0xc5 | unsigned long fd                  | struct stat64 *statbuf              | -                                             | -                                       | -                                           | -                   |
|    198 | lchown32               |    0xc6 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
|    199 | getuid32               |    0xc7 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
|    200 | getgid32               |    0xc8 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
|    201 | geteuid32              |    0xc9 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
|    202 | getegid32              |    0xca | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
|    203 | setreuid32             |    0xcb | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
|    204 | setregid32             |    0xcc | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
|    205 | getgroups32            |    0xcd | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
|    206 | setgroups32            |    0xce | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
|    207 | fchown32               |    0xcf | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
|    208 | setresuid32            |    0xd0 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
|    209 | getresuid32            |    0xd1 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
|    210 | setresgid32            |    0xd2 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
|    211 | getresgid32            |    0xd3 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
|    212 | chown32                |    0xd4 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
|    213 | setuid32               |    0xd5 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
|    214 | setgid32               |    0xd6 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
|    215 | setfsuid32             |    0xd7 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
|    216 | setfsgid32             |    0xd8 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
|    217 | getdents64             |    0xd9 | unsigned int fd                   | struct linux_dirent64 *dirent       | unsigned int count                            | -                                       | -                                           | -                   |
|    218 | pivot_root             |    0xda | const char *new_root              | const char *put_old                 | -                                             | -                                       | -                                           | -                   |
|    219 | mincore                |    0xdb | unsigned long start               | size_t len                          | unsigned char * vec                           | -                                       | -                                           | -                   |
|    220 | madvise                |    0xdc | unsigned long start               | size_t len                          | int behavior                                  | -                                       | -                                           | -                   |
|    221 | fcntl64                |    0xdd | unsigned int fd                   | unsigned int cmd                    | unsigned long arg                             | -                                       | -                                           | -                   |
|    222 | not implemented        |    0xde |                                   |                                     |                                               |                                         |                                             |                     |
|    223 | not implemented        |    0xdf |                                   |                                     |                                               |                                         |                                             |                     |
|    224 | gettid                 |    0xe0 | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
|    225 | readahead              |    0xe1 | int fd                            | loff_t offset                       | size_t count                                  | -                                       | -                                           | -                   |
|    226 | setxattr               |    0xe2 | const char *path                  | const char *name                    | const void *value                             | size_t size                             | int flags                                   | -                   |
|    227 | lsetxattr              |    0xe3 | const char *path                  | const char *name                    | const void *value                             | size_t size                             | int flags                                   | -                   |
|    228 | fsetxattr              |    0xe4 | int fd                            | const char *name                    | const void *value                             | size_t size                             | int flags                                   | -                   |
|    229 | getxattr               |    0xe5 | const char *path                  | const char *name                    | void *value                                   | size_t size                             | -                                           | -                   |
|    230 | lgetxattr              |    0xe6 | const char *path                  | const char *name                    | void *value                                   | size_t size                             | -                                           | -                   |
|    231 | fgetxattr              |    0xe7 | int fd                            | const char *name                    | void *value                                   | size_t size                             | -                                           | -                   |
|    232 | listxattr              |    0xe8 | const char *path                  | char *list                          | size_t size                                   | -                                       | -                                           | -                   |
|    233 | llistxattr             |    0xe9 | const char *path                  | char *list                          | size_t size                                   | -                                       | -                                           | -                   |
|    234 | flistxattr             |    0xea | int fd                            | char *list                          | size_t size                                   | -                                       | -                                           | -                   |
|    235 | removexattr            |    0xeb | const char *path                  | const char *name                    | -                                             | -                                       | -                                           | -                   |
|    236 | lremovexattr           |    0xec | const char *path                  | const char *name                    | -                                             | -                                       | -                                           | -                   |
|    237 | fremovexattr           |    0xed | int fd                            | const char *name                    | -                                             | -                                       | -                                           | -                   |
|    238 | tkill                  |    0xee | pid_t pid                         | int sig                             | -                                             | -                                       | -                                           | -                   |
|    239 | sendfile64             |    0xef | int out_fd                        | int in_fd                           | loff_t *offset                                | size_t count                            | -                                           | -                   |
|    240 | futex                  |    0xf0 | u32 *uaddr                        | int op                              | u32 val                                       | struct __kernel_timespec *utime         | u32 *uaddr2                                 | u32 val3            |
|    241 | sched_setaffinity      |    0xf1 | pid_t pid                         | unsigned int len                    | unsigned long *user_mask_ptr                  | -                                       | -                                           | -                   |
|    242 | sched_getaffinity      |    0xf2 | pid_t pid                         | unsigned int len                    | unsigned long *user_mask_ptr                  | -                                       | -                                           | -                   |
|    243 | io_setup               |    0xf3 | unsigned nr_reqs                  | aio_context_t *ctx                  | -                                             | -                                       | -                                           | -                   |
|    244 | io_destroy             |    0xf4 | aio_context_t ctx                 | -                                   | -                                             | -                                       | -                                           | -                   |
|    245 | io_getevents           |    0xf5 | aio_context_t ctx_id              | long min_nr                         | long nr                                       | struct io_event *events                 | struct __kernel_timespec *timeout           | -                   |
|    246 | io_submit              |    0xf6 | aio_context_t                     | long                                | struct iocb * *                               | -                                       | -                                           | -                   |
|    247 | io_cancel              |    0xf7 | aio_context_t ctx_id              | struct iocb *iocb                   | struct io_event *result                       | -                                       | -                                           | -                   |
|    248 | exit_group             |    0xf8 | int error_code                    | -                                   | -                                             | -                                       | -                                           | -                   |
|    249 | lookup_dcookie         |    0xf9 | u64 cookie64                      | char *buf                           | size_t len                                    | -                                       | -                                           | -                   |
|    250 | epoll_create           |    0xfa | int size                          | -                                   | -                                             | -                                       | -                                           | -                   |
|    251 | epoll_ctl              |    0xfb | int epfd                          | int op                              | int fd                                        | struct epoll_event *event               | -                                           | -                   |
|    252 | epoll_wait             |    0xfc | int epfd                          | struct epoll_event *events          | int maxevents                                 | int timeout                             | -                                           | -                   |
|    253 | remap_file_pages       |    0xfd | unsigned long start               | unsigned long size                  | unsigned long prot                            | unsigned long pgoff                     | unsigned long flags                         | -                   |
|    254 | not implemented        |    0xfe |                                   |                                     |                                               |                                         |                                             |                     |
|    255 | not implemented        |    0xff |                                   |                                     |                                               |                                         |                                             |                     |
|    256 | set_tid_address        |   0x100 | int *tidptr                       | -                                   | -                                             | -                                       | -                                           | -                   |
|    257 | timer_create           |   0x101 | clockid_t which_clock             | struct sigevent *timer_event_spec   | timer_t * created_timer_id                    | -                                       | -                                           | -                   |
|    258 | timer_settime          |   0x102 | timer_t timer_id                  | int flags                           | const struct __kernel_itimerspec *new_setting | struct __kernel_itimerspec *old_setting | -                                           | -                   |
|    259 | timer_gettime          |   0x103 | timer_t timer_id                  | struct __kernel_itimerspec *setting | -                                             | -                                       | -                                           | -                   |
|    260 | timer_getoverrun       |   0x104 | timer_t timer_id                  | -                                   | -                                             | -                                       | -                                           | -                   |
|    261 | timer_delete           |   0x105 | timer_t timer_id                  | -                                   | -                                             | -                                       | -                                           | -                   |
|    262 | clock_settime          |   0x106 | clockid_t which_clock             | const struct __kernel_timespec *tp  | -                                             | -                                       | -                                           | -                   |
|    263 | clock_gettime          |   0x107 | clockid_t which_clock             | struct __kernel_timespec *tp        | -                                             | -                                       | -                                           | -                   |
|    264 | clock_getres           |   0x108 | clockid_t which_clock             | struct __kernel_timespec *tp        | -                                             | -                                       | -                                           | -                   |
|    265 | clock_nanosleep        |   0x109 | clockid_t which_clock             | int flags                           | const struct __kernel_timespec *rqtp          | struct __kernel_timespec *rmtp          | -                                           | -                   |
|    266 | statfs64               |   0x10a | const char *path                  | size_t sz                           | struct statfs64 *buf                          | -                                       | -                                           | -                   |
|    267 | fstatfs64              |   0x10b | unsigned int fd                   | size_t sz                           | struct statfs64 *buf                          | -                                       | -                                           | -                   |
|    268 | tgkill                 |   0x10c | pid_t tgid                        | pid_t pid                           | int sig                                       | -                                       | -                                           | -                   |
|    269 | utimes                 |   0x10d | char *filename                    | struct timeval *utimes              | -                                             | -                                       | -                                           | -                   |
|    270 | arm_fadvise64_64       |   0x10e | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
|    271 | pciconfig_iobase       |   0x10f | long which                        | unsigned long bus                   | unsigned long devfn                           | -                                       | -                                           | -                   |
|    272 | pciconfig_read         |   0x110 | unsigned long bus                 | unsigned long dfn                   | unsigned long off                             | unsigned long len                       | void *buf                                   | -                   |
|    273 | pciconfig_write        |   0x111 | unsigned long bus                 | unsigned long dfn                   | unsigned long off                             | unsigned long len                       | void *buf                                   | -                   |
|    274 | mq_open                |   0x112 | const char *name                  | int oflag                           | umode_t mode                                  | struct mq_attr *attr                    | -                                           | -                   |
|    275 | mq_unlink              |   0x113 | const char *name                  | -                                   | -                                             | -                                       | -                                           | -                   |
|    276 | mq_timedsend           |   0x114 | mqd_t mqdes                       | const char *msg_ptr                 | size_t msg_len                                | unsigned int msg_prio                   | const struct __kernel_timespec *abs_timeout | -                   |
|    277 | mq_timedreceive        |   0x115 | mqd_t mqdes                       | char *msg_ptr                       | size_t msg_len                                | unsigned int *msg_prio                  | const struct __kernel_timespec *abs_timeout | -                   |
|    278 | mq_notify              |   0x116 | mqd_t mqdes                       | const struct sigevent *notification | -                                             | -                                       | -                                           | -                   |
|    279 | mq_getsetattr          |   0x117 | mqd_t mqdes                       | const struct mq_attr *mqstat        | struct mq_attr *omqstat                       | -                                       | -                                           | -                   |
|    280 | waitid                 |   0x118 | int which                         | pid_t pid                           | struct siginfo *infop                         | int options                             | struct rusage *ru                           | -                   |
|    281 | socket                 |   0x119 | int                               | int                                 | int                                           | -                                       | -                                           | -                   |
|    282 | bind                   |   0x11a | int                               | struct sockaddr *                   | int                                           | -                                       | -                                           | -                   |
|    283 | connect                |   0x11b | int                               | struct sockaddr *                   | int                                           | -                                       | -                                           | -                   |
|    284 | listen                 |   0x11c | int                               | int                                 | -                                             | -                                       | -                                           | -                   |
|    285 | accept                 |   0x11d | int                               | struct sockaddr *                   | int *                                         | -                                       | -                                           | -                   |
|    286 | getsockname            |   0x11e | int                               | struct sockaddr *                   | int *                                         | -                                       | -                                           | -                   |
|    287 | getpeername            |   0x11f | int                               | struct sockaddr *                   | int *                                         | -                                       | -                                           | -                   |
|    288 | socketpair             |   0x120 | int                               | int                                 | int                                           | int *                                   | -                                           | -                   |
|    289 | send                   |   0x121 | int                               | void *                              | size_t                                        | unsigned                                | -                                           | -                   |
|    290 | sendto                 |   0x122 | int                               | void *                              | size_t                                        | unsigned                                | struct sockaddr *                           | int                 |
|    291 | recv                   |   0x123 | int                               | void *                              | size_t                                        | unsigned                                | -                                           | -                   |
|    292 | recvfrom               |   0x124 | int                               | void *                              | size_t                                        | unsigned                                | struct sockaddr *                           | int *               |
|    293 | shutdown               |   0x125 | int                               | int                                 | -                                             | -                                       | -                                           | -                   |
|    294 | setsockopt             |   0x126 | int fd                            | int level                           | int optname                                   | char *optval                            | int optlen                                  | -                   |
|    295 | getsockopt             |   0x127 | int fd                            | int level                           | int optname                                   | char *optval                            | int *optlen                                 | -                   |
|    296 | sendmsg                |   0x128 | int fd                            | struct user_msghdr *msg             | unsigned flags                                | -                                       | -                                           | -                   |
|    297 | recvmsg                |   0x129 | int fd                            | struct user_msghdr *msg             | unsigned flags                                | -                                       | -                                           | -                   |
|    298 | semop                  |   0x12a | int semid                         | struct sembuf *sops                 | unsigned nsops                                | -                                       | -                                           | -                   |
|    299 | semget                 |   0x12b | key_t key                         | int nsems                           | int semflg                                    | -                                       | -                                           | -                   |
|    300 | semctl                 |   0x12c | int semid                         | int semnum                          | int cmd                                       | unsigned long arg                       | -                                           | -                   |
|    301 | msgsnd                 |   0x12d | int msqid                         | struct msgbuf *msgp                 | size_t msgsz                                  | int msgflg                              | -                                           | -                   |
|    302 | msgrcv                 |   0x12e | int msqid                         | struct msgbuf *msgp                 | size_t msgsz                                  | long msgtyp                             | int msgflg                                  | -                   |
|    303 | msgget                 |   0x12f | key_t key                         | int msgflg                          | -                                             | -                                       | -                                           | -                   |
|    304 | msgctl                 |   0x130 | int msqid                         | int cmd                             | struct msqid_ds *buf                          | -                                       | -                                           | -                   |
|    305 | shmat                  |   0x131 | int shmid                         | char *shmaddr                       | int shmflg                                    | -                                       | -                                           | -                   |
|    306 | shmdt                  |   0x132 | char *shmaddr                     | -                                   | -                                             | -                                       | -                                           | -                   |
|    307 | shmget                 |   0x133 | key_t key                         | size_t size                         | int flag                                      | -                                       | -                                           | -                   |
|    308 | shmctl                 |   0x134 | int shmid                         | int cmd                             | struct shmid_ds *buf                          | -                                       | -                                           | -                   |
|    309 | add_key                |   0x135 | const char *_type                 | const char *_description            | const void *_payload                          | size_t plen                             | key_serial_t destringid                     | -                   |
|    310 | request_key            |   0x136 | const char *_type                 | const char *_description            | const char *_callout_info                     | key_serial_t destringid                 | -                                           | -                   |
|    311 | keyctl                 |   0x137 | int cmd                           | unsigned long arg2                  | unsigned long arg3                            | unsigned long arg4                      | unsigned long arg5                          | -                   |
|    312 | semtimedop             |   0x138 | int semid                         | struct sembuf *sops                 | unsigned nsops                                | const struct __kernel_timespec *timeout | -                                           | -                   |
|    313 | vserver                |   0x139 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
|    314 | ioprio_set             |   0x13a | int which                         | int who                             | int ioprio                                    | -                                       | -                                           | -                   |
|    315 | ioprio_get             |   0x13b | int which                         | int who                             | -                                             | -                                       | -                                           | -                   |
|    316 | inotify_init           |   0x13c | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
|    317 | inotify_add_watch      |   0x13d | int fd                            | const char *path                    | u32 mask                                      | -                                       | -                                           | -                   |
|    318 | inotify_rm_watch       |   0x13e | int fd                            | __s32 wd                            | -                                             | -                                       | -                                           | -                   |
|    319 | mbind                  |   0x13f | unsigned long start               | unsigned long len                   | unsigned long mode                            | const unsigned long *nmask              | unsigned long maxnode                       | unsigned flags      |
|    320 | get_mempolicy          |   0x140 | int *policy                       | unsigned long *nmask                | unsigned long maxnode                         | unsigned long addr                      | unsigned long flags                         | -                   |
|    321 | set_mempolicy          |   0x141 | int mode                          | const unsigned long *nmask          | unsigned long maxnode                         | -                                       | -                                           | -                   |
|    322 | openat                 |   0x142 | int dfd                           | const char *filename                | int flags                                     | umode_t mode                            | -                                           | -                   |
|    323 | mkdirat                |   0x143 | int dfd                           | const char * pathname               | umode_t mode                                  | -                                       | -                                           | -                   |
|    324 | mknodat                |   0x144 | int dfd                           | const char * filename               | umode_t mode                                  | unsigned dev                            | -                                           | -                   |
|    325 | fchownat               |   0x145 | int dfd                           | const char *filename                | uid_t user                                    | gid_t group                             | int flag                                    | -                   |
|    326 | futimesat              |   0x146 | int dfd                           | const char *filename                | struct timeval *utimes                        | -                                       | -                                           | -                   |
|    327 | fstatat64              |   0x147 | int dfd                           | const char *filename                | struct stat64 *statbuf                        | int flag                                | -                                           | -                   |
|    328 | unlinkat               |   0x148 | int dfd                           | const char * pathname               | int flag                                      | -                                       | -                                           | -                   |
|    329 | renameat               |   0x149 | int olddfd                        | const char * oldname                | int newdfd                                    | const char * newname                    | -                                           | -                   |
|    330 | linkat                 |   0x14a | int olddfd                        | const char *oldname                 | int newdfd                                    | const char *newname                     | int flags                                   | -                   |
|    331 | symlinkat              |   0x14b | const char * oldname              | int newdfd                          | const char * newname                          | -                                       | -                                           | -                   |
|    332 | readlinkat             |   0x14c | int dfd                           | const char *path                    | char *buf                                     | int bufsiz                              | -                                           | -                   |
|    333 | fchmodat               |   0x14d | int dfd                           | const char * filename               | umode_t mode                                  | -                                       | -                                           | -                   |
|    334 | faccessat              |   0x14e | int dfd                           | const char *filename                | int mode                                      | -                                       | -                                           | -                   |
|    335 | pselect6               |   0x14f | int                               | fd_set *                            | fd_set *                                      | fd_set *                                | struct __kernel_timespec *                  | void *              |
|    336 | ppoll                  |   0x150 | struct pollfd *                   | unsigned int                        | struct __kernel_timespec *                    | const sigset_t *                        | size_t                                      | -                   |
|    337 | unshare                |   0x151 | unsigned long unshare_flags       | -                                   | -                                             | -                                       | -                                           | -                   |
|    338 | set_robust_list        |   0x152 | struct robust_list_head *head     | size_t len                          | -                                             | -                                       | -                                           | -                   |
|    339 | get_robust_list        |   0x153 | int pid                           | struct robust_list_head * *head_ptr | size_t *len_ptr                               | -                                       | -                                           | -                   |
|    340 | splice                 |   0x154 | int fd_in                         | loff_t *off_in                      | int fd_out                                    | loff_t *off_out                         | size_t len                                  | unsigned int flags  |
|    341 | arm_sync_file_range    |   0x155 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
|    341 | sync_file_range2       |   0x155 | int fd                            | unsigned int flags                  | loff_t offset                                 | loff_t nbytes                           | -                                           | -                   |
|    342 | tee                    |   0x156 | int fdin                          | int fdout                           | size_t len                                    | unsigned int flags                      | -                                           | -                   |
|    343 | vmsplice               |   0x157 | int fd                            | const struct iovec *iov             | unsigned long nr_segs                         | unsigned int flags                      | -                                           | -                   |
|    344 | move_pages             |   0x158 | pid_t pid                         | unsigned long nr_pages              | const void * *pages                           | const int *nodes                        | int *status                                 | int flags           |
|    345 | getcpu                 |   0x159 | unsigned *cpu                     | unsigned *node                      | struct getcpu_cache *cache                    | -                                       | -                                           | -                   |
|    346 | epoll_pwait            |   0x15a | int epfd                          | struct epoll_event *events          | int maxevents                                 | int timeout                             | const sigset_t *sigmask                     | size_t sigsetsize   |
|    347 | kexec_load             |   0x15b | unsigned long entry               | unsigned long nr_segments           | struct kexec_segment *segments                | unsigned long flags                     | -                                           | -                   |
|    348 | utimensat              |   0x15c | int dfd                           | const char *filename                | struct __kernel_timespec *utimes              | int flags                               | -                                           | -                   |
|    349 | signalfd               |   0x15d | int ufd                           | sigset_t *user_mask                 | size_t sizemask                               | -                                       | -                                           | -                   |
|    350 | timerfd_create         |   0x15e | int clockid                       | int flags                           | -                                             | -                                       | -                                           | -                   |
|    351 | eventfd                |   0x15f | unsigned int count                | -                                   | -                                             | -                                       | -                                           | -                   |
|    352 | fallocate              |   0x160 | int fd                            | int mode                            | loff_t offset                                 | loff_t len                              | -                                           | -                   |
|    353 | timerfd_settime        |   0x161 | int ufd                           | int flags                           | const struct __kernel_itimerspec *utmr        | struct __kernel_itimerspec *otmr        | -                                           | -                   |
|    354 | timerfd_gettime        |   0x162 | int ufd                           | struct __kernel_itimerspec *otmr    | -                                             | -                                       | -                                           | -                   |
|    355 | signalfd4              |   0x163 | int ufd                           | sigset_t *user_mask                 | size_t sizemask                               | int flags                               | -                                           | -                   |
|    356 | eventfd2               |   0x164 | unsigned int count                | int flags                           | -                                             | -                                       | -                                           | -                   |
|    357 | epoll_create1          |   0x165 | int flags                         | -                                   | -                                             | -                                       | -                                           | -                   |
|    358 | dup3                   |   0x166 | unsigned int oldfd                | unsigned int newfd                  | int flags                                     | -                                       | -                                           | -                   |
|    359 | pipe2                  |   0x167 | int *fildes                       | int flags                           | -                                             | -                                       | -                                           | -                   |
|    360 | inotify_init1          |   0x168 | int flags                         | -                                   | -                                             | -                                       | -                                           | -                   |
|    361 | preadv                 |   0x169 | unsigned long fd                  | const struct iovec *vec             | unsigned long vlen                            | unsigned long pos_l                     | unsigned long pos_h                         | -                   |
|    362 | pwritev                |   0x16a | unsigned long fd                  | const struct iovec *vec             | unsigned long vlen                            | unsigned long pos_l                     | unsigned long pos_h                         | -                   |
|    363 | rt_tgsigqueueinfo      |   0x16b | pid_t tgid                        | pid_t pid                           | int sig                                       | siginfo_t *uinfo                        | -                                           | -                   |
|    364 | perf_event_open        |   0x16c | struct perf_event_attr *attr_uptr | pid_t pid                           | int cpu                                       | int group_fd                            | unsigned long flags                         | -                   |
|    365 | recvmmsg               |   0x16d | int fd                            | struct mmsghdr *msg                 | unsigned int vlen                             | unsigned flags                          | struct __kernel_timespec *timeout           | -                   |
|    366 | accept4                |   0x16e | int                               | struct sockaddr *                   | int *                                         | int                                     | -                                           | -                   |
|    367 | fanotify_init          |   0x16f | unsigned int flags                | unsigned int event_f_flags          | -                                             | -                                       | -                                           | -                   |
|    368 | fanotify_mark          |   0x170 | int fanotify_fd                   | unsigned int flags                  | u64 mask                                      | int fd                                  | const char *pathname                        | -                   |
|    369 | prlimit64              |   0x171 | pid_t pid                         | unsigned int resource               | const struct rlimit64 *new_rlim               | struct rlimit64 *old_rlim               | -                                           | -                   |
|    370 | name_to_handle_at      |   0x172 | int dfd                           | const char *name                    | struct file_handle *handle                    | int *mnt_id                             | int flag                                    | -                   |
|    371 | open_by_handle_at      |   0x173 | int mountdirfd                    | struct file_handle *handle          | int flags                                     | -                                       | -                                           | -                   |
|    372 | clock_adjtime          |   0x174 | clockid_t which_clock             | struct __kernel_timex *tx           | -                                             | -                                       | -                                           | -                   |
|    373 | syncfs                 |   0x175 | int fd                            | -                                   | -                                             | -                                       | -                                           | -                   |
|    374 | sendmmsg               |   0x176 | int fd                            | struct mmsghdr *msg                 | unsigned int vlen                             | unsigned flags                          | -                                           | -                   |
|    375 | setns                  |   0x177 | int fd                            | int nstype                          | -                                             | -                                       | -                                           | -                   |
|    376 | process_vm_readv       |   0x178 | pid_t pid                         | const struct iovec *lvec            | unsigned long liovcnt                         | const struct iovec *rvec                | unsigned long riovcnt                       | unsigned long flags |
|    377 | process_vm_writev      |   0x179 | pid_t pid                         | const struct iovec *lvec            | unsigned long liovcnt                         | const struct iovec *rvec                | unsigned long riovcnt                       | unsigned long flags |
|    378 | kcmp                   |   0x17a | pid_t pid1                        | pid_t pid2                          | int type                                      | unsigned long idx1                      | unsigned long idx2                          | -                   |
|    379 | finit_module           |   0x17b | int fd                            | const char *uargs                   | int flags                                     | -                                       | -                                           | -                   |
|    380 | sched_setattr          |   0x17c | pid_t pid                         | struct sched_attr *attr             | unsigned int flags                            | -                                       | -                                           | -                   |
|    381 | sched_getattr          |   0x17d | pid_t pid                         | struct sched_attr *attr             | unsigned int size                             | unsigned int flags                      | -                                           | -                   |
|    382 | renameat2              |   0x17e | int olddfd                        | const char *oldname                 | int newdfd                                    | const char *newname                     | unsigned int flags                          | -                   |
|    383 | seccomp                |   0x17f | unsigned int op                   | unsigned int flags                  | void *uargs                                   | -                                       | -                                           | -                   |
|    384 | getrandom              |   0x180 | char *buf                         | size_t count                        | unsigned int flags                            | -                                       | -                                           | -                   |
|    385 | memfd_create           |   0x181 | const char *uname_ptr             | unsigned int flags                  | -                                             | -                                       | -                                           | -                   |
|    386 | bpf                    |   0x182 | int cmd                           | union bpf_attr *attr                | unsigned int size                             | -                                       | -                                           | -                   |
|    387 | execveat               |   0x183 | int dfd                           | const char *filename                | const char *const *argv                       | const char *const *envp                 | int flags                                   | -                   |
|    388 | userfaultfd            |   0x184 | int flags                         | -                                   | -                                             | -                                       | -                                           | -                   |
|    389 | membarrier             |   0x185 | int cmd                           | int flags                           | -                                             | -                                       | -                                           | -                   |
|    390 | mlock2                 |   0x186 | unsigned long start               | size_t len                          | int flags                                     | -                                       | -                                           | -                   |
|    391 | copy_file_range        |   0x187 | int fd_in                         | loff_t *off_in                      | int fd_out                                    | loff_t *off_out                         | size_t len                                  | unsigned int flags  |
|    392 | preadv2                |   0x188 | unsigned long fd                  | const struct iovec *vec             | unsigned long vlen                            | unsigned long pos_l                     | unsigned long pos_h                         | rwf_t flags         |
|    393 | pwritev2               |   0x189 | unsigned long fd                  | const struct iovec *vec             | unsigned long vlen                            | unsigned long pos_l                     | unsigned long pos_h                         | rwf_t flags         |
|    394 | pkey_mprotect          |   0x18a | unsigned long start               | size_t len                          | unsigned long prot                            | int pkey                                | -                                           | -                   |
|    395 | pkey_alloc             |   0x18b | unsigned long flags               | unsigned long init_val              | -                                             | -                                       | -                                           | -                   |
|    396 | pkey_free              |   0x18c | int pkey                          | -                                   | -                                             | -                                       | -                                           | -                   |
|    397 | statx                  |   0x18d | int dfd                           | const char *path                    | unsigned flags                                | unsigned mask                           | struct statx *buffer                        | -                   |
| 983041 | ARM_breakpoint         | 0xf0001 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 983042 | ARM_cacheflush         | 0xf0002 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 983043 | ARM_usr26              | 0xf0003 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 983044 | ARM_usr32              | 0xf0004 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 983045 | ARM_set_tls            | 0xf0005 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
****** facts
+ *mov* command can only be used with *general purpose* registers (r0 - r12)
+ *msr* or *mrs* instructions used to move values from or to *special purpose* registers

  | instruction | description               |
  |-------------+---------------------------|
  | MSR         | mov Special_reg, Register |
  | MRS         | mov Register, Special_reg |
***** ARM64 Linux
****** syscall table
|  NR | syscall name           |   %x8 | arg0 (%x0)                        | arg1 (%x1)                          | arg2 (%x2)                                    | arg3 (%x3)                              | arg4 (%x4)                                  | arg5 (%x5)          |
|-----+------------------------+-------+-----------------------------------+-------------------------------------+-----------------------------------------------+-----------------------------------------+---------------------------------------------+---------------------|
|   0 | io_setup               |  0x00 | unsigned nr_reqs                  | aio_context_t *ctx                  | -                                             | -                                       | -                                           | -                   |
|   1 | io_destroy             |  0x01 | aio_context_t ctx                 | -                                   | -                                             | -                                       | -                                           | -                   |
|   2 | io_submit              |  0x02 | aio_context_t                     | long                                | struct iocb * *                               | -                                       | -                                           | -                   |
|   3 | io_cancel              |  0x03 | aio_context_t ctx_id              | struct iocb *iocb                   | struct io_event *result                       | -                                       | -                                           | -                   |
|   4 | io_getevents           |  0x04 | aio_context_t ctx_id              | long min_nr                         | long nr                                       | struct io_event *events                 | struct __kernel_timespec *timeout           | -                   |
|   5 | setxattr               |  0x05 | const char *path                  | const char *name                    | const void *value                             | size_t size                             | int flags                                   | -                   |
|   6 | lsetxattr              |  0x06 | const char *path                  | const char *name                    | const void *value                             | size_t size                             | int flags                                   | -                   |
|   7 | fsetxattr              |  0x07 | int fd                            | const char *name                    | const void *value                             | size_t size                             | int flags                                   | -                   |
|   8 | getxattr               |  0x08 | const char *path                  | const char *name                    | void *value                                   | size_t size                             | -                                           | -                   |
|   9 | lgetxattr              |  0x09 | const char *path                  | const char *name                    | void *value                                   | size_t size                             | -                                           | -                   |
|  10 | fgetxattr              |  0x0a | int fd                            | const char *name                    | void *value                                   | size_t size                             | -                                           | -                   |
|  11 | listxattr              |  0x0b | const char *path                  | char *list                          | size_t size                                   | -                                       | -                                           | -                   |
|  12 | llistxattr             |  0x0c | const char *path                  | char *list                          | size_t size                                   | -                                       | -                                           | -                   |
|  13 | flistxattr             |  0x0d | int fd                            | char *list                          | size_t size                                   | -                                       | -                                           | -                   |
|  14 | removexattr            |  0x0e | const char *path                  | const char *name                    | -                                             | -                                       | -                                           | -                   |
|  15 | lremovexattr           |  0x0f | const char *path                  | const char *name                    | -                                             | -                                       | -                                           | -                   |
|  16 | fremovexattr           |  0x10 | int fd                            | const char *name                    | -                                             | -                                       | -                                           | -                   |
|  17 | getcwd                 |  0x11 | char *buf                         | unsigned long size                  | -                                             | -                                       | -                                           | -                   |
|  18 | lookup_dcookie         |  0x12 | u64 cookie64                      | char *buf                           | size_t len                                    | -                                       | -                                           | -                   |
|  19 | eventfd2               |  0x13 | unsigned int count                | int flags                           | -                                             | -                                       | -                                           | -                   |
|  20 | epoll_create1          |  0x14 | int flags                         | -                                   | -                                             | -                                       | -                                           | -                   |
|  21 | epoll_ctl              |  0x15 | int epfd                          | int op                              | int fd                                        | struct epoll_event *event               | -                                           | -                   |
|  22 | epoll_pwait            |  0x16 | int epfd                          | struct epoll_event *events          | int maxevents                                 | int timeout                             | const sigset_t *sigmask                     | size_t sigsetsize   |
|  23 | dup                    |  0x17 | unsigned int fildes               | -                                   | -                                             | -                                       | -                                           | -                   |
|  24 | dup3                   |  0x18 | unsigned int oldfd                | unsigned int newfd                  | int flags                                     | -                                       | -                                           | -                   |
|  25 | fcntl                  |  0x19 | unsigned int fd                   | unsigned int cmd                    | unsigned long arg                             | -                                       | -                                           | -                   |
|  26 | inotify_init1          |  0x1a | int flags                         | -                                   | -                                             | -                                       | -                                           | -                   |
|  27 | inotify_add_watch      |  0x1b | int fd                            | const char *path                    | u32 mask                                      | -                                       | -                                           | -                   |
|  28 | inotify_rm_watch       |  0x1c | int fd                            | __s32 wd                            | -                                             | -                                       | -                                           | -                   |
|  29 | ioctl                  |  0x1d | unsigned int fd                   | unsigned int cmd                    | unsigned long arg                             | -                                       | -                                           | -                   |
|  30 | ioprio_set             |  0x1e | int which                         | int who                             | int ioprio                                    | -                                       | -                                           | -                   |
|  31 | ioprio_get             |  0x1f | int which                         | int who                             | -                                             | -                                       | -                                           | -                   |
|  32 | flock                  |  0x20 | unsigned int fd                   | unsigned int cmd                    | -                                             | -                                       | -                                           | -                   |
|  33 | mknodat                |  0x21 | int dfd                           | const char * filename               | umode_t mode                                  | unsigned dev                            | -                                           | -                   |
|  34 | mkdirat                |  0x22 | int dfd                           | const char * pathname               | umode_t mode                                  | -                                       | -                                           | -                   |
|  35 | unlinkat               |  0x23 | int dfd                           | const char * pathname               | int flag                                      | -                                       | -                                           | -                   |
|  36 | symlinkat              |  0x24 | const char * oldname              | int newdfd                          | const char * newname                          | -                                       | -                                           | -                   |
|  37 | linkat                 |  0x25 | int olddfd                        | const char *oldname                 | int newdfd                                    | const char *newname                     | int flags                                   | -                   |
|  38 | renameat               |  0x26 | int olddfd                        | const char * oldname                | int newdfd                                    | const char * newname                    | -                                           | -                   |
|  39 | umount2                |  0x27 | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
|  40 | mount                  |  0x28 | char *dev_name                    | char *dir_name                      | char *type                                    | unsigned long flags                     | void *data                                  | -                   |
|  41 | pivot_root             |  0x29 | const char *new_root              | const char *put_old                 | -                                             | -                                       | -                                           | -                   |
|  42 | nfsservctl             |  0x2a | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
|  43 | statfs                 |  0x2b | const char * path                 | struct statfs *buf                  | -                                             | -                                       | -                                           | -                   |
|  44 | fstatfs                |  0x2c | unsigned int fd                   | struct statfs *buf                  | -                                             | -                                       | -                                           | -                   |
|  45 | truncate               |  0x2d | const char *path                  | long length                         | -                                             | -                                       | -                                           | -                   |
|  46 | ftruncate              |  0x2e | unsigned int fd                   | unsigned long length                | -                                             | -                                       | -                                           | -                   |
|  47 | fallocate              |  0x2f | int fd                            | int mode                            | loff_t offset                                 | loff_t len                              | -                                           | -                   |
|  48 | faccessat              |  0x30 | int dfd                           | const char *filename                | int mode                                      | -                                       | -                                           | -                   |
|  49 | chdir                  |  0x31 | const char *filename              | -                                   | -                                             | -                                       | -                                           | -                   |
|  50 | fchdir                 |  0x32 | unsigned int fd                   | -                                   | -                                             | -                                       | -                                           | -                   |
|  51 | chroot                 |  0x33 | const char *filename              | -                                   | -                                             | -                                       | -                                           | -                   |
|  52 | fchmod                 |  0x34 | unsigned int fd                   | umode_t mode                        | -                                             | -                                       | -                                           | -                   |
|  53 | fchmodat               |  0x35 | int dfd                           | const char * filename               | umode_t mode                                  | -                                       | -                                           | -                   |
|  54 | fchownat               |  0x36 | int dfd                           | const char *filename                | uid_t user                                    | gid_t group                             | int flag                                    | -                   |
|  55 | fchown                 |  0x37 | unsigned int fd                   | uid_t user                          | gid_t group                                   | -                                       | -                                           | -                   |
|  56 | openat                 |  0x38 | int dfd                           | const char *filename                | int flags                                     | umode_t mode                            | -                                           | -                   |
|  57 | close                  |  0x39 | unsigned int fd                   | -                                   | -                                             | -                                       | -                                           | -                   |
|  58 | vhangup                |  0x3a | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
|  59 | pipe2                  |  0x3b | int *fildes                       | int flags                           | -                                             | -                                       | -                                           | -                   |
|  60 | quotactl               |  0x3c | unsigned int cmd                  | const char *special                 | qid_t id                                      | void *addr                              | -                                           | -                   |
|  61 | getdents64             |  0x3d | unsigned int fd                   | struct linux_dirent64 *dirent       | unsigned int count                            | -                                       | -                                           | -                   |
|  62 | lseek                  |  0x3e | unsigned int fd                   | off_t offset                        | unsigned int whence                           | -                                       | -                                           | -                   |
|  63 | read                   |  0x3f | unsigned int fd                   | char *buf                           | size_t count                                  | -                                       | -                                           | -                   |
|  64 | write                  |  0x40 | unsigned int fd                   | const char *buf                     | size_t count                                  | -                                       | -                                           | -                   |
|  65 | readv                  |  0x41 | unsigned long fd                  | const struct iovec *vec             | unsigned long vlen                            | -                                       | -                                           | -                   |
|  66 | writev                 |  0x42 | unsigned long fd                  | const struct iovec *vec             | unsigned long vlen                            | -                                       | -                                           | -                   |
|  67 | pread64                |  0x43 | unsigned int fd                   | char *buf                           | size_t count                                  | loff_t pos                              | -                                           | -                   |
|  68 | pwrite64               |  0x44 | unsigned int fd                   | const char *buf                     | size_t count                                  | loff_t pos                              | -                                           | -                   |
|  69 | preadv                 |  0x45 | unsigned long fd                  | const struct iovec *vec             | unsigned long vlen                            | unsigned long pos_l                     | unsigned long pos_h                         | -                   |
|  70 | pwritev                |  0x46 | unsigned long fd                  | const struct iovec *vec             | unsigned long vlen                            | unsigned long pos_l                     | unsigned long pos_h                         | -                   |
|  71 | sendfile               |  0x47 | int out_fd                        | int in_fd                           | off_t *offset                                 | size_t count                            | -                                           | -                   |
|  72 | pselect6               |  0x48 | int                               | fd_set *                            | fd_set *                                      | fd_set *                                | struct __kernel_timespec *                  | void *              |
|  73 | ppoll                  |  0x49 | struct pollfd *                   | unsigned int                        | struct __kernel_timespec *                    | const sigset_t *                        | size_t                                      | -                   |
|  74 | signalfd4              |  0x4a | int ufd                           | sigset_t *user_mask                 | size_t sizemask                               | int flags                               | -                                           | -                   |
|  75 | vmsplice               |  0x4b | int fd                            | const struct iovec *iov             | unsigned long nr_segs                         | unsigned int flags                      | -                                           | -                   |
|  76 | splice                 |  0x4c | int fd_in                         | loff_t *off_in                      | int fd_out                                    | loff_t *off_out                         | size_t len                                  | unsigned int flags  |
|  77 | tee                    |  0x4d | int fdin                          | int fdout                           | size_t len                                    | unsigned int flags                      | -                                           | -                   |
|  78 | readlinkat             |  0x4e | int dfd                           | const char *path                    | char *buf                                     | int bufsiz                              | -                                           | -                   |
|  79 | newfstatat             |  0x4f | int dfd                           | const char *filename                | struct stat *statbuf                          | int flag                                | -                                           | -                   |
|  80 | fstat                  |  0x50 | unsigned int fd                   | struct __old_kernel_stat *statbuf   | -                                             | -                                       | -                                           | -                   |
|  81 | sync                   |  0x51 | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
|  82 | fsync                  |  0x52 | unsigned int fd                   | -                                   | -                                             | -                                       | -                                           | -                   |
|  83 | fdatasync              |  0x53 | unsigned int fd                   | -                                   | -                                             | -                                       | -                                           | -                   |
|  84 | sync_file_range        |  0x54 | int fd                            | loff_t offset                       | loff_t nbytes                                 | unsigned int flags                      | -                                           | -                   |
|  85 | timerfd_create         |  0x55 | int clockid                       | int flags                           | -                                             | -                                       | -                                           | -                   |
|  86 | timerfd_settime        |  0x56 | int ufd                           | int flags                           | const struct __kernel_itimerspec *utmr        | struct __kernel_itimerspec *otmr        | -                                           | -                   |
|  87 | timerfd_gettime        |  0x57 | int ufd                           | struct __kernel_itimerspec *otmr    | -                                             | -                                       | -                                           | -                   |
|  88 | utimensat              |  0x58 | int dfd                           | const char *filename                | struct __kernel_timespec *utimes              | int flags                               | -                                           | -                   |
|  89 | acct                   |  0x59 | const char *name                  | -                                   | -                                             | -                                       | -                                           | -                   |
|  90 | capget                 |  0x5a | cap_user_header_t header          | cap_user_data_t dataptr             | -                                             | -                                       | -                                           | -                   |
|  91 | capset                 |  0x5b | cap_user_header_t header          | const cap_user_data_t data          | -                                             | -                                       | -                                           | -                   |
|  92 | personality            |  0x5c | unsigned int personality          | -                                   | -                                             | -                                       | -                                           | -                   |
|  93 | exit                   |  0x5d | int error_code                    | -                                   | -                                             | -                                       | -                                           | -                   |
|  94 | exit_group             |  0x5e | int error_code                    | -                                   | -                                             | -                                       | -                                           | -                   |
|  95 | waitid                 |  0x5f | int which                         | pid_t pid                           | struct siginfo *infop                         | int options                             | struct rusage *ru                           | -                   |
|  96 | set_tid_address        |  0x60 | int *tidptr                       | -                                   | -                                             | -                                       | -                                           | -                   |
|  97 | unshare                |  0x61 | unsigned long unshare_flags       | -                                   | -                                             | -                                       | -                                           | -                   |
|  98 | futex                  |  0x62 | u32 *uaddr                        | int op                              | u32 val                                       | struct __kernel_timespec *utime         | u32 *uaddr2                                 | u32 val3            |
|  99 | set_robust_list        |  0x63 | struct robust_list_head *head     | size_t len                          | -                                             | -                                       | -                                           | -                   |
| 100 | get_robust_list        |  0x64 | int pid                           | struct robust_list_head * *head_ptr | size_t *len_ptr                               | -                                       | -                                           | -                   |
| 101 | nanosleep              |  0x65 | struct __kernel_timespec *rqtp    | struct __kernel_timespec *rmtp      | -                                             | -                                       | -                                           | -                   |
| 102 | getitimer              |  0x66 | int which                         | struct itimerval *value             | -                                             | -                                       | -                                           | -                   |
| 103 | setitimer              |  0x67 | int which                         | struct itimerval *value             | struct itimerval *ovalue                      | -                                       | -                                           | -                   |
| 104 | kexec_load             |  0x68 | unsigned long entry               | unsigned long nr_segments           | struct kexec_segment *segments                | unsigned long flags                     | -                                           | -                   |
| 105 | init_module            |  0x69 | void *umod                        | unsigned long len                   | const char *uargs                             | -                                       | -                                           | -                   |
| 106 | delete_module          |  0x6a | const char *name_user             | unsigned int flags                  | -                                             | -                                       | -                                           | -                   |
| 107 | timer_create           |  0x6b | clockid_t which_clock             | struct sigevent *timer_event_spec   | timer_t * created_timer_id                    | -                                       | -                                           | -                   |
| 108 | timer_gettime          |  0x6c | timer_t timer_id                  | struct __kernel_itimerspec *setting | -                                             | -                                       | -                                           | -                   |
| 109 | timer_getoverrun       |  0x6d | timer_t timer_id                  | -                                   | -                                             | -                                       | -                                           | -                   |
| 110 | timer_settime          |  0x6e | timer_t timer_id                  | int flags                           | const struct __kernel_itimerspec *new_setting | struct __kernel_itimerspec *old_setting | -                                           | -                   |
| 111 | timer_delete           |  0x6f | timer_t timer_id                  | -                                   | -                                             | -                                       | -                                           | -                   |
| 112 | clock_settime          |  0x70 | clockid_t which_clock             | const struct __kernel_timespec *tp  | -                                             | -                                       | -                                           | -                   |
| 113 | clock_gettime          |  0x71 | clockid_t which_clock             | struct __kernel_timespec *tp        | -                                             | -                                       | -                                           | -                   |
| 114 | clock_getres           |  0x72 | clockid_t which_clock             | struct __kernel_timespec *tp        | -                                             | -                                       | -                                           | -                   |
| 115 | clock_nanosleep        |  0x73 | clockid_t which_clock             | int flags                           | const struct __kernel_timespec *rqtp          | struct __kernel_timespec *rmtp          | -                                           | -                   |
| 116 | syslog                 |  0x74 | int type                          | char *buf                           | int len                                       | -                                       | -                                           | -                   |
| 117 | ptrace                 |  0x75 | long request                      | long pid                            | unsigned long addr                            | unsigned long data                      | -                                           | -                   |
| 118 | sched_setparam         |  0x76 | pid_t pid                         | struct sched_param *param           | -                                             | -                                       | -                                           | -                   |
| 119 | sched_setscheduler     |  0x77 | pid_t pid                         | int policy                          | struct sched_param *param                     | -                                       | -                                           | -                   |
| 120 | sched_getscheduler     |  0x78 | pid_t pid                         | -                                   | -                                             | -                                       | -                                           | -                   |
| 121 | sched_getparam         |  0x79 | pid_t pid                         | struct sched_param *param           | -                                             | -                                       | -                                           | -                   |
| 122 | sched_setaffinity      |  0x7a | pid_t pid                         | unsigned int len                    | unsigned long *user_mask_ptr                  | -                                       | -                                           | -                   |
| 123 | sched_getaffinity      |  0x7b | pid_t pid                         | unsigned int len                    | unsigned long *user_mask_ptr                  | -                                       | -                                           | -                   |
| 124 | sched_yield            |  0x7c | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
| 125 | sched_get_priority_max |  0x7d | int policy                        | -                                   | -                                             | -                                       | -                                           | -                   |
| 126 | sched_get_priority_min |  0x7e | int policy                        | -                                   | -                                             | -                                       | -                                           | -                   |
| 127 | sched_rr_get_interval  |  0x7f | pid_t pid                         | struct __kernel_timespec *interval  | -                                             | -                                       | -                                           | -                   |
| 128 | restart_syscall        |  0x80 | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
| 129 | kill                   |  0x81 | pid_t pid                         | int sig                             | -                                             | -                                       | -                                           | -                   |
| 130 | tkill                  |  0x82 | pid_t pid                         | int sig                             | -                                             | -                                       | -                                           | -                   |
| 131 | tgkill                 |  0x83 | pid_t tgid                        | pid_t pid                           | int sig                                       | -                                       | -                                           | -                   |
| 132 | sigaltstack            |  0x84 | const struct sigaltstack *uss     | struct sigaltstack *uoss            | -                                             | -                                       | -                                           | -                   |
| 133 | rt_sigsuspend          |  0x85 | sigset_t *unewset                 | size_t sigsetsize                   | -                                             | -                                       | -                                           | -                   |
| 134 | rt_sigaction           |  0x86 | int                               | const struct sigaction *            | struct sigaction *                            | size_t                                  | -                                           | -                   |
| 135 | rt_sigprocmask         |  0x87 | int how                           | sigset_t *set                       | sigset_t *oset                                | size_t sigsetsize                       | -                                           | -                   |
| 136 | rt_sigpending          |  0x88 | sigset_t *set                     | size_t sigsetsize                   | -                                             | -                                       | -                                           | -                   |
| 137 | rt_sigtimedwait        |  0x89 | const sigset_t *uthese            | siginfo_t *uinfo                    | const struct __kernel_timespec *uts           | size_t sigsetsize                       | -                                           | -                   |
| 138 | rt_sigqueueinfo        |  0x8a | pid_t pid                         | int sig                             | siginfo_t *uinfo                              | -                                       | -                                           | -                   |
| 139 | rt_sigreturn           |  0x8b | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 140 | setpriority            |  0x8c | int which                         | int who                             | int niceval                                   | -                                       | -                                           | -                   |
| 141 | getpriority            |  0x8d | int which                         | int who                             | -                                             | -                                       | -                                           | -                   |
| 142 | reboot                 |  0x8e | int magic1                        | int magic2                          | unsigned int cmd                              | void *arg                               | -                                           | -                   |
| 143 | setregid               |  0x8f | gid_t rgid                        | gid_t egid                          | -                                             | -                                       | -                                           | -                   |
| 144 | setgid                 |  0x90 | gid_t gid                         | -                                   | -                                             | -                                       | -                                           | -                   |
| 145 | setreuid               |  0x91 | uid_t ruid                        | uid_t euid                          | -                                             | -                                       | -                                           | -                   |
| 146 | setuid                 |  0x92 | uid_t uid                         | -                                   | -                                             | -                                       | -                                           | -                   |
| 147 | setresuid              |  0x93 | uid_t ruid                        | uid_t euid                          | uid_t suid                                    | -                                       | -                                           | -                   |
| 148 | getresuid              |  0x94 | uid_t *ruid                       | uid_t *euid                         | uid_t *suid                                   | -                                       | -                                           | -                   |
| 149 | setresgid              |  0x95 | gid_t rgid                        | gid_t egid                          | gid_t sgid                                    | -                                       | -                                           | -                   |
| 150 | getresgid              |  0x96 | gid_t *rgid                       | gid_t *egid                         | gid_t *sgid                                   | -                                       | -                                           | -                   |
| 151 | setfsuid               |  0x97 | uid_t uid                         | -                                   | -                                             | -                                       | -                                           | -                   |
| 152 | setfsgid               |  0x98 | gid_t gid                         | -                                   | -                                             | -                                       | -                                           | -                   |
| 153 | times                  |  0x99 | struct tms *tbuf                  | -                                   | -                                             | -                                       | -                                           | -                   |
| 154 | setpgid                |  0x9a | pid_t pid                         | pid_t pgid                          | -                                             | -                                       | -                                           | -                   |
| 155 | getpgid                |  0x9b | pid_t pid                         | -                                   | -                                             | -                                       | -                                           | -                   |
| 156 | getsid                 |  0x9c | pid_t pid                         | -                                   | -                                             | -                                       | -                                           | -                   |
| 157 | setsid                 |  0x9d | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
| 158 | getgroups              |  0x9e | int gidsetsize                    | gid_t *grouplist                    | -                                             | -                                       | -                                           | -                   |
| 159 | setgroups              |  0x9f | int gidsetsize                    | gid_t *grouplist                    | -                                             | -                                       | -                                           | -                   |
| 160 | uname                  |  0xa0 | struct old_utsname *              | -                                   | -                                             | -                                       | -                                           | -                   |
| 161 | sethostname            |  0xa1 | char *name                        | int len                             | -                                             | -                                       | -                                           | -                   |
| 162 | setdomainname          |  0xa2 | char *name                        | int len                             | -                                             | -                                       | -                                           | -                   |
| 163 | getrlimit              |  0xa3 | unsigned int resource             | struct rlimit *rlim                 | -                                             | -                                       | -                                           | -                   |
| 164 | setrlimit              |  0xa4 | unsigned int resource             | struct rlimit *rlim                 | -                                             | -                                       | -                                           | -                   |
| 165 | getrusage              |  0xa5 | int who                           | struct rusage *ru                   | -                                             | -                                       | -                                           | -                   |
| 166 | umask                  |  0xa6 | int mask                          | -                                   | -                                             | -                                       | -                                           | -                   |
| 167 | prctl                  |  0xa7 | int option                        | unsigned long arg2                  | unsigned long arg3                            | unsigned long arg4                      | unsigned long arg5                          | -                   |
| 168 | getcpu                 |  0xa8 | unsigned *cpu                     | unsigned *node                      | struct getcpu_cache *cache                    | -                                       | -                                           | -                   |
| 169 | gettimeofday           |  0xa9 | struct timeval *tv                | struct timezone *tz                 | -                                             | -                                       | -                                           | -                   |
| 170 | settimeofday           |  0xaa | struct timeval *tv                | struct timezone *tz                 | -                                             | -                                       | -                                           | -                   |
| 171 | adjtimex               |  0xab | struct __kernel_timex *txc_p      | -                                   | -                                             | -                                       | -                                           | -                   |
| 172 | getpid                 |  0xac | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
| 173 | getppid                |  0xad | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
| 174 | getuid                 |  0xae | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
| 175 | geteuid                |  0xaf | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
| 176 | getgid                 |  0xb0 | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
| 177 | getegid                |  0xb1 | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
| 178 | gettid                 |  0xb2 | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
| 179 | sysinfo                |  0xb3 | struct sysinfo *info              | -                                   | -                                             | -                                       | -                                           | -                   |
| 180 | mq_open                |  0xb4 | const char *name                  | int oflag                           | umode_t mode                                  | struct mq_attr *attr                    | -                                           | -                   |
| 181 | mq_unlink              |  0xb5 | const char *name                  | -                                   | -                                             | -                                       | -                                           | -                   |
| 182 | mq_timedsend           |  0xb6 | mqd_t mqdes                       | const char *msg_ptr                 | size_t msg_len                                | unsigned int msg_prio                   | const struct __kernel_timespec *abs_timeout | -                   |
| 183 | mq_timedreceive        |  0xb7 | mqd_t mqdes                       | char *msg_ptr                       | size_t msg_len                                | unsigned int *msg_prio                  | const struct __kernel_timespec *abs_timeout | -                   |
| 184 | mq_notify              |  0xb8 | mqd_t mqdes                       | const struct sigevent *notification | -                                             | -                                       | -                                           | -                   |
| 185 | mq_getsetattr          |  0xb9 | mqd_t mqdes                       | const struct mq_attr *mqstat        | struct mq_attr *omqstat                       | -                                       | -                                           | -                   |
| 186 | msgget                 |  0xba | key_t key                         | int msgflg                          | -                                             | -                                       | -                                           | -                   |
| 187 | msgctl                 |  0xbb | int msqid                         | int cmd                             | struct msqid_ds *buf                          | -                                       | -                                           | -                   |
| 188 | msgrcv                 |  0xbc | int msqid                         | struct msgbuf *msgp                 | size_t msgsz                                  | long msgtyp                             | int msgflg                                  | -                   |
| 189 | msgsnd                 |  0xbd | int msqid                         | struct msgbuf *msgp                 | size_t msgsz                                  | int msgflg                              | -                                           | -                   |
| 190 | semget                 |  0xbe | key_t key                         | int nsems                           | int semflg                                    | -                                       | -                                           | -                   |
| 191 | semctl                 |  0xbf | int semid                         | int semnum                          | int cmd                                       | unsigned long arg                       | -                                           | -                   |
| 192 | semtimedop             |  0xc0 | int semid                         | struct sembuf *sops                 | unsigned nsops                                | const struct __kernel_timespec *timeout | -                                           | -                   |
| 193 | semop                  |  0xc1 | int semid                         | struct sembuf *sops                 | unsigned nsops                                | -                                       | -                                           | -                   |
| 194 | shmget                 |  0xc2 | key_t key                         | size_t size                         | int flag                                      | -                                       | -                                           | -                   |
| 195 | shmctl                 |  0xc3 | int shmid                         | int cmd                             | struct shmid_ds *buf                          | -                                       | -                                           | -                   |
| 196 | shmat                  |  0xc4 | int shmid                         | char *shmaddr                       | int shmflg                                    | -                                       | -                                           | -                   |
| 197 | shmdt                  |  0xc5 | char *shmaddr                     | -                                   | -                                             | -                                       | -                                           | -                   |
| 198 | socket                 |  0xc6 | int                               | int                                 | int                                           | -                                       | -                                           | -                   |
| 199 | socketpair             |  0xc7 | int                               | int                                 | int                                           | int *                                   | -                                           | -                   |
| 200 | bind                   |  0xc8 | int                               | struct sockaddr *                   | int                                           | -                                       | -                                           | -                   |
| 201 | listen                 |  0xc9 | int                               | int                                 | -                                             | -                                       | -                                           | -                   |
| 202 | accept                 |  0xca | int                               | struct sockaddr *                   | int *                                         | -                                       | -                                           | -                   |
| 203 | connect                |  0xcb | int                               | struct sockaddr *                   | int                                           | -                                       | -                                           | -                   |
| 204 | getsockname            |  0xcc | int                               | struct sockaddr *                   | int *                                         | -                                       | -                                           | -                   |
| 205 | getpeername            |  0xcd | int                               | struct sockaddr *                   | int *                                         | -                                       | -                                           | -                   |
| 206 | sendto                 |  0xce | int                               | void *                              | size_t                                        | unsigned                                | struct sockaddr *                           | int                 |
| 207 | recvfrom               |  0xcf | int                               | void *                              | size_t                                        | unsigned                                | struct sockaddr *                           | int *               |
| 208 | setsockopt             |  0xd0 | int fd                            | int level                           | int optname                                   | char *optval                            | int optlen                                  | -                   |
| 209 | getsockopt             |  0xd1 | int fd                            | int level                           | int optname                                   | char *optval                            | int *optlen                                 | -                   |
| 210 | shutdown               |  0xd2 | int                               | int                                 | -                                             | -                                       | -                                           | -                   |
| 211 | sendmsg                |  0xd3 | int fd                            | struct user_msghdr *msg             | unsigned flags                                | -                                       | -                                           | -                   |
| 212 | recvmsg                |  0xd4 | int fd                            | struct user_msghdr *msg             | unsigned flags                                | -                                       | -                                           | -                   |
| 213 | readahead              |  0xd5 | int fd                            | loff_t offset                       | size_t count                                  | -                                       | -                                           | -                   |
| 214 | brk                    |  0xd6 | unsigned long brk                 | -                                   | -                                             | -                                       | -                                           | -                   |
| 215 | munmap                 |  0xd7 | unsigned long addr                | size_t len                          | -                                             | -                                       | -                                           | -                   |
| 216 | mremap                 |  0xd8 | unsigned long addr                | unsigned long old_len               | unsigned long new_len                         | unsigned long flags                     | unsigned long new_addr                      | -                   |
| 217 | add_key                |  0xd9 | const char *_type                 | const char *_description            | const void *_payload                          | size_t plen                             | key_serial_t destringid                     | -                   |
| 218 | request_key            |  0xda | const char *_type                 | const char *_description            | const char *_callout_info                     | key_serial_t destringid                 | -                                           | -                   |
| 219 | keyctl                 |  0xdb | int cmd                           | unsigned long arg2                  | unsigned long arg3                            | unsigned long arg4                      | unsigned long arg5                          | -                   |
| 220 | clone                  |  0xdc | unsigned long                     | unsigned long                       | int *                                         | int *                                   | unsigned long                               | -                   |
| 221 | execve                 |  0xdd | const char *filename              | const char *const *argv             | const char *const *envp                       | -                                       | -                                           | -                   |
| 222 | mmap                   |  0xde | ?                                 | ?                                   | ?                                             | ?                                       | ?                                           | ?                   |
| 223 | fadvise64              |  0xdf | int fd                            | loff_t offset                       | size_t len                                    | int advice                              | -                                           | -                   |
| 224 | swapon                 |  0xe0 | const char *specialfile           | int swap_flags                      | -                                             | -                                       | -                                           | -                   |
| 225 | swapoff                |  0xe1 | const char *specialfile           | -                                   | -                                             | -                                       | -                                           | -                   |
| 226 | mprotect               |  0xe2 | unsigned long start               | size_t len                          | unsigned long prot                            | -                                       | -                                           | -                   |
| 227 | msync                  |  0xe3 | unsigned long start               | size_t len                          | int flags                                     | -                                       | -                                           | -                   |
| 228 | mlock                  |  0xe4 | unsigned long start               | size_t len                          | -                                             | -                                       | -                                           | -                   |
| 229 | munlock                |  0xe5 | unsigned long start               | size_t len                          | -                                             | -                                       | -                                           | -                   |
| 230 | mlockall               |  0xe6 | int flags                         | -                                   | -                                             | -                                       | -                                           | -                   |
| 231 | munlockall             |  0xe7 | -                                 | -                                   | -                                             | -                                       | -                                           | -                   |
| 232 | mincore                |  0xe8 | unsigned long start               | size_t len                          | unsigned char * vec                           | -                                       | -                                           | -                   |
| 233 | madvise                |  0xe9 | unsigned long start               | size_t len                          | int behavior                                  | -                                       | -                                           | -                   |
| 234 | remap_file_pages       |  0xea | unsigned long start               | unsigned long size                  | unsigned long prot                            | unsigned long pgoff                     | unsigned long flags                         | -                   |
| 235 | mbind                  |  0xeb | unsigned long start               | unsigned long len                   | unsigned long mode                            | const unsigned long *nmask              | unsigned long maxnode                       | unsigned flags      |
| 236 | get_mempolicy          |  0xec | int *policy                       | unsigned long *nmask                | unsigned long maxnode                         | unsigned long addr                      | unsigned long flags                         | -                   |
| 237 | set_mempolicy          |  0xed | int mode                          | const unsigned long *nmask          | unsigned long maxnode                         | -                                       | -                                           | -                   |
| 238 | migrate_pages          |  0xee | pid_t pid                         | unsigned long maxnode               | const unsigned long *from                     | const unsigned long *to                 | -                                           | -                   |
| 239 | move_pages             |  0xef | pid_t pid                         | unsigned long nr_pages              | const void * *pages                           | const int *nodes                        | int *status                                 | int flags           |
| 240 | rt_tgsigqueueinfo      |  0xf0 | pid_t tgid                        | pid_t pid                           | int sig                                       | siginfo_t *uinfo                        | -                                           | -                   |
| 241 | perf_event_open        |  0xf1 | struct perf_event_attr *attr_uptr | pid_t pid                           | int cpu                                       | int group_fd                            | unsigned long flags                         | -                   |
| 242 | accept4                |  0xf2 | int                               | struct sockaddr *                   | int *                                         | int                                     | -                                           | -                   |
| 243 | recvmmsg               |  0xf3 | int fd                            | struct mmsghdr *msg                 | unsigned int vlen                             | unsigned flags                          | struct __kernel_timespec *timeout           | -                   |
| 244 | not implemented        |  0xf4 |                                   |                                     |                                               |                                         |                                             |                     |
| 245 | not implemented        |  0xf5 |                                   |                                     |                                               |                                         |                                             |                     |
| 246 | not implemented        |  0xf6 |                                   |                                     |                                               |                                         |                                             |                     |
| 247 | not implemented        |  0xf7 |                                   |                                     |                                               |                                         |                                             |                     |
| 248 | not implemented        |  0xf8 |                                   |                                     |                                               |                                         |                                             |                     |
| 249 | not implemented        |  0xf9 |                                   |                                     |                                               |                                         |                                             |                     |
| 250 | not implemented        |  0xfa |                                   |                                     |                                               |                                         |                                             |                     |
| 251 | not implemented        |  0xfb |                                   |                                     |                                               |                                         |                                             |                     |
| 252 | not implemented        |  0xfc |                                   |                                     |                                               |                                         |                                             |                     |
| 253 | not implemented        |  0xfd |                                   |                                     |                                               |                                         |                                             |                     |
| 254 | not implemented        |  0xfe |                                   |                                     |                                               |                                         |                                             |                     |
| 255 | not implemented        |  0xff |                                   |                                     |                                               |                                         |                                             |                     |
| 256 | not implemented        | 0x100 |                                   |                                     |                                               |                                         |                                             |                     |
| 257 | not implemented        | 0x101 |                                   |                                     |                                               |                                         |                                             |                     |
| 258 | not implemented        | 0x102 |                                   |                                     |                                               |                                         |                                             |                     |
| 259 | not implemented        | 0x103 |                                   |                                     |                                               |                                         |                                             |                     |
| 260 | wait4                  | 0x104 | pid_t pid                         | int *stat_addr                      | int options                                   | struct rusage *ru                       | -                                           | -                   |
| 261 | prlimit64              | 0x105 | pid_t pid                         | unsigned int resource               | const struct rlimit64 *new_rlim               | struct rlimit64 *old_rlim               | -                                           | -                   |
| 262 | fanotify_init          | 0x106 | unsigned int flags                | unsigned int event_f_flags          | -                                             | -                                       | -                                           | -                   |
| 263 | fanotify_mark          | 0x107 | int fanotify_fd                   | unsigned int flags                  | u64 mask                                      | int fd                                  | const char *pathname                        | -                   |
| 264 | name_to_handle_at      | 0x108 | int dfd                           | const char *name                    | struct file_handle *handle                    | int *mnt_id                             | int flag                                    | -                   |
| 265 | open_by_handle_at      | 0x109 | int mountdirfd                    | struct file_handle *handle          | int flags                                     | -                                       | -                                           | -                   |
| 266 | clock_adjtime          | 0x10a | clockid_t which_clock             | struct __kernel_timex *tx           | -                                             | -                                       | -                                           | -                   |
| 267 | syncfs                 | 0x10b | int fd                            | -                                   | -                                             | -                                       | -                                           | -                   |
| 268 | setns                  | 0x10c | int fd                            | int nstype                          | -                                             | -                                       | -                                           | -                   |
| 269 | sendmmsg               | 0x10d | int fd                            | struct mmsghdr *msg                 | unsigned int vlen                             | unsigned flags                          | -                                           | -                   |
| 270 | process_vm_readv       | 0x10e | pid_t pid                         | const struct iovec *lvec            | unsigned long liovcnt                         | const struct iovec *rvec                | unsigned long riovcnt                       | unsigned long flags |
| 271 | process_vm_writev      | 0x10f | pid_t pid                         | const struct iovec *lvec            | unsigned long liovcnt                         | const struct iovec *rvec                | unsigned long riovcnt                       | unsigned long flags |
| 272 | kcmp                   | 0x110 | pid_t pid1                        | pid_t pid2                          | int type                                      | unsigned long idx1                      | unsigned long idx2                          | -                   |
| 273 | finit_module           | 0x111 | int fd                            | const char *uargs                   | int flags                                     | -                                       | -                                           | -                   |
| 274 | sched_setattr          | 0x112 | pid_t pid                         | struct sched_attr *attr             | unsigned int flags                            | -                                       | -                                           | -                   |
| 275 | sched_getattr          | 0x113 | pid_t pid                         | struct sched_attr *attr             | unsigned int size                             | unsigned int flags                      | -                                           | -                   |
| 276 | renameat2              | 0x114 | int olddfd                        | const char *oldname                 | int newdfd                                    | const char *newname                     | unsigned int flags                          | -                   |
| 277 | seccomp                | 0x115 | unsigned int op                   | unsigned int flags                  | void *uargs                                   | -                                       | -                                           | -                   |
| 278 | getrandom              | 0x116 | char *buf                         | size_t count                        | unsigned int flags                            | -                                       | -                                           | -                   |
| 279 | memfd_create           | 0x117 | const char *uname_ptr             | unsigned int flags                  | -                                             | -                                       | -                                           | -                   |
| 280 | bpf                    | 0x118 | int cmd                           | union bpf_attr *attr                | unsigned int size                             | -                                       | -                                           | -                   |
| 281 | execveat               | 0x119 | int dfd                           | const char *filename                | const char *const *argv                       | const char *const *envp                 | int flags                                   | -                   |
| 282 | userfaultfd            | 0x11a | int flags                         | -                                   | -                                             | -                                       | -                                           | -                   |
| 283 | membarrier             | 0x11b | int cmd                           | int flags                           | -                                             | -                                       | -                                           | -                   |
| 284 | mlock2                 | 0x11c | unsigned long start               | size_t len                          | int flags                                     | -                                       | -                                           | -                   |
| 285 | copy_file_range        | 0x11d | int fd_in                         | loff_t *off_in                      | int fd_out                                    | loff_t *off_out                         | size_t len                                  | unsigned int flags  |
| 286 | preadv2                | 0x11e | unsigned long fd                  | const struct iovec *vec             | unsigned long vlen                            | unsigned long pos_l                     | unsigned long pos_h                         | rwf_t flags         |
| 287 | pwritev2               | 0x11f | unsigned long fd                  | const struct iovec *vec             | unsigned long vlen                            | unsigned long pos_l                     | unsigned long pos_h                         | rwf_t flags         |
| 288 | pkey_mprotect          | 0x120 | unsigned long start               | size_t len                          | unsigned long prot                            | int pkey                                | -                                           | -                   |
| 289 | pkey_alloc             | 0x121 | unsigned long flags               | unsigned long init_val              | -                                             | -                                       | -                                           | -                   |
| 290 | pkey_free              | 0x122 | int pkey                          | -                                   | -                                             | -                                       | -                                           | -                   |
| 291 | statx                  | 0x123 | int dfd                           | const char *path                    | unsigned flags                                | unsigned mask                           | struct statx *buffer                        | -                   |
****** facts
** databases
*** mysql
**** facts
**** concepts
**** how to
***** enter date format
+ in mysql you enter date like this =2020-03-20=
***** change the type of a column
#+begin_src sql
ALTER TABLE $tabl_name MODIFY COLUMN $colmn_name $your_type;
#+end_src
+ if you are working from mysql's GUI, then you can TAB complete type name
***** insert values
#+begin_src sql
--                                                                                                       values to add
--            table name                                                                           .---------------------------.
--             /                                                                                  /         |          |        \
insert into Personel (PersonelName, PersonelSurname, PersonelSalary, PersonelBirthday) values ("Ahmet", "Albayrak", "2000", "1990-05-06");
--                          \               |                |             /
--                           '--------------------------------------------'
--                                            column names
#+end_src
**** problems & solutions
*** mongodb

* Tools
** text editors
*** emacs
**** General
***** facts
***** concept / term
***** tutorials / howto
***** problems and solutions
**** Org Mode
***** facts
+ *radio link*'ler tez ve referans dökümanları yazımında çok etkilidir | [[radio link]]
***** concept / term
****** radio link
mesela metin içinde *newton* geçen her yere wikipedia linkini eklemek istiyorsun, o zaman bunu kullanırsın. kullanıcı nerede newton görse, artık tıklanabilir bir link görür. [[radio link oluşturma][örnek]]
***** how to
****** döküman içi hızlı arama
Doom için : =SPC s b=
1. aranmak istenen şeyi yaz
2. =Enter=
****** radio link oluşturma
1. sayfanın herhangi bir yerine <<<>>> içine kelimeyi yaz

[[radio link]] nedir?

****** external sitelere link oluşturma?
1. use [[][]] structure
2. enter *url* in first bracket
3. enter *alias* in second bracket
****** show only headers on startup
add =#+STARTUP: overview= to the beginning of the file
****** add footnotes to the bottom
1. create a heading in org mode
2. add [fn::footnote content] after the heading. for example;
******* Heading [fn::footnote content]

****** convert org file to html from outside emacs
1. you need to open emacs as a daemon to make this work
   #+begin_src sh
   emacs --daemon
   #+end_src
2. use *emacsclient -e* command to use emacs comands outside emacs.
   #+begin_src sh
   emacsclient -e "(progn (find-file \"~/txt/notitia.org\") (org-html-export-to-html) (kill-buffer))"
   #+end_src
you can also use every other command this way.
****** enable line numbers in source blocks
+ this will export with line numbers starting from 1
#+begin_src python -n
while True:
    print("*****")
    print("Emacs is LOVE")
    print("*****")
#+end_src
+ line numbers will start from 20
#+begin_src python -n 20
while True:
    print("*****")
    print("Emacs is LOVE")
    print("*****")
#+end_src
****** disable table of contects
#+begin_src org
#+OPTIONS: toc:nil
#+end_src
****** auto generate table of contents
1. create a header on top of the org document
2. add :toc: word after header name
3. save the file
internal links will be generated
****** write your configs in org-mode
This is useful when your config files are huge and messy. this way of writing config files will help you to organize the code and make it more understandable. you can also create code documentations with org-mode. I'm going to use i3 config as an example. (ignore periods in code blocks) so here are the steps.

1. create a =README.org= next to your config file

2. add the title like on top of your file;
   #+begin_src org
   .#+TITLE: i3 Cofiguration
   #+end_src

3. add this property to write code blocks to the separate file (config)
   #+begin_src org
   .#+TITLE: i3 Cofiguration
   .#+PROPERTY: header-args :tangle config
   #+end_src

4. =SPC : org-babel-tangle= this will write your source blocks to the config

after that you will never gonna edit i3 config file again. all you is to come back to this README.org file and add some code blocks here
****** recude size of an image
1. import an image
2. write =#+ATTR_HTML::width 500= on top of the image
3. withoud attribute;
   [[file:./images/screenshot-74.png]]
4. with attribute
   #+ATTR_HTML::width 500
   [[file:./images/screenshot-74.png]]

***** problems and solutions
*** doom
**** tips
+ great modules to use:
1. *pass* for password storing
2. *irc*
3. *org-roam* better note taking
4. *magit* awesome git tool
5. *deft* browse the notes
**** how to
***** create new keybinding for whichkey?
#+BEGIN_SRC elisp
(map! :leader :desc "toggle undo tree" "- c u" #'undo-tree-visualize )
#+END_SRC
***** do password management with pass
1. install pass on the system
#+BEGIN_SRC sh
sudo pacman -S pass
#+END_SRC
2. uncomment *:tools pass* in [[~/.doom.d/init.el][init.el]]
3. synchronize the doom
#+BEGIN_SRC sh
~/.doom.d/bin/doom sync
#+END_SRC
4. generate [[gpg]]
#+BEGIN_SRC sh
gpg --full-gen-key
#+END_SRC
5. generate your password directory
use email address that you entered while [[generate a gpg key][generating]] the gpg.
#+BEGIN_SRC sh
pass init $GPG_EMAIL
#+END_SRC
6. git integration for your passwords
this is a cool feature. you never loose your passwords even if you delete it!
#+BEGIN_SRC sh
pass git init
#+END_SRC
7. now fire up *doom*
8. open pass
SPC : pass
***** fast commit!
=SPC g g S c c "commit desc" C-c C-c q=
***** see the value of a variable?
1. =SPC ;=
2. type the variable name
3. =RET=
***** disable line wrapping
=SPC w t=
***** search usage of a function online
1. cursor over the *function*
2. =SPC s O=
3. =github RET=
4. add the extension of your programming language at the end of the promt;
example: /org-beamer-theme extension:el/
5. =RET=
***** convert org file to html on command line
1. start emacs daemon
   #+begin_src sh
   emacs --daemon
   #+end_src
***** how to block with doom
read [[https://ox-hugo.scripter.co/][this]]

***** add and delete projects in treemacs
****** I. way
this way will only affect the current workspace
=C-c C-p a=               add project to treemacs
=C-c C-p d=               remove project from treemacs
****** II. way
this will globally add your projects
1. =SPC :=
2. =treemacs-edit-workspaces=
3. add your project under *Default* like this;
   #+begin_src org
   ,** YOUR_PROJECT_NAME
        - path :: PATH_TO_PROJECT
   #+end_src
4. finish editing by doing =treemacs-finish-edit=

***** effective coding with doom emacs :tools:doom:emacs:programming:howto:
:PROPERTIES:
:EXPORT_FILE_NAME: programming-in-doom-emacs
:EXPORT_TITLE: programming in doom emacs
:HUGO_BASE_DIR: ~/txt/blog/
:HUGO_SECTION: en/posts
:EXPORT_AUTHOR: savolla
:END:
This is how I use [[https://github.com/hlissner/doom-emacs][doom emacs]] for daily coding. Doom and it's packages are working together to make developer's life easy. Here I made a complete list for you guys. This is a *step by step* guide to do coding on doom emacs. By the way when I say things like =C-c C-p= it means =CTRL + c + p=
****** before we start
to make things work enable *specified* modules in your *init* file
1. do =SPC f p= and select *init.el*
2. enable(uncomment) the following modules;
   - magit
   - treemacs
   - lookup
3. reload doom by doing =SPC h r r=
****** cloning projects
1. =SPC g C= to run magit clone
2. press =u= to specify repo url
3. paste your url with =Ctrl Shift v= (for linux)
4. specify the path for the repo
5. press =y= to make *origin* default branch
6. wait until the cloning is finished
7. press =q= to quit
****** adding projects
1. =SPC o p= to open *treemacs*
2. =C-c C-p a=
3. specify the *path* for your porject
4. now you see your project directory appeared in your *treemacs* menu
****** navigate files
1. =SPC SPC= brings menu with *all files* under your project root
2. type any keyword you want
you don't have to type entire file name. menu items will be reduced once you type some characters.
****** find symbols (method, variable, objects)
1. press =SPC /=
2. type your keyword or /function/, /variable/, /class/ or /struct/ names.
3. once you enter the keyword, doom will jump to that file instantly
4. =C-o= to go *back*
5. =C-i= to go *forward*
****** recent files
if you work on other things other than your project, for example editin some config files while coding etc, then you probably type the *file path* every single time to navigate to that config file. doom solves it with
1. =SPC f r= brings a menu or recently visited files
2. find and navigate
3. =C-o= to go *back*
4. =C-i= to go *forward*
****** lookup code
sometimes we can't find a good documentation on a method/module when coding. the best way to understand something is to looking at examples
1. navigate your cursor on method, module you want to understand
2. do =SCP s o=
3. choose *Github*
4. before hitting =RET= you can optionally specify the following items for more accurate results;
   - filename:
   - path:
   - extension:
here is an example for searching *printf* on github
#+begin_quote
printf extension:.c filename:main.c path:src
#+end_quote
****** find and replace projectwise
you can change a variable or method name projectwise. this is usefull in *code refactoring*. here is how to do that in doom;
1. =SPC /=
2. enter the *symbol name*. "emacs" in this example
3. =C-c C-e=
4. =:%s/emacs/doom/g=
5. =RET=
6. =Z Z=
there must be an easier way..

***** launch without X
#+BEGIN_SRC bash
emacs -nw
#+END_SRC
**** cheat sheet

=SPC - t t=                                 toggle tabs
=SPC - t l=                                 list tabs
=SPC - t n=                                 next tab
=SPC - t p=                                 previous tab
=SPC - t o=                                 create new tab
=SPC - t k=                                 kill tab

=SPC - c t=                                 open tagbar
=SPC - c g=                                 run gdb
=SPC - c u=                                 open undo tree
=SPC t z=                                   toggle zen mode
=SPC /=                                     ag
=SPC f r=                                   fast navigate recent files
=SPC g g S c c "msg" C-c C-c q=             fast commit
=SPC / foo C-c C-e :%s/foo/bar/g RET Z Z=   find foo and replace with bar in project
=SPC X t=                                   enter a new todo
=SPC w t=                                   disable line wrapping

=SPC n r t a=                               add roam tag
=SPC n r t d=                               delete roam tag
=SPC n r G=                                 start [[http://localhost:8080][graph server]]
=SPC SPC=                                   find file in project tree

=C-c C-p a=                                 add project to treemacs
=C-c C-p d=                                 remove project from treemacs

=SPC s f=                                   locate file in system
=SPC s b=                                   search inside buffer (usefull for searching notes)

**** problems & solutions
***** with-editor.elc failed to provide feature ‘with-editor’
#+begin_src sh
rm -rf ~/.emacs.d/.local/straight/build*/with-editor && doom sync
#+end_src
***** omnisharp sever is not installed
1. =SPC :=
2. =omnisharp-install-server=
3. =RET=
***** 'Re-entering top level after C stack overflow'
delete all undo-tree cache files in =~/.emacs.d/.local/cache/undo-tree=

*** vim
**** blog
***** less known vim tricks :vim:howto:tools:
:PROPERTIES:
:EXPORT_FILE_NAME: less-known-vim-tricks
:HUGO_BASE_DIR: ~/txt/blog/
:HUGO_SECTION: en/posts
:EXPORT_AUTHOR: savolla
:END:
****** ourput redirection
+ you can redirect outputs of a *shell command* in vim
  1. press =ESC=
  2. =:r !ls -la=
  3. =RET=
****** whitespace removal
+ remove all *trailing whitespaces*. you can also make the following a *permanent macro*
  1. press =ESC=
  2. =:%s/\s\+$//e=
  3. =RET=
****** time travel
+ show the file 10 mins *ago*
  1. press =ESC=
  2. =:earlier 10m=
  3. =RET=
+ show the file *after* 10 mins
  1. press =ESC=
  2. =:later 10m=
  3. =RET=
**** code blocks
+ essential vimrc
#+BEGIN_SRC sh
set tabstop=4
set shiftwidth=4
set expandtab
syntax on
inoremap jk <Esc>
#+END_SRC
**** how to
***** permanent macros in vim :vim:howto:tools:
:PROPERTIES:
:EXPORT_FILE_NAME: permanent-macros-in-vim
:HUGO_BASE_DIR: ~/txt/blog/
:HUGO_SECTION: en/posts
:EXPORT_AUTHOR: savolla
:END:
this is a short *step by step* tutorial to save your *vim macro* and use it everytime
1. fire up *vim*
2. do =q a=
3. create your macro
4. press =q= to finish
5. exit vim =:q!=
6. =vim ~/.vimrc=
7. type =let @q = ''=
8. put your cursor on *first single quote*
9. do =" a p=
10. macro should be pasted inside single quotes like:
#+begin_src sh
let @q = 'your_macro_content'
#+end_src
11. save and exit =ESC :wq=
12. fire up *vim* again
13. do =@ q=
now you should have your macro saved. after this moment everytime you open a vim session, this macro will be read from =.vimrc= and you will able to use it.
***** redirect command output into vim session
1. press =ESC=
2. =:r !ls -la=
3. =RET=
***** remove all trailing whitespaces
1. press =ESC=
2. =:%s/\s\+$//e=
3. =RET=
***** time travel
+ show the file 10 mins *ago*
  1. press =ESC=
  2. =:earlier 10m=
  3. =RET=
+ show the file *after* 10 mins
  1. press =ESC=
  2. =:later 10m=
  3. =RET=

*** spacevim
**** tutorials / howto
***** how to installation
1. install dependencies
#+BEGIN_SRC sh
sudo pacman -S neovim
sudo pacman -S clang
sudo pip install --user pynvim
sudo pip3 install --user pynvim
#+END_SRC
2. download and install
#+BEGIN_SRC sh
curl -sLf https://spacevim.org/install.sh | bash
#+END_SRC
3. open nvim and type *VimProcInstall*
#+BEGIN_SRC sh
nvim
:VimProcInstall
#+END_SRC
4. restart nvim. it will download all the plugins

***** essential keys
1. <F3> opens *file manager*
2. <F2> opens *Tagbar*
3. \ is the leader in spacevim
***** open configuration
SPC f v d
*** visual studio
**** shortcuts
1. create a class property by doing:
=prop TAB TAB=
2. constructor
=ctor TAB TAB=
**** how to
***** create a Layered Architecture project
****** project creation part
1. create new project
2. select *blank solution*
3. give solution a name
4. right click on solution add / new project
5. select *Class Library (.NET Framework)
6. use this naming convention: "YourApp.Layer"
7. create the following projects;
   a. YourApp.Entities
   b. YourApp.Business
   c. YourApp.DataAccess
8. the last one is UI layer. add a new "Windows Forms App (.NET Framwork)"
9. name it "YourApp.WebFormsUI"
****** structuring
1. delete all auto generated classes
2. create two folders for each layer;
   - Abstract
   - Concrete
   interfaces and abstract classes go inside *Abstract* folder, concrete implementations go inside *Concrete*
3. apply step 1 and 2 to DataAccess, Business and Entities layers. User Interface layer has it's own properties
*** spacemacs
**** key bindings

#+BEGIN_SRC sh
  spc f t   # toggle treemacs
  spc w c c # distraction free editing
  spc l o   # switch to custom layout
  spc h spc # lookup documentation for a layer
  spc j j   # easy motion on emacs. also can be used with commands
  spc j i   # show semantic tags in code. functions, dependencies etc.
  spc j l   # jump to line. I think it's more convinient that spc jj
  spc j q   # navigate on a variable and use this to see other occurencies
  spc m g g # go to deffinition
  C-o       # jump back through the window traverse history
  C-i       # jump forward through the window traverse history
  spc x d w # delete trailing white spaces
#+END_SRC

**** how to
  + create a custom layout
    put the following under *defun dotspacemacs/user-config ()*. The following code
    is just an example but you can find your way from here

    #+BEGIN_SRC emacs-lisp
      (spacemacs|define-custom-layout "@coding"
        :binding "d"
        :body
        (helm-projectile-switch-project)
        (split-window-right-and-focus)
        (split-window-below-and-focus)
        (multi-term) ;; launch shell
        (treemacs-select-window) ;; fire up file manager
        )
    #+END_SRC

    now restart emacs and press *SPC l o* then select *@coding*

  + see instant documentation about a function
    if you want to know what a specific function does just navigate your cursor on it
    and press *Shift K*

**** info
**** tips

** programming tools
*** make
**** one Makefile for everything :tools:make:programming:
:PROPERTIES:
:EXPORT_FILE_NAME: one-makefile-for-everything
:HUGO_BASE_DIR: ~/txt/blog/
:HUGO_SECTION: en/posts
:EXPORT_AUTHOR: savolla
:END:
here! you found it! this is one single Makefile that fits all projects with this file structure:

#+begin_src txt
project /
├── include
├── build
├── lib
├── obj
├── src
├── test
├── main.c
└── Makefile
#+end_src

#+BEGIN_SRC makefile
TARGET_EXEC ?= a.out

BUILD_DIR ?= ./build
SRC_DIRS ?= ./src

SRCS := $(shell find $(SRC_DIRS) -name *.cpp -or -name *.c -or -name *.s)
OBJS := $(SRCS:%=$(BUILD_DIR)/%.o)
DEPS := $(OBJS:.o=.d)

INC_DIRS := $(shell find $(SRC_DIRS) -type d)
INC_FLAGS := $(addprefix -I,$(INC_DIRS))

CPPFLAGS ?= $(INC_FLAGS) -MMD -MP

$(BUILD_DIR)/$(TARGET_EXEC): $(OBJS)
$(CC) $(OBJS) -o $@ $(LDFLAGS)

# assembly
$(BUILD_DIR)/%.s.o: %.s
$(MKDIR_P) $(dir $@)
$(AS) $(ASFLAGS) -c $< -o $@

# c source
$(BUILD_DIR)/%.c.o: %.c
$(MKDIR_P) $(dir $@)
$(CC) $(CPPFLAGS) $(CFLAGS) -c $< -o $@

# c++ source
$(BUILD_DIR)/%.cpp.o: %.cpp
$(MKDIR_P) $(dir $@)
$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c $< -o $@


.PHONY: clean

clean:
$(RM) -r $(BUILD_DIR)

-include $(DEPS)

MKDIR_P ?= mkdir -p
#+END_SRC
*** microsoft SQL Server
**** how to
***** create more than one primary keys in a table
this technique is called *clustered primary key*
#+begin_src sql
CREATE TABLE [dbo].[StudentCourse]
(
    [StudentId] INT NOT NULL,
    [CourseId] INT NOT NULL,
    PRIMARY KEY CLUSTERED ("StudentId","CourseId"),
    CONSTRAINT [FK_StudentCourse_Course] FOREIGN KEY ([CourseId]) REFERENCES [Course]([CourseId]),
    CONSTRAINT [FK_StudentCourse_Student] FOREIGN KEY ([StudentId]) REFERENCES [Student]([StudentId])
)
#+end_src

*** github
**** how to
***** search code in Github :howto:tools:git:
:PROPERTIES:
:EXPORT_FILE_NAME: search-code-in-github
:HUGO_BASE_DIR: ~/txt/blog/
:HUGO_SECTION: en/posts
:EXPORT_AUTHOR: savolla
:END:
1. for example I'm searching for "setq" keyword which exists in ".doom.d" directory, file is called "config.el" and is written in "Emacs Lisp" language
2. go to [[https://www.github.com/search][github search]]
3. search for the following string
   #+begin_src txt
setq extension:el path:.doom.d filename:config.el language:"Emacs Lisp" extension:.el
   #+end_src
*** hugo
this is a static website generator
**** what is
+ draft: this is a parameter which determines the post state. if draft is =true= then the post will not be shown to users

**** how to
***** get started
1. install first
   #+begin_src sh
   sudo pacman -S hugo
   #+end_src
2. create a new site directory
   #+begin_src sh
   hugo new site $YOUR_SITE_NAME
   #+end_src
3. download a theme from [[https://themes.gohugo.io/][here]].
   #+begin_src sh
   cd $YOUR_SITE_NAME
   git clone https://github.com/vaga/hugo-theme-m10c.git themes/m10c
   #+end_src
4. start the server to run your site
   #+begin_src sh
   cd $YOUR_SITE_NAME
   hugo server
   #+end_src
   find the localhost address and port in the output and open this url in browser. this port number is usualy *1313*
5. open in browser
   #+begin_src sh
   $YOUR_BROSWER http://localholt:$PORT_NUMBER
   #+end_src
***** embed your telegram account
1. fire up your *telegram*
2. go to *settings*
3. click on your *username* (it has '@' at the beginning)
4. at the bottom of the menu, you will see a link like;
   #+begin_quote
https://t.me/YOUR_USERNAME
   #+end_quote
5. take this link and add to your website by following your theme's *social settings*

**** examples
***** config.toml file
#+begin_src toml
baseURL = "http://example.org/"
languageCode = "en-us"
DefaultContentLanguage = "en"
title = "Meghna"
theme = "meghna-hugo"
summaryLength = 10

[taxonomies]
  author = "author"
  category = "categories"
  tag = "tags"

# Menu
[menu]
    [[menu.nav]]
    name = "About Us"
    URL = "about"
    weight = 2

    [[menu.nav]]
    name = "Service"
    URL = "services"
    weight = 3

    [[menu.nav]]
    name = "Portfolio"
    URL = "portfolio"
    weight = 4

    [[menu.nav]]
    name = "Team"
    URL = "our-team"
    weight = 5

    [[menu.nav]]
    name = "Pricing"
    URL = "pricing"
    weight = 6

    [[menu.nav]]
    name = "Blog"
    URL = "blog"
    weight = 7

    [[menu.nav]]
    name = "Contact"
    URL = "contact-us"
    weight = 8

# Site params
[params]
home= "Home"
logo = "images/logo.png"
gmapAPI = "https://maps.googleapis.com/maps/api/js?key=AIzaSyCcABaamniA6OL5YvYSpB3pFMNrXwXnLwU&libraries=places"
# Meta data
description = "Responsive Multipurpose Parallax HTML5 Template"
author = "Themefisher"
# Google Analitycs
googleAnalitycsID = "Your ID"
custom_css = ["css/custom.css"]

    # Banner Section
    [params.banner]
    enable = true
    bgImage = "images/slider/hero-area.jpg"
    icon = "tf-ion-play"
    heading = "Experience the new reality"
    content= "Lorem ipsum dolor sit amet consectetur adipisicing elit. Fugit, excepturi. At recusandae sit perferendis autem,iste tempora nostrum numquam sapiente!"
    btn = true
    btnText="Explore Us"
    btnURL="#services"

    # call to action
    [params.cta]
    enable = true
    title = "Great Design & Incredible Features"
    content = "Lorem ipsum dolor sit amet consectetur adipisicing elit. Officiis tenetur odio impedit incidunt? Omnis accusantium ea reiciendis, fugit commodi nostrum."
    btnURL = "#"
    btnText = "Start a project with us"

    # counter
    [params.counter]
    enable = true
    bgImage = "images/backgrounds/bg-1.jpg"
        [[params.counter.counterItem]]
        title = "Happy Clients"
        icon = "tf-ion-android-happy"
        count = "320"

        [[params.counter.counterItem]]
        title = "Projects completed"
        icon = "tf-ion-archive"
        count = "565"

        [[params.counter.counterItem]]
        title = "Positive feedback"
        icon = "tf-ion-thumbsup"
        count = "95"

        [[params.counter.counterItem]]
        title = "Cups of Coffee"
        icon = "tf-ion-coffee"
        count = "2500"

    # footer
    [params.footer]
        copyright = "Themefisher Team"
        copyrightURL = "http://www.themefisher.com"

        # social Icons
        [[params.footer.socialIcon]]
        icon = "tf-ion-social-facebook"
        url = "#"

        [[params.footer.socialIcon]]
        icon = "tf-ion-social-twitter"
        url = "#"

        [[params.footer.socialIcon]]
        icon = "tf-ion-social-google-outline"
        url = "#"

        [[params.footer.socialIcon]]
        icon = "tf-ion-social-youtube"
        url = "#"

        [[params.footer.socialIcon]]
        icon = "tf-ion-social-linkedin"
        url = "#"

        [[params.footer.socialIcon]]
        icon = "tf-ion-social-dribbble-outline"
        url = "#"

        [[params.footer.socialIcon]]
        icon = "tf-ion-social-pinterest-outline"
        url = "#"
#+end_src
*** docker
**** concepts
**** tips
**** facts
**** how to
**** problems & solutions
*** plantuml
**** concepts
**** tips
**** facts
**** how to
***** create a basic class diagram
1. use "results output" to show image result
  #+begin_src plantuml :results output
  @startuml
  class A {
      ...
      method1();
      method2();
  }
  class B {
      ...
      method3();
      method4();
  }
  A -> B
  @enduml
#+end_src
***** draw horizontal lines and vertical lines
1. use =->= for horizontal line drawings
2. use =-->= for vertical lines
***** avoid diagonal relation lines
add the following line under @startuml
#+begin_src plantuml
@startuml
skinparam linetype ortho
@enduml
#+end_src
***** increase output image size
add the following line under @startuml
#+begin_src plantuml
@startuml
skinparam dpi 300
@enduml
#+end_src
**** problems & solutions
*** pip
python package manager
**** how to
** command line utility
*** imagemagick
**** how to
***** resize an image (ignore aspect ratio)
#+BEGIN_SRC sh
convert example.png -resize 200x100 example.png
#+END_SRC
***** resize an image (respect aspect ratio)
#+BEGIN_SRC sh
convert example.png -resize %50 example.png
#+END_SRC
***** convert between formats
#+BEGIN_SRC sh
convert howtogeek.png howtogeek.jpg
#+END_SRC
***** rotate an image
#+BEGIN_SRC sh
convert howtogeek.jpg -rotate 90 howtogeek-rotated.jpg
#+END_SRC
***** negate an image
#+BEGIN_SRC sh
convert splash.png -negate splash.png
#+END_SRC
*** vboxmanage
**** how to
***** start a vm
#+begin_src sh
vboxmanage startvm win10
#+end_src
***** take a snapshot of a vm
#+begin_src sh
vboxmanage snapshot win10 take $NAME
#+end_src
***** restore snapshot
#+begin_src sh
vboxmanage snapshot win10 restore $NAME
#+end_src
*** bc
**** how to
***** use bc
#+begin_src sh
echo "1+1" | bc # outputs 2
#+end_src
*** gpg :tools:howto:gpg:
:PROPERTIES:
:EXPORT_FILE_NAME: what-is-gpg
:HUGO_BASE_DIR: ~/txt/blog/
:HUGO_SECTION: en/posts
:EXPORT_TITLE: what is gpg
:EXPORT_AUTHOR: savolla
:END:
+ also called *gnu privacy guard*
+ this is a key which helps to encrypt and decript files
+ there are 2 types of gpg keys;
1. private : unlocks everything you lock with that
2. public : you send to other people
+ gpg keys _expire_ ! so you need to generate them once or twice a year
**** how to
***** generate a gpg key
1. first generate personal key:
   #+BEGIN_SRC sh
gpg --full-gen-key
   #+END_SRC
2. choose *RSA and RSA*
3. choose *4096* for maximum security
4. choose *y = 1* to make the key expire in one year
5. enter your *real name and surname*
6. enter your *email*
7. confirm
8. enter a password. this is the password of your key. _DON'T FORGET IT_

***** encrypt files with gpg
1. navigate to directory you want to encrypt (here I generate a random file)
   #+BEGIN_SRC sh
echo "secret message" > ~/secret-file.txt
   #+END_SRC

2. encrypt the file
   #+BEGIN_SRC sh
# -r : recepient (in this case me)
# -e : file to encrypt
gpg -r your_mail@provider.com -e secret-file.txt
   #+END_SRC
   after this command, a file with *gpg* extension will be created. so now you can put this file (*secret-file.txt.gpg*) on the internet and no one will know what it is

3. remove the original file (optional)
   + basic remove
   #+BEGIN_SRC sh
rm secret-file.txt
   #+END_SRC

   + deep remove (more secure)
   #+BEGIN_SRC sh
shred -u secret-file.txt
   #+END_SRC

***** decrypt files with gpg
1. decrypt command
   #+BEGIN_SRC sh
gpg -d secret-file.txt
   #+END_SRC
2. then enter the password of your *gpg key*. the password you entered while [[generate a gpg key][generating]] the key
*** git
**** how to
***** undo the "git add"
#+begin_src sh
git reset $YOUR_FILE
#+end_src
***** control a repository from outside
1. use *--git-dir=* option
2. specify the *.git* folder of your project
   #+begin_src sh
   git --git-dir=$HOME/path/to/.git
   #+end_src
3. you can now issue normal git commands after that string like:
   #+begin_src sh
   git --git-dir=$HOME/path/to/.git add -u
   git --git-dir=$HOME/path/to/.git commit -m "initial"
   #+end_src
***** store your credentials for automatic pushes
#+begin_quote
this is not secure! your password and username will be stored inside *.git* directory in *planetext*. enyone on your PC will have access to them. you've been warned!
#+end_quote

1. go to your repository
   #+begin_src sh
   cd $YOUR_REPO
   #+end_src
2. make some changes
3. modify the *git config* for password and username storing
   #+begin_src sh
   git config --global credential.helper store
   #+end_src
4. commit and push your changes
   #+begin_src sh
   git commit -m "username and password adjustment"
   git push -u origin $YOUR_BRANCH
   #+end_src
5. now the git utility will ask you *username* and *password*. enter those and you are good to go

after this operation, git won't ask for username and password for this repository. this is not a global modification btw. you have to do this for every repo
***** switch to specific commit
useful if you want to go back to the last checkpoint in your project. let's say you commited your project when it was working without problems. you code a little bit more and bam.. it's not working now.. insted of fixing bugs, you might go back in git commit history
1. get the last commit's *id*
   #+begin_src sh
git log
   #+end_src
2. go back to last commit
   #+begin_src sh
git reset --hard $COMMIT_ID
   #+end_src
now all the local changes you made will be lost
*** stow
restores dotfiles from a directory
*** youtube-dl
**** how to
***** download video with best quality
#+begin_src sh
youtube-dl -f 22 $VIDEO_LINK
#+end_src
***** download a playlist
#+begin_src sh
youtube-dl -cio -f 22 '%(autonumber)s-%(title)s.%(ext)s' $VIDEO_LINK
#+end_src
*** rofi
program launcher and more
**** how to
***** change theme
#+begin_src sh
rofi-theme-selector
#+end_src
*** find
**** how to
***** search more than one file names
1. use *-o* parameter for *or*
#+begin_src sh
find ~/lib* -type f -name '*.pdf' -o -name '*.epub'
#+end_src
*** objdump
**** how to
***** display only executable sections
#+BEGIN_SRC sh
objdump -d <BINARY>
#+END_SRC
***** display all sections
#+BEGIN_SRC sh
objdump -D <BINARY>
#+END_SRC
***** display with source code
- this requires =-g= option when compiling with *gdb*
#+BEGIN_SRC sh
objdump -S <BINARY>
#+END_SRC
***** switch to intel syntax
#+BEGIN_SRC sh
objdump -M intel -[d|D] <BINARY>
#+END_SRC
***** display assembly in 32-bit layout
#+BEGIN_SRC sh
objdump -M i386,intel -[d|D] <BINARY>
#+END_SRC
*** nasm
**** how to
***** make binary executable
#+BEGIN_SRC sh
nasm -f bin -o test <CODE>.asm #
#+END_SRC
***** make elf executable
#+BEGIN_SRC sh
nasm -f elf -o test <CODE>.asm #
#+END_SRC
*** radare2
:PROPERTIES:
:EXPORT_FILE_NAME: radare-notes
:EXPORT_TITLE: radare notes
:HUGO_BASE_DIR: ~/txt/blog/
:HUGO_SECTION: en/posts
:EXPORT_AUTHOR: savolla
:END:
**** key bindings
***** normal mode

#+BEGIN_SRC sh
V               # enter visual mode and show hexdump view
aaa             # analyse the binary. unlocks other functions. do this first you open up a binary
aaaa            # experimnetal analysis. might take more time for huge binaries
afl             # see all funcitons (also called symbols) in the binary
afll            # really cool color coded function list
s <FUNCTION>    # seek to <FUNCTION>
ii              # show imports don't forget to analyse first
iS              # show sections in memory
is              # show all symbols including global, local variables
iz              # show ascii strings
iI              # general binary information
#+END_SRC

**** visual mode

#+BEGIN_SRC sh
p               # disassembler view
pp              # debuggin view
ppp             # byte distribution view
pppp            # byte string view for copying in C or Pyhton
n               # seek to next function
N               # seek to previous funciton
#+END_SRC

**** how to

+ jump to a function from *debug* or *disassembler* view
   1. use j/k keys to navigate on ~call~ instruction
   2. when call instruction is on the top press ~<ENTER>~ key
   3. hit ~u~ to come back

+ see *hex dump* of a function from *disassembler* view
   1. navigate to call just like you do for jumping to funciton
   2. press ~<Shift> p~
   3. come back with ~p~

+ see where a specific function is called across the binary using ~xref~
   1. from *visual mode*
     - seek to the function you want to see where it's called
     - press ~<ENTER>~ key
     - do ~:axt~
   2. from *normal mode*
     - ~s <FUNCTION*NAME>~
     - ~axt~
     this iformation can also be seen from *visual mode* above function name. also if you want to
     see ~jumps~ from a function. use ~axf~

+ ~patch~ a binary
   1. ~r2 -w <BINARY>~ open the binary with *write* permissions
   2. ~aaa~ analyze
   3. ~V~ enter visual mode
   4. ~p~ go to disassembler view
   5. ~:s <ADDRESS*TO*MODIFY>~ seek to address you want to modify
   6. ~:e asm.var.sub=false~ "[var*4h]" notations don't work when modifying. change to [rbp - 4]
   7. ~A~ enter modification mode and *write new instruction in assembly*
   8. hit ~<ENTER>~ two times and done
   9. additionally you can set `asm.var.sub` back to ~true~ if you want

+ how to ~debug~ a binary
   1. ~r2 -d <BINARY>~ open binary with debug mode
   2. ~V~ enter visual mode
   3. ~pp~ enter *disassembler* view
   4. additionally you can increase the *stack size* if you want with ~:e stack.size=256~
   5. ~<F8>~ next instruction
   6. ~<F7>~ step into call
   7. ~db <FUNCTION|ADDRESS>~ set brakepoint
   8. ~dc~ continue. hits the first breakpoint it encounters
   9. ~do~ reopens binary. saves breakpoints so you don't have to set them everytime
   10. in case you lost hit ~.~ to come back to *ip*(instruction pointer)
   11. ~dsf~ step until end of frame. this is handy when you accidentally step into a function

**** info
1. most *visual mode* keys have a *command* equivalent
2. to show *hex dump* in non-visual mode use +*px <BYTE*AMOUNT>**
3. most function won't work in radare2 until you analyze the binary. use +*aaa** and *aaaa* for experimental analysis.
4. you can use *normal mode* commands in *visual mode* as well. use +*:** when you wanna run some r2 commands
5. with +*iI** some important information like *nx*(non-executable stack), *canary*, *pic*(position independent code) can be seen
6. if *pic* is true then the file will randomize *base address* for every run
7. use *<COMMAND>~..* to pipe output to *less* like shell

**** tips
1. always use ~-A~ argument when opening a binary with radare. so you don't have to do
   ~aaa~ everytime. ~-AA~ also can be used bug takes long time on huge binaries

*** mpv
**** key bindings
**** how to
1. play youtube videos with only audio
   #+BEGIN_SRC sh
   mpv -vo=null $VIDEO_URL
   #+END_SRC
**** info
1. you can play videos from youtube with only audio (see: hot to 1)
**** tips
*** pacman
**** how to
***** how to see only AUR packages I've installed
#+BEGIN_SRC bash
pacman -Qm
#+END_SRC
*** gcc
**** how to
***** save .i, .o and .s files while compiling
#+begin_src sh
gcc -save-temps -o your_program your_program.c
#+end_src
** hardware
*** CASIO fx-991ex
**** how to
***** solve and equation for x
1. enter an equation. for example:
/x + 7 = 10/
2. press: *SHIFT CALC*
you will see x=some_value. don't worry. this is just x with previous stored value
3. press *=*
now you see the value for x
***** take percentage of a number
/$NUMBER * $percentage %/

** retroarch
*** facts
**** best cores for specific platforms
+ *snes* : bsnes-hd beta OR 2005
+ *n64*: mupen64plus-next
+ *ps1*: epsxe
** famitracker
*** key bindings

#+BEGIN_SRC sh
<F1> # open documentation
<SPACE> # toggle record mode. write music
<Enter> # start over the song / stop the song
<F7> # start player
<F8> # stop player
<PageUp> # go up faster (4 moves at once)
<PageDown> # go down faster (4 moves at once)
<Home> # go to start of the frame
<End> # go to the end of the frame
<Ctrl> v # pastes selected notes and overwrites previous notes
<Ctrl> m # pastes selected notes but does not overwrite anything
#+END_SRC

*** how to
+ create sound
  1. *go to* toolbar and *click* on _instruments_
  2. *click* on _new instrument_
  3. *press* *<space>* to enter _edit mode_
  4. *click* on editor below
  5. *click* on first bar and press +*z**
  6. it will create a _C-3_ sound

+ selecting a group of notes and pressing *<Ctrl> <F1>* will _decrease_ notes by a _semitone_
+ selecting a group of notes and pressing *<Ctrl> <F2>* will _increase_ notes by a _semitone_
+ selecting a group of notes and pressing *<Ctrl> <F3>* will _decrease_ notes by an _octave_
+ selecting a group of notes and pressing *<Ctrl> <F4>* will _increase_ notes by an _octave_

*** info
+ each channel has 4 collumns. _note, instrument, volume, effect_ for example: _C-3 00 F 462_
+ Nintendo can use only 5 channels. _pulse1, pulse2, triangle, noice, DPSM_
+ keyboard keys from +*z** to **ç** can be used as piano keys
+ you can select region of notes with _mouse_ then _copy_ and _paste_ notes
+ pressing *<shift>* and _arrow keys_ will also select a region
** gimp
*** key bindings
*** how to
+ center the text
  1. press Q
  2. click image
  3. select text layer
  4. Layer/Crop to Content
  5. use Align options at left

+ add shadow to text
  1. write a text
  2. Layer/Light and Shadow/Drop Shadow
** unity
*** key bindings

~f~               : focus on an object
~q~               : toggle hand mode. helps to move around the level
~w~               : toggle move tool
~e~               : toggle rotate tool
~r~               : toggle resize tool
~t~               : toggle rectangle moving, resizing tool
~y~               : toggles multi mode. resize, rotate and move at the same time
~<CTRL> d~        : duplicate object. don't forget to select it first
~<SHIFT> <SPACE>~ : maximize game windows

*** how to

1. *focus* on an _object_

   + first way:
     - *select* _object_ from the _scene_
     - *press* ~f~

   + second way
     - *select* _object_ from _hierarchy menu_
     - *double click* on _object_
2. *set* object on _origin_
   - *select* _object_
   - *right click* on menu Inspector/Transform
   - *click* _reset_

3. *color* an *object*
   - *right click* on menu Project/Create/Material
   - *rename* it to something reasonable
   - *click* color bar next to *albedo*
   - *press* ~<ENTER>~ (optional for first time run. if you have tiling WM)
   - select your color
   - *drag* your _new skin_ on the object you want to color

4. add *rigid body* to an *object*
   - *select* the *object*
   - *go to* *inspector* menu
   - *click* *add component* below the menu
   - *click* Physics/Rigidbody

   you can test this future by giving a bit height to the object and randomly rotate it
   then press *play* button. you should see the object falls

5. *change* *sky color*
   - *click* on *main camera*
   - *click* Inspector/Camera/Skybox
   - *click* *solid color*
   - *select* *background color*

6. *add* a *script*
   - *right click* on *project* menu
   - *click* Create/C# Script
   - *write* your *code* inside script and *save*
   - *drag and drop* your *script* on target *object*

7. *change* _snapping_ behaviour
   - *go to* ~Edit/Snap Settings~
   - *change* x,y,z values

   now when you move any object by holding ~Ctrl~ key it's movement will be snappy
8. *create* an _object of objects_
   - *create* an object with simple cube, sphere etc. and rename it to "obj_child"
   - *press* ~Ctrl Shift n~ and a new _empty_ object will be created in _main menu_
   - *rename* it to "obj_parent"
   - *drag* _obj_child_ into _obj_parent_

   you can create a compound objects like _houses_ and easily *resize* and *move* them

*** info
1. Unity can be programmed by *C#* and *javascript*

2. when you move an object in editor it will move in very high resolution so later
   you will always need to set it's coordinates manualy. to prevent this hold
   ~Ctrl~ key, click on any axis of the object (x | y | z) then drag. it will move
   smoothly. snappy

3. you can create an _object of objects_. for example you created a *house* from
   basic elements like cubes. you can now make that house a *compound object*
   a.k.a. _object of objects_. see line 8 in _how to_ section

4. list of Menus:
   - =Hierarchy=: contains *game objects*, *camera*, *lighting*, *characters* etc.
   - =Inspector=: contains all the properties of selectred object from *Hierarchy* menu
   - =Project/Assets=: contains *backgrounds*, *sprites*, *weapon* *sprites*, *torches*,
     *rocks*, *trees*, *game scripts*, materials

   you should create a folder for every class in *Assests* section. for example create
   *sprites* folder and store them here. same thing for *scripts* and *materials*

5. *rigid body* component makes the object fall through gravity

6. *collider* component makes objects collide with other collider objects. collider
   object do not fall.

*** tips
1. you can *grab* the _game window_ and *place* it next to _scene_. and *move* the
   _camera_. it really helps while testing

2. you can think of *scenes* as *levels* in the game

3. [2D] if you want your character stay on the ground, add *collider* and *rigid body*
   to your character object. add *edge collider* to the top of your ground
** qemu-kvm
*** how
**** <<mount the qcow2 image>>
#+begin_src sh
qemu-nbd --connect=/dev/nbd0 /path/to/your/vm-image.qcow2
fdisk /dev/nbd0 -l
mount /dev/nbd0p1 /mnt/your/mountpoint/
#+end_src
**** <<delete snapshots of qcow2 image>>
#+begin_src sh
qemu-img snapshot -l $PATH_TO_IMAGE                 # list all your snapshots
qemu-img snapshot -d $SNAPTHOT_NAME $PATH_TO_IMAGE  # delete one of your snapshots
#+end_src
after that you
*** why
**** why qcow2 image size becomes bigger than the actual disk size?
because of those snapshots you took. You can [[delete snapshots of qcow2 image]] to reduce it's size.
*** what
*** when
*** where
*** who

* Concepts
** ORM
+ this is a technique that *takes the class* and converts it's properties into a database table
+ for example consider this class:
#+BEGIN_SRC python
class Human:
    id = 0
    name = ""
    surname = ""
    birthday = ""
#+END_SRC
this class will be converted to the *database table* called *Human*

| Id | name | surname | birthday |
|----+------+---------+----------|
|    |      |         |          |

+ Window's ORM technology is the *Entity Framework*

** MVC
+ Model, View and Controller
+ it's a *design pattern*
+ found in 1970
+ currently widely adopted in *Web Development*
+ examples of MVC frameworks;
  1. .Net Core
  2. Ruby on Rails
  3. Express
+ Model : contains all classes
+ Controller : instantiates classes from Model and returns them to View
+ View : represents Controller's results to the user
** Layered Architecture
+ this is a standard in software development
+ software must respond to variety of requirements. this can't be done if our software is coupled and messy. so this standard was developed. it makes software open to new requirements
+ 3 pillars of Layered Architecture;
  1. Data Layer (database)
  2. Business Layer (UML / Logic)
  3. Presentation Layer (UI / UX)
*** data layer
this layer is responsible for data transmission between business layer and database.
#+begin_src text

    +----+          +------+          +----------+
    | DB | <------> | Data | <------> | Business |
    +----+   data   | Layer|   data   | Layer    |
                    +------+          +----------+

#+end_src
this layer manages different kind of tables like /user tables/, /report tables/, /general application tables/

*** business layer
operates retrieved data from data layer. basic CRUD operations or other application spesific logic, permissions works there

*** presentation layer
how user sees the results from business layer. this includes some User Interface Design thingies. user interface might be;
1. desktop form application
2. web
3. console

** NoSQL
+ NoSQL = "Not Only SQL"
+ it's a database but;
  a. uses XML or JSON instead of tables
  b. stores data into RAM instead of harddisk
** Turing Completeness
** CMS
** EmbOS
** HAL
+ hardware abstraction layer: this is a separation line between *firmware* and *software*
   [[file:./images/screenshot-70.png]]
** Interface
** late binding
** LGTM :abbriviation:
looks good to me

* Linux
** how to
*** manage dotfiles
**** create dotfiles
1. initialize git
#+begin_src sh
git init --bare $HOME/.dotfiles
#+end_src

2. add alias to your .bashrc
#+begin_src sh
alias dotfiles="/usr/bin/git --git-dir=$HOME/.dotfiles/ --work-tree=$HOME"
#+end_src

3. don't show untracked files since they are too much
#+begin_src sh
cd ~/.dotfiles
git config status.showUntrackedFiles no
#+end_src

4. source the .bashrs
#+begin_src sh
source ~/.bashrc
#+end_src

5. add your dotfiles
#+begin_src sh
dotfiles add $YOUR_DOTFILE
#+end_src

6. commit
#+begin_src sh
dotfiles commit
#+end_src

7. create a repository called *dotfiles* on *github*

8. essentials
#+begin_src sh
dotfiles branch -M main
dotfiles remote add origin https://github.com/savolla/dotfiles.git
dotfiles push -u origin main
#+end_src

**** restore dotfiles on a new system

1. install *stow*
#+begin_src sh
sudo pacman -S stow
#+end_src

2. clone your dotfiles from github
#+begin_src sh
git clone https://github.com/savolla/dotfiles.git ~/.dotfiles
#+end_src

3. restore your dotfiles
#+begin_src sh
cd ~/.dotfiles
stow *
#+end_src

*** see lastly modified 5 files
#+begin_src sh
ls -tl | head -n 5
#+end_src
*** pause a program
this can be usefull when you want to pause a running script or a program
1. find the process id and assign it to a variable
   #+begin_src sh
   PROCESS_ID=$(ps aux | grep -i $YOUR_PROCESS | grep -v grep | awk '{ print $2 }')
   #+end_src
2. pause the process.
   #+begin_src sh
   kill -STOP $PROCESS_ID
   #+end_src
3. process will stop. now you can bring it back to live with:
   #+begin_src sh
   kill -CONT $PROCESS_ID
   #+end_src

**** I have a better idea
let's add two functions in /.bashrc/ !
1. open up =~/.bashrc= then add the following
   #+begin_src sh
pause() {
   PROCESS_ID=$(ps aux | grep -i $1 | grep -v grep | awk '{ print $2 }')
   kill -STOP $PROCESS_ID
}

cont() {
   PROCESS_ID=$(ps aux | grep -i $1 | grep -v grep | awk '{ print $2 }')
   kill -CONT $PROCESS_ID
}
   #+end_src

2. refresh your =.bashrc=
   #+begin_src sh
source ~/.bashrc
   #+end_src
*** unfuck subtitles
#+begin_src bash
iconv -f iso-8859-9 bozuk-encoding.srt > turkce-encoding.srt
#+end_src
*** find all font names in system
    #+BEGIN_SRC bash
    fc-list
    #+END_SRC

*** set time and date
   #+BEGIN_SRC bash
   date +%Y%m%d -s "20120418" # date
   date +%T -s "11:14:00" # time
   #+END_SRC

*** zip files
   #+BEGIN_SRC bash
   zip -r $ARCHIVE_NAME.zip $DIRECTORY_TO_ZIP
   #+END_SRC

*** sync clock with network or set system clock
   #+BEGIN_SRC bash
   pacman -S ntp # install the service first
   systemctl enable ntpd.service # enable the service
   timedatectl set-ntp 1 # update clock
   hwclock --systohc
   systemctl start ntpd # start the service
   #+END_SRC

*** add a directory to $PATH
**** temporary
#+BEGIN_SRC bash
PATH=$PATH:/path/to/directory
export PATH
#+END_SRC
**** permanent
add the temporary commands into .bashrc or .zshrc
* Project Journal
** Library Automation in C# .NET Form
+ :conclusion: it turns out that a .NET project can have multiple forms
+ :howto: to add a new form to aproject;
  1. right click solution root
  2. =Add=
  3. =new item=
  4. select =form (windows form)=
  5. click =add=
+ :log: i renamed my newly created form "crud_ogrenciler"
+ :conclusion: visual studio makes it simple for renaming stuff projectwise
+ :log: i copyed and pasted buttons from the first menu to newly created form. so the user will think he is still in the same menu
+ :log: changed names of both forms to "Library Automation"
+ :conclusion: when i add an element and press 't', it directly focuses to properties menu and changes the *text* field. so I don't need to find a property every time from properties menu. I'll try other characters now
+ :conclusion: it is not about 't'. when i select any element from the form and press any key, it changes it's text area. it must be button, label etc
+ :log: added a line seperator below buttons. so it will look like a toolbar
+ :howto: adding a line seperator;
  1. add a *Label* control to your form.
  2. set *Label* Text to empty.
  3. set *BorderStyle* to Fixed3D.
  4. set *AutoSize* to false.
  5. set *size* to 800,2
+ :log: after button placement is done, I'll need to display retriewed results from the database (student and book database) inside form. I found a tutorial [[https://www.youtube.com/watch?v=RRmdwqHKN7A][here]] for this operation
+ :conclusion: gridview element let's us to enter, edit and delete data by default. so maybe I won't need separate add, edit and delete buttons
+ I paused and stopped building the view layer. beause it is unclear if something is going to work as I expected or not. I started to build the database now. and i realised that I suck too much in desktop applications. I don't design a database in my life. so I need a tutorial..
+

* Books
** summaries
*** Cracking the Coding Interview :book:
:PROPERTIES:
:EXPORT_FILE_NAME: cracking-the-coding-interview-notes
:EXPORT_TITLE: *Cracking the Coding Interview* Notes
:HUGO_BASE_DIR: ~/txt/blog/
:HUGO_SECTION: en/posts
:EXPORT_AUTHOR: savolla
:END:
Bu post'da Türkçe olarak /Cracking the Coding Interview/ kitabının özetini çıkartıyorum. Ilk ve ikinci bölümleri ingilizce yazdım, dert etmeyin onları revize edip Türkçeleştireceğim. Bu kitapta, iş başvurularında dikkat edilecek hususlar çok güzel anlatılmıştır. Ben de en azından özetini çıkararak önemli yerleri sizinle paylaşmaya karar verdim. İyi okumalar
[[file:./images/screenshot-56.png]]
**** Bölüm 1
+ recruiters look for the following;
  - analytical skills
    a. how *confidently* you solved the problem
    b. how *optimal* was your solution
    c. how *fast* you are
    d. how *efficient* was your algorithm
  - coding skills
    a. how *clean* your code is
    b. how *good* your *style* was
    c. did you *handle errors* or not
  - computer science knowledge. do you have *strong foundation* or not
  - did you make *challanging* / *interesting* projects before or not
  - do you *communicate well* or not
+ having knowledge of data structures and algorithms is really important and positively corelates with being a good developer
+ the reason behind *whiteboard coding* is that recruiters want you to focus on _actual problem solving_ instead of struggling in *restricted* computer environment when compilers spit errors all over the place. the code you write does not need to be perfect and it's okay if it contains some syntactical errors. just show to the interviewer how you approach to the problem and write an acceptable code
+ companies usually follow a pattern when selecting interview questions. there are two types of questions;
  1. algorithm questions
  2. technology questions (do you have experience with techonology X?)
+ interviewers always compare your performance to other's that came before and after you. even if you think that you performed well, a japanese hacker who came before you can change all the game. it's all about luck m8
+ don't think that you've been rejected immediately if you don't get response in 2-3 days. your interviewer might still work on your and other assessments. be patient and calm
+ if you've been rejected but really want that job you must wait for at least *6 months* before re-application.
**** Bölüm 2
+ before face-to-face interview you always get a *screen* interview. this is actually a phone interview where skype or relative apps are used
+ coding and algorithms questions are asked during the screen interview. questions are hard as ones that asked in face-to-face interview
+ sometimes interviewer might give you a *homework* which you solve and send the code through e-mail. (rare case)
+ the most of the time questions are asked in real time and you try to solve them while interviewer watches (common case)
+ you do one or two screens before they take you to face-to-face arena

**** Bölüm 3
+ aşağıdaki maddelerde, bazı _değişken_ durumlar anlatılmıştır;

  - görüşmeciler (interviewer) çok tecrübeli ve uzun süre çalışan geliştiricileri, daha düşük standartlarda görüp algoritmik soruları daha kolay sorabilir. ne de olsa bu insanlar mezun olalı yıllar olmuştur ve görüşmeciler, onların paslandıklarının farkındadırlar

  - bazı şirketlerde de tam tersi olabilir. yani uzun süre çalışanların daha çok problem çözdüğünü ve bu konuda yıllar geçtikçe daha iyi olduklarını düşünürler ve yeni mezunlara göre daha zor sorabilirler

  - çoğu zaman tecrübeli kişilere *system tasarımı* soruları gelirken yeni mezun olanlar bu konuda çalşma yapmadıkları için (daha çok akademik derslere ağırlık verdiklerinden) genelde bu sorulardan kurtulabilirler

  - yeni mezunlara göre tecrübelilerin, sorulara çok daha ayrıntılı cevap vermeleri beklenir. yani yeni mezunsak iş çok daha kolay. sadece algoritma sorularına çalışmamız (hackerrank, codewars) ve şu an zaman varken bol bol proje yapmamız yeterli olacaktır. tecrübelilerin iş bulması bizden daha zor

+ *skill atrophy*: bir yetenek ya da bilgi kullanılmadığında, o yeteneğin körelmesi anlamına gelir. bizim perspektifimizden bakıldığında, algoritma ve kodlama bir yetenektir ve asla atrofiye uğramaması gerekir

#+begin_quote
kitapta bu bölümde, SDET ve PM ile ilgili kariyer ve görüşme tavsiyeleri verilmiş. bu bizi şu anda ilgilendirmiyor.
#+end_quote

+ SDET: (software design engineer and tester) yazılımları test eden elemanlardır. bunların genelde normal bir developerdan daha iyi olması beklenir çünkü bu iş aynı zamanda *kalite kontrol*'ün yazılım camiasındaki karşılığıdır. bu yüzden bir SDET'in iş bulması demek, buraya kadar bahsi geçen pozisyonlardan daha çok çalışması gerek demek oluyor

+ PM (Product Manager): daha çok takım yönetimi yapan ve geliştiricilerin ürettiği yazılımın sorumluluğunu üstlenen elemandır. kod yazmaktan çok işin business tarafıyla ilgilenir

+ bir startup'a katılmak istiyorsan;

  - CV'de ilk göze çarpan kısmın, *yapılan projeler* olması gerekir. startup alım süreçlerinde CV incelemesi sırasında kişinin ne kadar *girişimci* ve programlama konusunda ne kadar *üretken* olduğu, bu kısımda göze çarpar. yani "ben şu dilleri biliyorum", "şu teknolojileri biliyorum"'a bakmazlar (genelde)

  - kesinlikle, bir startup görüşmecisiyle "samimi" ve "arkadaşça" iletişim kurulması gerekir. şirket henüz çok küçüktür ve insanlar yanlarında genelde takılabilecekleri insanlar arar. burada işin sosyal tarafı, iş tarafı kadar ağır basabilir

  - startup'daki projede kullanılan dil ile ilgili çok iyi bir derinliğe sahip ol çünkü sorular genelde dil spesifik gelir. (bir startup'a göre dil öğrenmek değil de bildiğimiz dilde iş yapan bir startup'a başvurmak çok daha efektif olur)

  - strtuplar tecrübe de isterler. buradan benim çıkarttığım, büyük şirketler, tecrübeli developerları görüşme esnasında çok hırpalarken, startuplarda genelde iş küçük olduğundan tecrübelileri havada kapıyor olabilirler. bu yüzden yeni mezun birinin büyük bir şirkette iş bulması, startup'da iş bulmasından daha kolaydır (?)

#+begin_quote
buradan sonrası, şirket içi iş görüşmelerinden ve interviewerlara tavsiyelerden bahsediyor. bizim için şu anlık önemli değil
#+end_quote
**** Bölüm 4
***** Tecrübe Kazanma Yolları
+ iyi bir tecrübe yoksa, iyi bir CV olmaz. iyi bir CV yoksa da kimse sizi iş görüşmesine çağırmaz
+ öğrenciler bakımından yukarıdaki sorunun çözümü;
  1. gerçek sorunlar çözen projeler yap
  2. staj yap
  3. startup ara
  4. boş zamanında bir proje yap,
  5. hackatonlara katıl,
  6. github'da open source bir projeye katkıda bulun
***** Iyi Bir CV Yazma Yolları
+ aslında şirketler birinde sadece şunları ararlar;
  1. *zeki misin?*
  2. *kod yazabilir misin?*
  CV'de yazanlar, bu iki şeyin kanıtı olmalıdır. şirketlere zeki ve çalışkan olduğunuzu katınladığınız anda işi kaparsınız
+ CV yazarken, odak noktası kesinlikle "zeki misin?" ve "kod yazabiliyor musun?" sorularına cevap vermeli. teknik olmayan şeyeri (hobi gibi) CV'ye eklemek çok akıllıca değildir
+ öğrencilerin ve 10 seneden az tecrübesi olan kişilerin CV'si _1 sayfa_ olmalıdır. data tecrübeliler _1.5 ya da 2 sayfa_ olmalıdır
+ uzun bir CV hiç bir zaman faydalı değildir çünkü iş verenler CV'ye bakarken en fazla 10 saniye harcarlar.
+ CV'ye sadece _sırasıyla_;
  1. en büyük projeleri
  2. en büyük tecrübeleri (iş tecrübesi, programlama dilleri)
  3. en büyük başarılarını
  yukarıdakilerden daha fazla şey yazmak, iş verenin sadece dikkatini dağıtır.
+ bazı işverenler, uzun CV gördüklerinde direk fırlatırlar..
+ CV her zaman İngilizce olmalıdır. her zaman ana dili ingilizce olan ya da bir tercumana okutup gramer ya da yazım yanlışlarınızı kontrol ettirin.
+ CV'de *yaş*, *cinsiyet*, *medeni durum* _belirtmeyin_. bunu yaparsanız, özellikle Amerika'da ters teper
****** Tecrübeler
+ eğer çok tecrübeliysen ve 1 sayfaya sığdıramıyorsan, 1 sayfaya sığdırmanın yollarını ara. ya da en önemsizleri ele. 1 sayfa *is the key*
+ tecrübe kısmında, iş geçmişinin tamamını yazmak önerilmez. çünkü çok iş değiştiren biri olarak görünürsün. onun yerine sadece en önemlileri yaz. her şirket isminin altına tek cümleyle ne yaptığını anlat. örnek bir cümle kalıbı;

  #+begin_quote
Y'yi yaparak X'i başardım
  #+end_quote
****** Projeler
+ proje kısmı, yaptığınız en büyük 2-4 projeden oluşmalı
+ projelerin açıklama kısmında;
  1. hangi dil ya da dillerle yazıldı
  2. hangi teknolojiler kullanıldı
  3. proje bir takım projesi mi? bir kurs yardımıyla mı yapıldı? kendin mi yaptın?
+ yukarıdaki her maddeye uyulması mecburi değildir. eğer maddeler sizi iyi gösteriyorsa o zaman belirtin.
+ 3. maddede, eğer projeyi bağımsız olarak tek başınıza yaptıysanız bunu belirtin. bu, iş verenler için takım projesi'nden daha değerlidir
+ çoğu insan CV'sine yaptığı bütün projeleri yazar ki bu iş verenleri yoran bir şey. maximum 4 proje yazın
****** Programlama Dilleri
+ bu güne kadar çalıştığınız bütün dilleri yazmaya kalkmayın
+ en iyi olduğunuz ve en iyi bildiğiniz dilleri yazın çünkü bir insan bütün dillerin tüm teknik detaylarını bilemez. abartılmış bir liste, iş verenin sizin hakkınızda pozitif düşünceler oluşturmaz
+ uzun dil listesine sahip adayları genelde iş görüşmesinde özellikle sınarlar ve normal bir listeye sahip birine nazaran çok daha zor sorular yöneltebilirler.
+ yetkinlik seviyenizi kabaca parantezler içinde belirtin. örnek bir liste;
  1. java (fluent)
  2. C++ (proficient)
  3. javascript (prior experience)
+ yetkinlik seviyesi için yıl yazmayın. 10 sene önce javascript öğrenip sadece bir kaç kere yazdıysanız bu gerçeten 10 yıllık bir tecrübe mi?
+ eğer bir sertifikanız varsa ve bu bir programlama diliyle alakalıysa kesinlikle CV'de buna yer vermeyin. iş verenler bu sertifikaları ciddiye almazlar
+ eğer bir dilin belli bir versiyonuyla ilgili tecrubeniz varsa mesela, C11, C99, Perl5 gibi, iş verenler kesinlikle bu tarz bir şeyi ciddiye almazlar. bunun yerine C ve Perl demek daha doğrudur. aslında bu tarz bir şey, yazılımcının dil konusunda ne kadar spesifik olduğunu gösterir ama çoğu şirket buna değer vermez
+ *stigma*: bir programlamma dilinin zaman içinde ön yargılara maruz kalıp değerini yitirmesidir. örnek olarak Visual Basic ve .NET teknolojileri. eğer .NET işine baş vurmuyorsanız, bu teknolojileri ve diğer stigma kazanmış (ön yargı kazanmış) dilleri ya da teknolojileri CV'de belirtmeye gerek yok
+ yukarıdaki maddeden yola çıkarak şirketlerin (özellikle Amerikadakilerin) önem verdikleri diller en az'dan en çoğa sıralanmıştır;

  1. C#, .NET, Visual Basic
  2. Ruby, Python, Javascript
  3. Java, C++

****** İş Başvurusuna Hazırlık Haritası
[[file:./images/screenshot-54.png]]
[[file:./images/screenshot-55.png]]

**** Bölüm 5
+ CV'de yazılan projeler incelenip genelde bu projelerle ilgili size soru yöneltilir. CV'yi inceleyen kişi, görüşmeden önce bu projelere ne kadar hakim olduğunuzu görmek için zor sorular hazırlayabilir.
+ CV'deki projeleri çok iyi çalşıp, şöyle bir tablo hazırlanması çok faydalı olacaktır;

  | yaygın soru             | proje1    | proje2    | proje3    |
  |-------------------------+-----------+-----------+-----------|
  | zorluklar/buglar        | --------- | --------- | --------- |
  | hatalar/başarısızlıklar | --------- | --------- | --------- |
  | keyif alınan taraflar   | --------- | --------- | --------- |
  | liderlik                | --------- | --------- | --------- |
  | çatışmalar (takım ise)  | --------- | --------- | --------- |
  | neyi farklı yapardın    | --------- | --------- | --------- |

+ bu tabloyu doldurup iyice çalış. iş veren projeler hakkında soru sordukça burda yazdıklarını hatırla ve cevapla
+ size "zayıf yanlarınız" nelerdir diye sorduklarında gerçek bir zayıflık söyleyin. "çok çalışmak" gibi cevaplar çok ciddiye alınmaz ve dürüst olmadığınızı düşündürür.
+ zayıflıklarınızdan bahsederken aynı zamanda bu zayıflıklarla nasıl başa çıkmaya çalıştığınızı da anlatmanız gerekir. örnek;

  #+begin_quote
  yeni bir projeye başladığımda çok hızlı burn out olabiliyorum. başa çıkmak için pomodoro tekniğini kullanıyorum
  #+end_quote

  #+begin_quote
  yeni bir teknolojiyi öğrenirken, kendimi bu konuda sonuna kadar gitmem gerektiğine inandırıyorum. bundan dolayı teknolojiye öğrenmeye odaklanmak yerine, kendimi en iyi kaynağı araştırmaya zaman harcarken bulabiliyorum. Bu konuda tecrübe kazandığım için artık çoğu kez yaptığım yanlışın farkına varabiliyorum
  #+end_quote

***** Interviewer'a Yöneltilebilecek Sorular
+ interviewer size soru sormanıza izin verebilir. bir iş görüşmesinde, 3 tip önemli soru çeşidi vardır;
****** Hakiki Sorular
cevaplarını gerçekten bilmek istediğiniz sorulardır
#+begin_quote
şirkette, geliştirici, tester ve yönetici dengesi nasıl? takımda proje planlaması nasıl yapılıyor?
#+end_quote
#+begin_quote
peki siz bu şirkete nasıl geldiniz? genelde bu çalışma ortamında sizi en çok zorlayan ne oluyor?
#+end_quote

****** Teknik Sorular
bu sorular genelde şirkete başvurmadan önce bayağı bir araştırdığınızı anlatır
#+begin_quote
gördüğüm kadarıyla X teknolojisini kullanıyorsunuz. bununla Y problemini nasıl çözüyorsunuz?
#+end_quote
#+begin_quote
yaptığınız ürün X teknolojisi yerine neden Y'yi seçti? Y'nin A,B,C konularında avantajları olduğunu biliyorum ancak diğer şirketler Y'yi D sorunu yüzünden kullanmıyorlar
#+end_quote

****** Çalışkanlık Yansıtan Sorular
bu tarz sorular iş verenin, sizin ne kadar azimli olduğunuzu görmesini ve şirket için faydalı olacağınızı düşünmesini sağlar
#+begin_quote
Yazılımın ölçeklenebilirliği konusunda kendimi geliştirmeye çalışıyorum. bu şirkette bu konuyla alakalı neler öğrenebilirim?
#+end_quote
#+begin_quote
Kullandığınız X teknolojisini daha önce hiç duymadım ancak çok ilginç bir yönteme benziyor. Nasıl çalıştığından biraz bahseder misiniz?
#+end_quote

***** Dikkat edilmesi gereken hususlar
+ projelerle ilgili konuşurken ya da sorular yöneltirken asla ama asla *kibirli* görünme. Kendini her zaman bir çaylakmışçasına *alçak gönüllü* ve *saygılı* olarak göster. /(genel olarak öyle ol zaten)/
+ görüşmeciler bu tarz çok insan ile karşılaştıklarından, artık insan sarrafı olma yolunda ilerliyorlardır. en ufak bir kibir belirtisinde çizerler
+ soruları cevaplarken, karşınızdakini detaya boğmayın. çok önemli noktalara değinin ve daha fazla detay gerektiren bir konuda, karşınızdakinden izin alıp öyle devam etmeye özen gösterin. çünkü gelen kişinin, teknik detaylardan ne kadar anladığını ya da duymaktan hoşlanıp hoşlanmadığını bilemezsiniz.
+ takım projesinde yer aldıysanız, takımın başarılarını anlatmak yerine kendinizin bu takımdaki başarılarınızdan bahsedin. çünkü takım ile ilgili konuşmalarınızda, sizin ne yaptığınız ile ilgili bir fikir oluşmaz
+ "kendininden biraz bahseder misiniz?" tarzı bir soru geldiğinde kronolojik sıraya gitmeye dikkat edin ve sırasıyla şunlardan bahsedin;
  1. Şu anda bir yerde çalışıyorsanız rol belirterek söze girin
  2. hangi okulda okudun ve hangi bölüm
  3. stajlar
  4. okuldan sonra ne yaptın
  5. iş dışında yaptığın projeler/çalışmalar
  6. şu anda neden burda olduğunu anlatarak toparla bitir
  hobilerden bahsetmek istersen bunu 5. maddede belirt ancak hobilerden bahsetmek bazen tehlikeli olabilir. dikkat et

**** Bölüm 6
***** Big O
+ içini dışını bilmezsen, kötü gözle bakarlar
+
*** Object-Oriented Analysis and Design with Applications :book:
**** Bölüm 5
+ 2 tip UML diyagramı vardır;
  1. Structured Diyagramlar
  2. Behavioral Diyagramlar
+ structural diyagramlar: sistemin mimarisini gösteirler. static diyagramlardır
+ structural diyagramlar;
   [[file:./images/screenshot-57.png]]
+ behavior diyagramlar: sisteme giren çıkan sinyal/event/mesaj gibi unsurların gösterilmesini amaçlar
+ behavior diyagramlara örnekler;
   [[file:./images/screenshot-58.png]]
+ UML diyagramları kesinlikle kabataslak olmalıdır. fazla detay, yazılımcıyı kısıtlar ve UML'i yapan mimarın aynı zamanda yazılım geliştirme tarafını da düşünmesine sebep olur ki bu çok mantıklı bir şey değildir
***** package diyagramları
+ package diyagramları şu işe yarar;
  1. ortak amaca hizmet eden sınıfları gruplamak
  2. ortak amaca yönelik usecase'leri gruplamak
  3. şemanın daha derli toplu ve anlaşılır görünmesini sağlamak
+ örnek bir package diyagramı;
  [[file:./images/screenshot-62.png]]
  - *FileHandling* ve *Graphics* sınıfları *Utilities* package'ının içine konulmuş. Utility de Java altına
  - en aşağıdaki ise aslında bir sınıftır. ancak görsel olarak package içinde görünmese de isminin arkasındakiler *package*'dır
+ eğer sınıflar birbirine bağımlıysa bu bağımlılıklar _kesikli oklarla_ gösterilir;
  [[file:./images/screenshot-60.png]]
+ genelde birbirinden kalıtım alan sınıfları, bir package altına koyarız
****** visibility
+ bir package içinde public ve private sınıflar bulunabilir. private sınıfın bir package içinde yer alması demek, aynı package içinde bulunan tüm sınıflar tarafından kullanılabileceği, ancak package dışından erişilemeyeceği anlamına gelir
+ aşağıda *cruncher* sınıfı private'dir ve aynı package içindeki tüm sınıflar onu görebilir
  [[file:./images/screenshot-63.png]]
****** relationship
+ diğer UML elemanları gibi package'ler de izole olarak bulunmazlar. onların da bir şekilde ilişki kurmaları ve kullanılmaları gerekir
+ package'larda 3 tip ilişki (relation) vardır;
  1. dependency (bağımlılık)
  2. generalization
  3. refinement
+ dependency ilikisi, örneğin balık, suya ihtiyaç duyar. susuz yaşayamaz. buna bağımlılık diyoruz.
+ package arası bağımlılıklar kesikli çizgi ile gösterilir;
  [[file:./images/screenshot-64.png]]
+ generalization ise aslında kalıtım olarak çevrilebilir. örneğin balık aslında bir hayvandır.
+ packagelar arası generalization, şu şekilde gösterilir;
  [[file:./images/screenshot-65.png]]
***** component diyagramları
+ bir component, tekrar kullanılabilir (reusable) bütün bir program, kütüphane ya da bir framework'dür
+ componentler, içlerinde benzer bir iş yapan sınıflar barındırırlar. bu sınıflar tabiki package'larla ayrılmış da olabilir
+ özetle packagelar sınıfları, componentler de package'ları içine alabilir. bazen componentler, içine başka componentler bile alabilirler
+ componentler birbirine bir interface ile bağlıdır
  [[file:./images/screenshot-66.png]]
+ yukarıda component'lerin sağ üstündeki işaretler, component simgesidir. componentleri şu şekilde *stereotype* kullanarak da ifade edebiliriz;
  [[file:./images/screenshot-67.png]]
+ componentler *interface*'ler ile birbirlerine bağlanmak zorundadırlar. bu sayede istendiği zaman birbirlerinden kolayca ayrılabilirler
+ interface'lerin bir başka güzel tarafı da, componentlerden biri, daha iyi bir component ile birleştirilebilir. (tak çıkar)
+ yarım ay şeklinde gösterilen interface, *required interface* adını alır
  [[file:./images/screenshot-68.png]]
+ top şeklinde olan ise *provided interface* adını alır
  [[file:./images/screenshot-69.png]]
+
*** Code Complete :book:
:PROPERTIES:
:EXPORT_FILE_NAME: code-complete-notes
:EXPORT_TITLE: Code Complete Notlarım
:HUGO_BASE_DIR: ~/txt/blog/
:HUGO_SECTION: en/posts
:EXPORT_AUTHOR: savolla
:END:
**** bölüm 1 - yazılım inşasına giriş
+ yazara göre, bu kitap, etrafa dağılmış bilginin bir yere toplanmış hali

+ *yazılım geliştirme* ve *programlama* aynı şey değildir

+ *yazılım inşası*, yazılım geliştirme alanındaki bazı konuları içinde barındıran özelleşmiş bir alt daldır. yazılım inşası'nın (construction) dokunuğu dallar:

  1. coding and debugging
  2. unit testing
  3. detailed design
  4. integration
  5. construction planning

+ construction terimi, *programlama* termine benzemektedir.

+ construction'ın yazılım konusunda yaptığı işler:

  1. kodun temelini oturtmak
  2. kodun nasıl test edileceğini belirlemek
  3. sınıfları tasarlama ve yazmak
  4. değişkenleri oluşturmak ve isimlendirmek
  5. kontrol yapılarının seçimi ve kod bloklarının organizasyonunu sağlamak
  6. unit test, integrasyon test ve debug yapmak
  7. varsa diğer takım üyelerinin kodunu incelemek ve kendi kodunun incelemesine izin vermek
  8. koda yorum satırı eklemek ve dikkatli bir şekilde organize etmek/formatlamak
  9. üçüncü parti yazılımları, koda entegre etme
  10. koda ince ayar yaparak daha hızlı çalışmasını ve daha az memory yemesini sağlamak

+ construction'ın dışında kalan alanlar

  1. yönetim
  2. gereksinim geliştirme
  3. yazılım mimarisi
  4. kullanıcı arayüzü tasarımı
  5. sistem testi

+ construction, boyuta bağlı olarak, bir yazılım projesinin %30 veya %80'ini kaplayabilir

+ mimari ve gereksinimler, construction'dan önce gerçekleşen şeylerdir. bu sayede construction çok daha hızlı ve verimli bir şekilde ilerler

+ kaynak kodu, construction evresinin bir ürünüdür. zamanla beraber, gereksinim ve dizayn dökümanları güncelliğini yitirse dahi kaynak kodu her zaman güncel kalır.

**** bölüm 2 - yazılım geliştirme metaforları
+ çok iyi anlamadığımız şeyleri bazen çok iyi bildiğimiz bir şeylerle ilişkilendirdiğimizde yani *metafor* kullandığımızda, olayı *modellemiş* oluruz ve daha iyi anlamış oluruz

+ kitapta yazılım geliştirme için kullanılan metafor ise *ev inşaatı*

+ mesela köpeğin için bir kulube yapmaya kalkarsak, ihtiyacımız olan sadece bir kaç tahta ve çivi. kulube bittiğinde eğer bir şeyleri yanlış yaptıysak, bu çok büyük bir sorun teşkil etmez. ya var olan kulubeyi alıp üzerinde oynamalar yaparak düzeltiriz ya da onun yerine yeni bir kulube yapabiliriz.

+ yukarıdaki metafor, yazdığımız küçük kodlar/projeler için de geçerlidir. program düzgün çalışmıyorsa ya üstünde oynama yapar düzeltmeye çalışırız ya da sil baştan yeni bir tane yazarız

+ daha büyük bir ev yapmak istediğimizde ise metaforu genişletmemiz gerekir:

  1. nasıl bir ev yapmak istiyoruz? : *problemi anlamak*
  2. mimar bir tasarım yapar : *yazılım mimari dizaynı*
  3. evin planının çıkarılması : *detaylı yazılım tasarımı*
  4. evin inşası : *yazılım tasarımının kodlanması*
  5. bahçınavlar, boyacılar gelip etrafı güzelleştirir: *optimizasyon*

**** Bölüm 3
- yazılım inşasından önce planlama ve dizayn çok önemli bir rol oynar

- Yazılım Geliştirme sacede _kod yazmak değildir_

- WISCA sendromu: "Why Isn't Sam Coding Anymore?"

- WIMP sendromu: "Why Isn't Mary Programming"

- Eğer patronun gerizekalıysa ve her hangi bir dizayn ya da mimariden yoksun bir biçimde kod yazmayı istiyorsa, eski bir projeyi aç ve yan pencerede dizayn ve mimarini yap. Bu sayede hem sen hem de gerizekalı patronun huzurlu bir şekilde hayatına devam eder

- hayat, etrafta daha iyi alternatifler varken cahil bir patronla çalışmak için çok kısa. işi bırak ve başka şirket bul

- bir yazılım geliştirme sürecine farklı bir bakış;
  a. mimar + requirements = *mimari*
  b. dizayner + mimary = *dizayn*
  c. programcı + dizayn = *program*

- yukarıda görüldüğü gibi, program, zincirin en sonundadır. Bu demek oluyor ki, iyi bir programın ortaya çıkması için dizayın iyi yapılması, dizaynın iyi yapılması için de mimarın işini iyi yapması gerekir. _yani aslında yazılımın kaliteli mimarın elindedir_

*** Dive Into Design Patterns :book:
**** Factory Pattern
*** Domain Driven Design :book:
**** Bölüm 0
+ yazılım'ı asıl karmaşık yapan şey kod ya da yanlış tasarım değildir. asıl karmaşaya neden olan, insanın kendi iş sistemidir. yazılım sadece bu iş sistemini yazılımlaştırıp otomatize etmeye yarar.
+ bu iş/meslek dallarına kısaca *domain* diyoruz
+ yazılımdaki karmaşanın azaltılması için asıl yapılması gereken şey, mevcut domain'in çok iyi modellenmesidir
+ bu kitap, karmaşık domainlerde yazılım geliştirmeye çalışan yazılımcılara bir kaynak şeklinde yazılmıştır. domainlere yaklaşırken, adım adım ne yapmaları gerektiği anlatılmıştır
**** Bölüm 1
*** Dive Into Refactoring :book:
**** Bölüm 1 : Code Smells
***** Bloaters
****** uzun methodlar
+ küçük methodlarla donatılan küçük classlar uzun yaşar
+ uzun method, istenmeyen _tekrar eden_ kodu içinde saklar
+ methodları ayrıştırmak demek, daha fazla method ve class oluşturmak demektir. bu ilk bakışta karmaşaya sebebiyet veren bir durum olarak görülebilir ancak tam tersidir
+ çok method demek çok *jmp* instructionı demek. performansı kötü etkiler ama farkına bile varamayacak kadar
******* belirtiler
- genel olarak 10 satırdan daha fazla olan metodlar bu gruba girer
******* çözüm
- kod aralarında *yorumlar* bu, methodun ayrıştırılabileceğini gösteren bir ipucudur
- yorum satırları genelde bize yapılan işi anlatmaya çalışır. bu yapılan işe _en anlamlı bir isim bul_ ve yeni methodun adı bu olsun
- if-else'ler varsa hemen ayrı bir methoda aktar ve methodun adını *isA* , *isB* gibi yap
- aynı şekilde döngüler varsa da hemen ayrı bir methoda aktar
- eğer method parametreleri ve lokal değişkenler metodun ayrıştırılmasına müdahale ediyorlarsa o zaman şu refaktoring technique'lerini kullan;
  1. Replace Remp with Query
  2. Introduce Parameter Object
  3. Preserve Whole Object
****** uzun classlar
+ kendine verilen işten fazlasını yapan sınıflardır
+ sınıflar ilk etapta küçük başlarlar ancak zaman içinde yazılımın gelişmesiyle büyütler
+ büyük sınıflar, yazılımcıda *cognitive load*'a sebep olur
******* belirtiler
- çok _field_ ve _methodu_ olan sınıflar
******* çözüm
- önce methodları küçült. methodlar küçüldükçe hangi classlara ait olabilecekleri yavaş yavaş ortaya çıkar. bu olduğunda sınıf da istemsizce parçalara ayrılır
****** primitive obsession
- primitive tipler genelde gerçek tipleri simüle etmek için varlardır. gerçek tipler yerine kullanılmaları profesyoel alamda uygun değildir. onun yerine bir struct ya da sınıf oluşturmak daha profesyoneldir
- bu sorun düzeltildiği anda tipler arası karmaşa ortadan kalkmış olur ve özellikle method parametrelerinin aslında ne olduğuna dair iyi bir fikir oluşacağı için kodun okunurluğu artırılmış olur
******* belirtiler
- primitive tiplerin (int, string, double gibi), basit işler için var olabilecek tiplerin yerine kullanılması. örneğin;
  1. para birimi yerine *double*
  2. özel stringler (yorum, telefon numarası gibi) yerine *string*
- _global sabitlerin_ kullanılması
******* sebepler
- bazen yazılımcılar, örneğin bir para birimini ifade etmek için ayrı bir class/struct oluşturmak yerine kolaya kaçıp direk *double* primitive tipi kullanırlar
******* çözüm
- primitive tipler yerine objeler kullanın;
  #+begin_src c++
  double money;
  #+end_src
  yerine =Money= class/struct'ı oluşturun
  #+begin_src c++
  Money money;
  #+end_src
- bir çok primitive field'dan oluşan sınıfınız varsa (boy, para, kuruş gibi) bu tiplere uygun birer struct oluşturmak hem kodun okunurluğunu kolaylaştırır hem de kötü kokuları giderir
- primitive obsession ile savaşmada kullanılan refactoring teknikleri;
  1. Replace Data Value with Object
  2. Introduce Parameter Object
  3. Preserve Whole Object
  4. Replace Type Code with Class
  5. Replace Type Code with Subclass
  6. Replace Type Code with State/Strategy
  7. Replace Array with Object

****** çok parametreli methodlar
******* sebepler
- bir method içinde birden fazla işlem yapılıyorsa her işlem için dışarıdan ayrıca parametre alınması gerekebilir. bu da method parametrelerinin artması anlamına gelir
******* belirtiler
- 4 parametreden fazla olan fonksiyon/metodlar
******* sonuçlar
- eğer parametreler genelde primitive tipler yerine class objeleri ise, sınıflar birbirine bağımlı hele gelir;
  #+begin_src cpp
  Person bloatedMethod( Money m, Salary s, Car c, Phone p );
  #+end_src
  yukarıdaki sınıf, diğer 5 sınıfa bağımlı hale geldi
******* çözüm
- uzun parametre alan bir method görüyorsak sorun uzun method olabilir
- method ayrışmasına rağmen hala uzun bir parametre listesi almaya devam ediyorsa, bu parametreleri içine alan _başka bir sınıf_ oluşturabiliriz. Ardından, methodumuza da bu yeni oluşan sınıfın objesini verebiliriz. UML örneği aşağıda verilmiştir
  - kötü kokan UML
    #+begin_src plantuml results: output
    skinparam linetype ortho
    class A {}
    class B {}
    class C {}
    class D {}
    class E {}
    class User {
       method(A,B,C,D,E)
    }
    User -up-> A
    User -up-> B
    User -up-> C
    User -up-> D
    User -up-> E
    #+end_src

    #+RESULTS:
    [[file:/tmp/babel-WSBkMf/plantuml-o74lIv.png]]

  - olması gereken
    #+begin_src plantuml results: output
    skinparam linetype ortho
    class A {}
    class B {}
    class C {}
    class D {}
    class E {}
    class P {
        A a
        B b
        C c
        D d
        E e
    }

    class User {
       method(P)
    }
    User -up-> P
    P -up-> A
    P -up-> B
    P -up-> C
    P -up-> D
    P -up-> E
    #+end_src

    #+RESULTS:
    [[file:/tmp/babel-WSBkMf/plantuml-SHJJia.png]]
- bu sorunu çözmede kullanılan refactoring teknikler;
  1. Replace Parameter with Method Call
  2. Preserve Whole Object
  3. Introduce Parameter Object

******* uyarılar
- sınıflar arası istenmeyen oranda bir *dependency* olacaksa methodları olduğu gibi bırakın (yukarıda verilen UML buna dahil. sadece örnek olsun diye vermiştim)
*** Operating Systems: From 0 to 1 :book:
**** Chapter 1 - 3
+ I annoteted the pdf file with the most important informations
+ *computer architecture* = *ISA* + *Computer Organization* + *hardware*
+ ISA has two types: *RISC* and *CISC*
+ Computer Organization has two types: *Von Neuman* and *Harward*
+ both _AMD_ and _Intel_ CPUs has the same ISA (x86) but has different Computer Org.

**** Chapter 4: x86 Assembly and C
+ *read* volue 2, section 1.3 in Intel Manual. _exclude 1.3.5 and 1.3.7_
+ normally x86 can address one byte at a time but it can also address more than one bytes in memory. it is called **Segment Addressin**. it helps to organize sections in memory. for example a program can keep its *code* and *segment* sections separated.
+ some of important exceptions are **PF**(page fault) and **GP**(general protection)
+ Using the *bin* format puts *nasm* by default into *16-bit* mode.  To enable 32-bit code to be generated, we must add this line at the be- ginning of an nasm source file: *bits 32*
+ in the *intel instruction reference manual* volume 2 chapter 3 every instruction is documented.
*** Clean Code
**** Naming
***** variable naming
1. is "accountList" a LinkedList?
2. use Pronnclbe nmes
3. useCamelCase
4. USE_ALL_CAPS_FOR_CONSTANTS_OR_GLOBALS
5. 1 != l
6. can't find name? use *Domain Term*
***** method naming
1. useCamelCase
2. use VERBS
3. isReturnedTrueOrFalse()
4. accessor ? "get"
5. mutator ? "set"
6. add() != add() && state() != state()
7. can't find name? use *Domain Term*
***** class naming
1. UsePascalCase
2. always use NOUNS
3. include Design Pattern names
4. can't find name? use *Domain Term*
***** interface naming
1. use 'I' prefix
2. UsePascalCase
3. can't find name? use *Domain Term*
*** Making Embedded Systems :book:
:PROPERTIES:
:EXPORT_FILE_NAME: making-embedded-systems-notes
:EXPORT_TITLE: Making Embedded Systems Notlarım
:HUGO_BASE_DIR: ~/txt/blog/
:HUGO_SECTION: en/posts
:EXPORT_AUTHOR: savolla
:END:
*Making Embedded Systems* Türkçe kitap özeti
[[file:./images/screenshot-84.png]]
**** Bölüm 0
- *microcontroller*: kendi içinde, RAM'i kod hafızası yani FLASH (ROM, EEPROM) ve bir işlemcisi olan bütün bir cihazdır
- *DSP*: özelleşmiş bir microcontroller'dır. ana amacı, gelen analog bir sinyali işleyip ilginç sonuçlar elde etmektir. Normal microcontrollerlardan farkı, matematiksel işlemleri çok daha hızlı yapabiliyor olmasıdır.
**** Bölüm 1
- *Gömülü Sistem*: tek bir amaç için tasarlanmış, içinde bir yazılım barındıran, genel amaçlı bir bilgisayara göre çok daha az işlem gücü ve hafızaya sahip cihazlara denir.
- gömülü sistemlerde, işlemciler normal bilgisayarların işlemcilerine göre daha yavaş çalışırlar ki güç tüketimi az olsun. RAM açısından da aynı şekilde daha zayıftır ki maliyeti daha az olsun.
- yazılımın da bu kısıtlı imkanlarda doğru bir şekilde çalışması gerekir. O kadar doğru çalışması gerekir ki örneğin bir kalp pilinde her hangi bir bug, ölümle sonuçlanabilir. Bir uçağın elektronik devresinde en ufak bir yazılım hatası, onca insanın ölümüne yol açabilir
***** Compilerlar, OOP ve Yazılım dilleri
- çoğu büyük MCU üreticisi, cross-compiler olarak GNU araçlarını kullanır
- gömülü yazılım çoğu kez C dilini destekler. C++ gibi diller kısmen desteklenir. Genelde cross-compilerlar C++ için çoklu kalıtım, templateleri vs desteklenmez
- Java için artan bir destek var ancak Java'yı destekleyen bir sistemin genelde büyük bir sistem olması gerekir. dar ve ucuz alanlarda C hala hüküm sürer
- kullanacağın dile takılma. dizayn ve mimari çok çok daha önemli
***** Gömülü Yazılım Geliştirmek
****** Debugging
- yazılımı başka bir platform için yazdığımızdan dolayı, yazılımı, kod yazdığımız bilgisayarda debug edemeyiz. Bunun için *cross debugger*'lar kullanılır
- cross debugger'ın çalışması için JTAG'e ihtiyacın var. Bu kendi başına bir cihaz ve fiyatı 500 lira civarında. ama platforma göre değişir. örneğin STM'in ST-Link diye onboard bir debuggerı var
- cross compiler senin bilgisayarında çalışıp, JTAG ile haberleşir. JTAG ise senin üstünde uğraştığın MCU'nun JTAG arayüzüne bağlanır. oradan debug yapar
- bir donanımın debugging desteklemesi, onu ekstra pahalı yapar. ayrıca debug işlemi genelde problemli olduğu için, donanımlar çok basit seviyede debugging desteklemektedirler
- kısaca işlemciler/mikrodenetleyiciler, debug destekler ancak öyle bir Java ya da C# debug ederkenki performans ve özellik beklememek gerek
- kod yazdığın PC ile hedef platform arasında debugger bağlantısı kuran alete, *emulator* denir. JTAG bunlardan biridir.
- çoğu gömülü sistem donanımı *printf* tabanlı debuggingi destekler. bazen kullanılmayan bir I/O portundana bir LED bağlayıp belli durumlarda bir işlevin gerçekleşip gerçekleşmediğini kontrol etmek için o LED yakıp söndürülür. bir emulator satın almak yerine bu tarz çözümler mevcuttur
- Yine de gömülü sistemleri debug etmek, her şeyin düzgün çalışacağı anlamına gelmez. bazı buglar vardır ki debugging işlemi bittikten sonra kendini gösterir...
****** Zorluklar
- gömülü alanda kısıtlayıcı nitelikler;
  1. RAM (memory)
  2. ROM (code space)
  3. CPU speed
  4. battery life
  5. çevre birimler (peripherals)
- üzerinde uğraştığın donanımı çok iyi bilmen gerek. çünkü eğer donanımın desteklemediği bir şeyi yaptırmaya çalışırsan, donanıma zarar verme ihtimalin var.

****** Zorlukların Üstesinden Gelmek
- sistemi modüllere böl
- modüller arasına *interface*'ler koy ki modüller birbirlerine bağlı kalıp *coupling*'i arttırmasın
- gömülü sistemlerde sistemi modüllere bölmek çok daha kolaydır. örneğin bir X sensörü Y haberleşme kanalından Z ile haberleşiyorsa, demek ki bunların hepsi farklı objelerdir yani farklı modüllere aittirler. sırasıyla X, Y ve Z diye 3 ayrı modül oluşturulabilir
- modüllere ayırmak'da kullanılan temel soru şu; "bu kısım kendi başına bağımsız bir donanım/protokol mü?". sorunun cevabı evet ise o parça için farklı modül oluşturulur
- modüller kendi başlarına test edilebilir. Böylelikle kod kalitesi ve "maintainabiliry" artmış olur
- modüllerin arasına interface koymayı unutma. direk *pound include* kötü fikir
- her zaman test ve dökümantasyon yaz
- kodu ilk zaman için küçük ve optimize yazmaya çalışma. donanımın kısıtlı olduğu bir alanda bu şekilde çalışmanın gerekli olduğu düşünülür ancak çoğu problem ve bug buralardan gelebilir. onun yerine şu adımları izle;
  1. çalışan basit bir kod yaz
  2. kodu test et
  3. dökümante et
  4. tüm testlerden geçtiyse, optimizasyon işlemine geç
  5. 2. adıma git
**** Bölüm 2
*** Programming Embedded Systems :book:
:PROPERTIES:
:EXPORT_FILE_NAME: programming-embedded-systems-notes
:EXPORT_TITLE: Programming Embedded Systems Notlarım
:HUGO_BASE_DIR: ~/txt/blog/
:HUGO_SECTION: en/posts
:EXPORT_AUTHOR: savolla
:END:
Programming Embedded Systems 1999'da yazılan 200 sayfalık bir kitaptır. Bir Gömülü Yazılım gelitirmek için adım adım nelerin yapılması gerektiğini anlatır. Bu da benim çıkardığım Türkçe Özet
[[file:./images/screenshot-87.png]]
**** Bölüm 1
***** Gömülü Sistem Nedir
- Gömülü sistemler genelde daha büyük bir sistemin parçası olurlar. örnek olarak bir araba içindeki sistemler; fren sistemi ya da hava yastığı sistemi için olan devrenin içindeki yazılım bir gömülü sistemdir
- Genel amaçlı bir bilgisayarın içinde de gömülü sistemler mevcuttur; klavye, mouse, hard drive, ses kartı. Bunların hepsi kendi başına içinde küçük yazılımlar olan tek başına gömülü sistemlerdir
***** Donanım
- Gömülü sistemlerin tarihi ilk olarak 1971'de Intel'in Japon bir firma için ürettiği 4004 mikroişlemcisi ile başlıyor. ilk mikroişlemcidir bu.
- işlemci gücü MIPS ile ölçülür (Millions of Instruction Per Second)
- işlemci gücünü etkileyen bir başka özellik de register boyutudur. 8-bit ya da 16-bit işlemcilerin register boyutları da sırasıyla 8 ve 16 bittir
- 8-bit işlemci, yalnızda 256 byte kadar RAM destekler çünkü \(2^8=256\)
- 16-bit işlemci ise 64KB RAM destekleyebilir: \(2^{16}=65536\) ise \(65536\div1024 = 64\)
- 32-bit, 4GB RAM
- 64-bit, 4PB ancak 64-bit sistemler çok fazla RAM desteklediği için şu anda dünyada bu kadar RAM'e sahip bir makine yok (mu acaba?). Bu yüzden çoğu CPU üreticisi adreslenebilecek miktarı 1 TB olarak ayarlayıp -ki hala çok yüksek RAM- bit sayısını 50 yaparlar; \(2^{50}\div1024^4=1TB\)
- 8-bit cihazların yaşam ömrü şaşırtıcı:
  [[file:./images/screenshot-85.png]]
- Dijital saatler gibi cihazlar ve buna benzer gömülü sistemler RAM'e gerek duymayıp, CPU'nun kendi registerlarını kullanabilir. Dijital saatler 8-bit CPU kullanabilir
- Oyun konsolu tasarlayan mühendisler, konsolun maliyetini ucuzlatmak adına, hafıza ve diğer pahalı birimleri dışardan takılabilir olarak üretirler. Bu sayede konsolun maliyeti düşerken, oyunların maliyeti yükselir. Bunun bir örneği Ateri Kasetlerinde görülür
***** Diller
- C dilinin yazılış amacı, *low level* bir dil oluşturmaktır
- C'nin gömülü sistemler için en avantajlı 2 yanı vardır;
  1. neredeyse her işlemci için kod üretebiliyor olması
  2. donanımla bu kadar kolay konuşabiliyor olması
- Assembly, C++, Ada, Rust, µPython, Java diğer Gömülü alanlarda kullanılan dillerdendir
- Assembly, donanımın tam kontrolünü ele alır, çok hızlı çalışır ancak kodu başka bir işlemciye port edemezsin. kod çok uzundur ve okuması zordur
- C++, C diline bir de Object Oriented özellikler ve bir çok Abstraction eklemiştir ve bu yazılım geliştirme açısından çok verimli bir dil olmasına neden olmuştur. Ancak bu özellikler, kodun çalışmasını kötü yönde etkilemiştir ve C kadar hızlı olamamasına sebep olmuştur. C++'a özgü özellikler, büyük projelerde iyi rol oynayabilir ancak örneğin bir dijital saat gibi basit bir gömülü sistemde çok da ihtiyaç yoktur
- Ada, Gömülü sistemlerde önemli bir dildir. C++ yerine kullanılabilecek bir dil olma niteliğindedir. Kullanım alanı daha çok Amerikan Savunma Sanaiinden dışarıya çıkamadığı için yine popülaritesini kaybeden şanssız dillerdendir
**** Bölüm 2
- Gömülü sistemlerde "hello world" programı, çoğu zaman bir LED'i 1 Hz hızında yakıp söndürmektir.

- *delay* fonksiyonlarında kullanılan sadece bir sayacı sıfıra kadar geriye sayan C kod yapısı şu şekilde kısaca kurulabilir;
  #+begin_src c
int i = 100;
while (i--);
  #+end_src

- basit bir LED yanıp söndürme programı;
  #+begin_src c
#define LED_GREEN 0x40
#define P2LTCH    0xFF5E
void delay( unsigned int nMilliseconds );
void toggleLed( unsigned char ledMask );

void main(void) {
    while (1) {
        toggleLed(LED_GREEN);
        delay(500);
    }
}

void delay( unsigned int nMilliseconds ) {
    #define CYCLES_PER_MS 260
    unsigned long nCycles = nMilliseconds * CYCLES_PER_MS;
    while (nCycles--);
}

void toggleLed( unsigned char ledMask ) {
    asm {
        mov dx, P2LTCH
        in al, dx
        mov ah, ledMask
        xor al, ah
        out dx, al
    }
}
  #+end_src

- Gömülü yazılımların, diğer saf yazılımlardan farkı, daima sonsuz bir döngü ile bitiyor olmasıdır

- Cihazlar ya resetlenene kadar ya da bozulana kadar çalışmaya devam ederler

**** Bölüm 3
- compiler, linker gibi toolların içinde bulunduğu paket halindekii programa, *toolchain* denir

- Malesef her platform için kullanılan toolchain farklılık gösterir. ARM için farklı, Atmel, Microchip için farklı toolchainler kurulması gerekir

- kaynak kodu, bir gömülü sistemde çalışabilir bir yazılıma dönüştürmek için şu 3 adım izlenmesi gerekir;
  1. her kaynak dosyasının *compile* edilip *object* dosyasına dönüşmesi
  2. birinci adımda oluşan her object dosyasının bir *linker* ile bağlanıp tek bir obje dosyasına dönüşmesi. üretilen bu son dosyaya *relocatable program* denir
  3. relocatable program, bir *locator* ile hedef gömülü sistemde çalıştırılabilir bir dosyaya dönüştürülür
  [[file:./images/screenshot-86.png]]

- bazı eski işlemciler. bu işlemciler 2000'lerde beyaz eşya, otomobil vs gibi ürünlerin yapımında kullanılan işlemcilerdir;
  a. Fujitsu SPARClite
  b. Hitachi H8/300
  c. Hitachi H8/300H
  d. Hitachi H8/S
  e. Hitachi SH
  f. IBM/Motorola PowerPC
  g. Intel i960
  h. MIPS R3xxx
  i. MIPS R4xx0
  j. Mitsubishi D10V
  k. Mitsubishi M32R/D
  l. Motorola 68k
  m. Sun Sparc
  n. Sun MicroSPARC
  o. Toshiba TX39

- object dosyalarının belli başlı formatları vardır. bunlardan ikisi COFF ve ELF'dir. COFF (Common Object File Format), ELF (Extended Linker Format)

- eğer bir gömülü sistem projesinde birden çok dil ya da compiler kullanılacaksa object dosyalarının formatlarının aynı olmasına dikkat edilmelidir. aksi taktirde linker farklı formatlardaki obje dosyalarının bağlayamayabilir

- bir obje dosyası 3 temel kısımdan oluşur;
  a. =text= bu kısımda kodun kendisi yer alır
  b. =data= global değişkenler burada yer alır
  c. =bss= henüz değer atanmamış ve static değişkenler burada bulunur

- kaynak dosyalarında bazen =extern= komutu ile başka kaynak dosyalarındaki değişkenler referans verilebilir. linkleme sırasında bu komutlarda tarif edilen değişkenleri yerine koymak, linkerın görevidir

***** linking
- linker, obje dosyalarında bulunan =text=, =data= ve =bss= bölümü tek bir dosya içine yazar ve =extern= komutuyla tarif edilen değişkenleri yerine koyar

- linker'ın kendi scripting dili vardır. bu dil sayesinde kod bölümleri /(text, data, bss)/ birbiriyle istendiği gibi bağlanıp, istenen bölümler başka bölümlere aktarılabilir

***** startup code
- yarın öbür gün bir C ya da C++ programındaki =main()= fonksiyonundan önce gerçekleşen işlemler sorulduğunda - ki gömülü sistemler iş mülakatlarında bunlar sorulur - startup kodunda neler olup bittiğini bilmek faydalı olacaktır

- yazılım geliştirme araçlarının geleneksel olarak yaptıkları işlemlerden biri, programın önüne bir =startup= kodu yerleştirmektir

- startup kodu, o platforma özel olan Assembly diliyle yazılıp, daha yüksek seviyeli dillerin çalışması için uygun bir ortam hazırlar

- her yüksek seviyeli dil, çalışmak için değişik kriterlere ihtiyaç duyar. örnek olarak C ve C++, =main()= çağırılmadan önce startup kodunun, *stack*'i ayarlamasına ihtiyaç duyar. stack oluşturulmazsa C ve C++ kodu çalışamaz. Bu sadece C ve C++ için gereken işlemlerden sadece biridir

- startup kodu genellikle ya =startup.asm= ya da =crt0.s= olarak isimli dosyalarda yer alır. *crt0.s*, "C Runtime"'ın kısaltılmışıdır

- =main= fonksiyonundan önce olanlar sırasıyla;
  1. disable all interrupts  (=cli= command in x86)
  2. Copy initialized data from ROM to RAM (=data=)
  3. zero-out uninitialized data area (=bss=)
  4. Allocate space for and initialize the stack
  5. initialize the processor's stack pointer
  6. create and initialize the heap
  7. execute "constructors" and "initializers" for global vars (only in C++)
  8. enable interrupts
  9. call =main()=

- 9. adımdan sonra da program eğer =main()='den çıkarsa diye sonsuz döngü konur. sonsuz döngü yerine istenirse program akışı istenen yere doğru yönlendirilebilir

- startup kodu *ilk çalışan* kod olduğu için bunun linker scriptinde belirtilmesi gerekir. linker scriptingde ilk belirtilmesi gereken şey programın ilk çalışacağı kısmın neresi olduğudur. bir yazılımın ilk çalışan kod satırına ya da fonksiyonuna *entry point* denir

-
***** locator
- linking işlemi bittiğinde geriye son işlem olan locator işlemi kalır
- locator genelde ayrı bir programdır ancak GNU araçlarında, locator işlevini linker otomatik gerçekleştirir
*** C++ Primer :book:
:PROPERTIES:
:EXPORT_FILE_NAME: cpp-primer-notes
:EXPORT_TITLE: C++ Primer Notes
:HUGO_BASE_DIR: ~/txt/blog/
:HUGO_SECTION: en/posts
:EXPORT_AUTHOR: savolla
:END:
This is my summary and notes of C++ Primer by Stanley B. Lippman.
[[file:./images/screenshot-88.png]]
**** Day 1 (Chapter 1. Getting Started)
- every c++ program contains at least one function (main)
- simplest c++ program
  #+BEGIN_SRC cpp
int main() {
    return 0;
}
  #+END_SRC
- the return value of main function
  - 0 means success
  - -1 means failure
  - non-zero returns are defined by the system
- c++ file extensions
  1. .cc
  2. .cxx
  3. .cpp (mostly used)
  4. .cp
  5. .C
- checking main's return value after execution
  - on UNIX
    #+BEGIN_SRC bash
echo $?
    #+END_SRC
  - on windows
    #+BEGIN_SRC bash
echo %ERRORLEVEL%
    #+END_SRC
- enabling all warnings from the compiler
  - on UNIX (GNU)
    #+BEGIN_SRC bash
g++ -o program -Wall source.cpp
    #+END_SRC
- c++ does not provide I/O operations by default. Therefore people created a
  library for this kind of purposes called *standard library*.
  - standard library is not only for I/O operarionts. I/O is just one of usefull sublibrares
  - I/O library is *iostream*
    - input : istream
    - output: ostream
    - btw you can't include those ~istream~ and ~ostream~ alone. You include ~iostream~
- 4 I/O objects
  - *cin* : takes input
  - *cout*: outputs
  - *cerr*: outputs warning and error messages
  - *clog*: information about program execution
- danger of namespaces
  - code does not compile (with namespace)
    #+BEGIN_SRC cpp
    #include <iostream>
    using namespace std;

    void cout(char x){
            std::cout << x << std::endl;
    }

    int main(void){
            int a;
            std::cin >> a;
            std::cout << a << std::endl;
            std::cerr << "this is an error?" << std::endl;
            std::clog << "this is a log message" << std::endl;
            cout('j');

            return 0;
    }
    #+END_SRC

    #+RESULTS:

  - code that compiles (without namespace)
    #+BEGIN_SRC cpp
    #include <iostream>

    void cout(char x){
            std::cout << x << std::endl;
    }

    int main(void){
            int a;
            std::cin >> a;
            std::cout << a << std::endl;
            std::cerr << "this is an error?" << std::endl;
            std::clog << "this is a log message" << std::endl;
            cout('j');

            return 0;
    }
    #+END_SRC
  - the cause of the problem is *same function names* =cout=
- cin tips
  instead of taking the input in separate lines
  #+BEGIN_SRC cpp
#include <iostream>
int main(void){
		int a, b;
		std::cin >> a;
        std::cin >> b;
		return 0;
}
  #+END_SRC
  we can take it like:
  #+BEGIN_SRC cpp
#include <iostream>
int main(void){
		int a, b;
		std::cin >> a >> b;
		return 0;
}
  #+END_SRC
- comments
  - // comment
  - /* comment */
  - comments inside /**/ do *NOT* nest!
    - /* comment1 /* nested comment*/ comment2 */
      results error
    - not the case for single line comments //
- taking unknown number of values
  #+BEGIN_SRC cpp
#include <iostream>

int main(void){
    int value, sum = 0;
    while(std::cin >> value){
        sum += value;
    }
    std::cout << sum;
}
  #+END_SRC
  ~while~ executes untill it encounters end-of-line ~Ctrl+d~ or an input error
  like taking characters instead of integer
- end-of-line character
  - UNIX & Mac: ~Ctrl+d~
  - windows: ~Ctrl+z~
- error types that c++ compiler can detect
  - =syntax errors= (hide and seek champion ';')
  - =type errors= (variable types =int=, =string= etc.)
  - =declaration errors= (forgetting to use std::)
- error structure in c++
  - usually contains a line number
  - brief description of the error
- =edit-compile-debug= cycle
  - self descriptive..

**** Day 2 (Chapter 2. Variables and Basic Types)
+ ~void~ type used for few situations. mostly for returning values
+ C++ builtin types
  | Type        | Meaning            | Minimum size          | unsigned |
  |-------------+--------------------+-----------------------+----------|
  | bool        | boolean            | NA                    | no       |
  | char        | character          | 1 byte                | yes      |
  | wchar_t     | wide character     | 2 byte                | yes      |
  | char16_t    | unicode character  | 2 byte                | no       |
  | char32_t    | unicode character  | 4 byte                | no       |
  | short       | short integer      | 2 byte                | yes      |
  | int         | integer            | 2 byte                | yes      |
  | long        | long integer       | 4 byte                | yes      |
  | long long   | long integer       | 8 byte                | yes      |
  | float       | single-precision   | 6 significant digits  | no       |
  | double      | double-precision   | 10 significant digits | no       |
  | long double | extended-precision | 10 significant digits | no       |
  |-------------+--------------------+-----------------------+----------|

+ ~wchar_t~ is used in windows. Represents Unicode characters. Used in
  international languages like Japanesse
  #+BEGIN_SRC cpp
  wchar_t a = L'ü';  // L is a suffix which converts char to wchar_t
  #+END_SRC
+ ~unsigned~ property can be applied to only =integral types=
+ =unsigned int= can be abbreviated as =unsigned=
+ =signed int= can be abbreviated as =signed= as well

***** 4 Rules For Choosing Types
1. Use ~unsigned~ type when you know that value can't be negative
2. Use ~int~ for aritmetic. Don't use ~short~ because it's too small. Use ~long
   long~ when ~int~ is not enough. Don't use ~long~ because its mostly same size
   with ~int~
3. Do not use _plain_ ~char~ . char types can be signed on some machines and
   unsigned on others. Explicitly specify either ~signed char~ or ~unsigned char~
4. Use ~double~ for floating-point computations. Do not use ~float~ its
   unnecesary. On some machines ~double~ is *faster*. ~long double~ is also
   unnecesary and *slow*
**** Day 3 (Type conversions)
***** A goog example on type conversions
#+BEGIN_SRC cpp
bool b = 42; // b is true (1)
bool k = -33; // k is true (1)
int i = b; // i = 1
i = 3.14; // i = 3
double pi = i; // i = 3.0
unsigned char c = -1; // c = 255
signed char c2 = 256; // undefined
#+END_SRC

***** btw in c++ this is ok..
#+BEGIN_SRC cpp
#include <iostream>

int main(void)
{
	unsigned char c = -128; // -129 gives Woverflow
	unsigned char d = 255; // 256 gives Woverflow

	return 0;
}
#+END_SRC

***** unsigned char
******* Assigning to out of range value
the range of unsigned char is 0-256. if assigning to -1, resutl is max_value -
assigned_value

#+BEGIN_SRC cpp
unsigned char c = -1; // c = 256-1
// resutl: 256 - 1 = 255
#+END_SRC

******* Assigning to in-range value
There is no problem here. Just be aware that two examples are resulting to same velue
#+BEGIN_SRC cpp
unsigned char d = 255; // d = 255
#+END_SRC

***** signed char
- =unsigned= values were fine on out-or-range values but this time they are not.
- Assigning out-or-range values to ~signed~ types are very dangerous. The
  program might work, it might crash or might produce garbage values
- it is a good idea to use =unsigned char= ;)
***** notes
+ don't mix ~signed~ and ~unsigned~ values in arithmatic expressions !. Your
  program may enter infinite loop or produce unexpected values
+ btw in c++, variables are =signed= as default

  example
  #+BEGIN_SRC cpp
  #include <iostream>
  int main(void) {
      unsigned u = 10, u2 = 42;
      std::cout << u2 - u << std::endl; // 32
      std::cout << u - u2 << std::endl; // 4294967264

      int i = 10, i2 = 42;
      std::cout << i2 - i << std::endl; // 32
      std::cout << i - i2 << std::endl; // -32

      std::cout << i - u << std::endl;  // 0
      std::cout << u - i << std::endl;  // 0
      return 0;
  }
  #+END_SRC

+ c++ supports representing values as:
  - octal
  - decimal
  - hexadecimal

  #+BEGIN_SRC cpp
  #include <iostream>
  int main() {
      int a = 0xFFFF; // hex
      int b = 05376; // octal
      int c = 8943; // decimal

      std::cout << a << std::endl;
      std::cout << b << std::endl;
      std::cout << c << std::endl;
      // do arithmatic operations with differnt bases!!
      std::cout << a + b + c << std::endl;


      return 0;
  }
  #+END_SRC

***** Escape Sequences
|---------------------+-------------|
| character           | description |
|---------------------+-------------|
| newline             | \n          |
| horizontal tab      | \t          |
| alert (bell)        | \a          |
| vertical tab        | \v          |
| backspace           | \b          |
| double quote        | \"          |
| backslash           | \\          |
| question mark       | \?          |
| single quote        | \'          |
| carriage return     | \r          |
| formfeed            | \f          |
| hexadecimal (chars) | \x[number]  |
| octal (chars)       | \[number]   |
|---------------------+-------------|

#+BEGIN_SRC cpp
#include <iostream>
int main() {
    std::cout << "\n" << std::endl; // newline
    std::cout << "\115" << std::endl;// 'M'
    std::cout << "\40" << std::endl; // White Space
    std::cout
        << "\t\x48\x69\x20\x4d\x6f\x6d\x21\n"
        << std::endl; << std::endl; // Hi Mom!
    return 0;
}
#+END_SRC

btw octal values work only for 3 characters after \ character while hexadecimal
values work only for 2 characters.

#+BEGIN_SRC cpp
#include <iostream>
int main() {
    std::cout << "\123" <<  std::endl; // S
    std::cout << "\1234" <<  std::endl; // S4
    std::cout << "\x12" <<  std::endl; // ^R
    std::cout << "\x1234" <<  std::endl; // 4
    return 0;
}
#+END_SRC

***** literal suffixes
We can override integer, floating point or char literals by applying a ~suffix~
to it

| suffix        | example | description              |
|---------------+---------+--------------------------|
| L             | L'a'    | char -> wchar_t          |
| u8            | u8"hi!" | utf-8 string literal     |
| U             | 78U     | makes 78 unsigned        |
| ULL           | 48ULL   | unsigned long long       |
| <num>E-<num>F | 2E-4F   | outputs 0.0002           |
| L             | 8493L   | makes the number long    |
| true          | true    | boolean literal. means 1 |
| false         | false   | boolean literal. means 0 |
| nullptr       | ~FIX~   | ~FIX~                    |
|---------------+---------+--------------------------|


+ When using long literal use upper case 'L'. lower case usually mistaken with
  number 1.. 'l' and '1' (depends on font)

+ Literal usages and their sizes
  #+BEGIN_SRC cpp
  #include <iostream>
  int main() {
      std::cout << sizeof('a') << std::endl; // char 1 byte
      std::cout << sizeof(l'a') << std::endl; // wchar_t 4 byte
      std::cout << sizeof("a") << std::endl; // string "a\0"" 2 bytes
      std::cout << sizeof("abcd") << std::endl; // string "abcd\0" 5 bytes
      std::cout << sizeof(l"a") << std::endl; // idk why it's 8 byte

      std::cout << sizeof(10) << std::endl; // int 4 bytes
      std::cout << sizeof(10u) << std::endl; // unsigned int
      std::cout << sizeof(10l) << std::endl; // int -> long
      std::cout << sizeof(10ul) << std::endl; // int -> unsigned long
      std::cout << sizeof(012) << std::endl; // 0 -> octal literal
      std::cout << sizeof(0xc) << std::endl; // 0x -> hexadecimal literal

      std::cout << sizeof(3.14) << std::endl; // double 8 bytes
      std::cout << sizeof(3.14f) << std::endl; // double -> float 4 bytes
      std::cout << sizeof(3.14l) << std::endl; // double -> long double

      std::cout << sizeof(10) << std::endl; // int 4 bytes
      std::cout << sizeof(10u) << std::endl; // unsigned int 4 bytes
      std::cout << sizeof(10.) << 10. << std::endl; // double 8 bytes (10)
      std::cout << sizeof(10e-2) << 10e-2 << std::endl; // double 8 bytes (0.1)

      return 0;
  }
  #+END_SRC

**** Day 4 (Variables)
+ C++ programmers might call a variable as object. Don't be confused. it's the same
  thing in theory actually..
+ initialization examples
  #+BEGIN_SRC cpp
  int a = 3; // a initialized as 3
  int b = a * 3; // b initialized as a result of arithmatic expression
  int c = func(b,a); // c initialized as a return value of func()
  #+END_SRC
+ =INITIALIZATION= and =ASSIGNMENT= are _NOT THE SAME_
  + initialization: gives a _first value_ to a variable
  + assignment: changes or replaces the value of a variable
  #+BEGIN_SRC cpp
  int a = 4; // initialization
  a = 33; // assignment
  #+END_SRC
+ initialization is a complicated thing in c++. Here is why;
  #+BEGIN_SRC cpp
  // initializing an int object with a value with 4 ways
  int x = 0; // normal initialization
  int x = {0}; // this is called list initialization
  int x(0);
  int x{0};
  // damn son... why...
  #+END_SRC
+ default initialization;
  #+BEGIN_SRC cpp
  int a; // assigns a random value
  string b; // b is an empty string ""
  #+END_SRC
+ not every class lets us to initialize objects as default. Compiler will
  complain about this.
+ _PROTIP_: never leave an undefined variable in your programs. if you
  initialized a variable as default, give it a value before compilation.
  Otherwise the program might produce stupid results or unexpected errors. hard
  to debug
+ declaration and deffinition;
  + declaration: is just a mention of a variable
  + deffinition: givin it a value
  #+BEGIN_SRC cpp
  int j; // declaration and definition. mentioning and giving random value
  extern int i; // declares but does not define. mentioning but not giving any value
  extern double c = 3.1415; // definition and declaraion
  #+END_SRC
+ =identifier= is the actual _name_ of the variable
  #+BEGIN_SRC cpp
  int a = 39; // identifier of the variable is 'a'
  #+END_SRC
+ using global variables if there is a local variable with the same identifier
  #+BEGIN_SRC cpp
  #include <iostream>
  int nonLocalVariable = 39;
  int main(void)
  {
      std::cout << nonLocalVariable << std::endl; // outputs 39
      int nonLocalVariable = 3; // overriding identifier
      std::cout << nonLocalVariable << std::endl; // outputs 3 (local var)
      std::cout << ::nonLocalVariable << std::endl; // outputs 39. (global var)
      return 0;
  }
  #+END_SRC

+ _PROTIP_: it is always a bad idea to define a variable with the same name as a
  global variable..
+ =reference= is just an alias of another variable identifier
  #+BEGIN_SRC cpp
  int a = 1024; // name(identifier) of the variable is 'a'
  int &b = a; // now variable 'a' has a second name b!. 1024 has two identifiers now.
  int &c = b; // now variable has 3 identifiers! a,b and c

  // following lines output 1024 but they are not separate variables!
  // they are the same!
  std::cout << a << std::endl; // output: 1024
  std::cout << b << std::endl; // output: 1024
  std::cout << c << std::endl; // output: 1024
  #+END_SRC
+ we _can't_ define a ~reference~ to a =reference= or a =constant value=.
  #+BEGIN_SRC cpp
  unsigned a = 333;
  unsigned &b = 34; // assigning to a constant value. NOT ALLOWED!

  unsigned &c = a;
  unsigned &d = &c; // assigning to another reference. NOT ALLOWED!
  unsigned &d = c; // this would be a correct way
  #+END_SRC
+ reference _must be_ the same =type= with referencing identifier
  #+BEGIN_SRC cpp
  char a = 'A';
  int &b = a; // not same type as identifier 'a'
  #+END_SRC
+ references can't be default initialized
  #+BEGIN_SRC cpp
  int &a; // error..
  #+END_SRC
+ if a reference changed in program, referenced value also changes
  #+BEGIN_SRC cpp
  int a = 1024;
  int &b = a;
  std::cout << a << std::endl; // outputs 1024
  std::cout << b << std::endl; // outputs 1024

  b = 333;
  std::cout << a << std::endl; // outputs 333
  std::cout << b << std::endl; // outputs 333
  #+END_SRC
**** Day 5 (Pointers)
+ a pointer holds _address_ of an =object=
+ unlike a reference, pointers can be defaultly initialized
  #+BEGIN_SRC cpp
  unsigned char *p; // don't use uninitialized pointers!!!
  #+END_SRC
+ =address-of= operator: '&'
  #+BEGIN_SRC cpp
  double x = 3.44;
  double *p = &x; // variable p now has x's address
  #+END_SRC
  _WARNING:_ '&' is not a reference operator that I covered before! This is
  totally different operator when used with pointers. It takes the address of an
  object. It called *address-of* operator
+ since pointers can hold only =object= addresses, we cannot assign a reference
  to a pointer because references don't have addresses
+ pointer and pointed variable must be matched in types
  #+BEGIN_SRC cpp
  double a = 383;
  int *p = &a; // spits error. pointer and variable are different type
  #+END_SRC
+ =dereference= operator: '*'
  #+BEGIN_SRC cpp
  #include <iostream>
  int main(void)
  {
        int x = 333;
        int *p = &x; // variable p now has x's address. * is not dereference
        int i = *p // using dereference operator to assign value that being hold by pointer
        unsigned char c = *p; // assigning 333 to unsigned char

        std::cout << *p << std::endl; // outputs 333
        std::cout << i << std::endl; // outputs 333
        std::cout << c << std::endl; // 333 - 256 = 77 --> outputs 'M'
        std::cout << char(77) << std::endl; // proof that char 77 is 'M'

        return 0;
  }
#+END_SRC

+ it is also posible to change pointed variable's value with dereference
  #+BEGIN_SRC cpp
  #include <iostream>

  int main(void)
  {
      // changing pointed value with dereference
      int x = 33; // normal value assignment
      int *p = &x; // loading pointer with x's address
      std::cout << *p << std::endl; // output: 33
      *p = 44; // chaning pointing value with dereference
      // x is now changed
      std::cout << x << std::endl; // output: 44

      // doint the same thing with references
      int a = 33;
      int &b = a;
      std::cout << b << std::endl; // output: 33
      b = 44;
      std::cout << a << std::endl; // output: 44
      return 0;
  }
  #+END_SRC

+ REALLY REALLY IMPORTANT !!!!
  | symbol | example      | usecase     | meaning              |
  |--------+--------------+-------------+----------------------|
  | &      | int &b = a;  | declaration | reference operator   |
  | &      | int *p = &x; | expression  | address-of operator  |
  | \*     | int *p;      | declaration | defining a pointer   |
  | \*     | int i = *j   | expression  | dereference operator |

+ in normal conditions we can't assign a constant value to a pointer. Except
  value '0'. It means null pointer
  #+BEGIN_SRC cpp
  int *p = 33; // this is an error. constant value assigned to pointer
  int *q = 0; // this is legal. q is a null pointer now
  #+END_SRC
+ null pointers do not point to any object. It can be obtained in three ways in
  c++
  #+BEGIN_SRC cpp
  int *q = nullptr; // This is preferable way to declare null pointers in c++
  int *q = 0; // this is legal but nullptr is mostly used way. avoid
  int *q = NULL; // C way but might require extra headers (cstdlib.h). avoid
  #+END_SRC
+ using / leaving unitialized pointers in programs can cause catastrophic errors
  and those errors are really hard to debug.
  #+BEGIN_SRC cpp
  int *p; // avoid!!
  #+END_SRC
+ if possible define pointers after deffinition of the objects. Good habbit

  wrong way:
  #+BEGIN_SRC cpp
  int *p; // pointer defined before the object. avoid
  int a = 3;
  p = &a;
  #+END_SRC

  right way:
  #+BEGIN_SRC cpp
  int a = 3;
  int *p = &a; // pointer defined after the object. good
  #+END_SRC
+ if you /really/ need a pointer without any value use *nullptr*
  #+BEGIN_SRC cpp
  int *p = nullptr; // use it instead
  #+END_SRC

+ pointers can be used in comparison operators. in if statements. if a pointer
  has nonzero value it returns 1. if null pointer it returns 0

  + example:
    #+BEGIN_SRC cpp :results output
    #include <iostream>

    int main(void)
    {
        int a = 3;
        int *p = &a;
        int *q = nullptr;
        if (p){std::cout << "p points to something" << std::endl;}
        else {std::cout << "p is empty" << std::endl;}
        if (q){std::cout << "q points to something" << std::endl;}
        else {std::cout << "q is empty" << std::endl;}
        return 0;
    }
    #+END_SRC

    #+RESULTS:
    : p points to something
    : q is empty

+ =void pointer= is a special pointer that holds only _address_ of an object.
  But cannot dereference the object or use it's value.

  #+BEGIN_SRC cpp
  int a = 33; // defining a random integer value
  void *p = nullptr; // defining a new void pointer

  p = &a; // assigning the address-of a
  std::cout << p << std::endl; // this will print the address of variable a
  std::cout << *p << std::endl; // error: dereference is not working on void pointers
  #+END_SRC

+ void pointers are used on just memory-memory operations
+ key difference between *reference* and *pointer*
  - reference is just an alternative /identifier/ of a variable
  - pointer is an object that stores only /addresses/ of a varialbe

+ there are also confusing pointer deffinition styles to be aware of
  #+BEGIN_SRC cpp
  int* p1, p2; // p1 is a pointer while p2 is an int object. avoid this style
  int *p1, p2; // always prefer this one
  #+END_SRC

+ pointers to pointers

  + example:

  #+BEGIN_SRC cpp
  #include <iostream>

  int main(void)
  {
      int a = 389;
      int *p = &a;
      int **pp = &p;
      int ***ppp = &pp;

      std::cout << a << std::endl;
      std::cout << *p << std::endl;
      std::cout << **pp << std::endl;
      std::cout << ***ppp << std::endl;

      return 0;
  }
  #+END_SRC

+ references to pointers

  + we cannot assign a reference to a pointer because references are not objects
    and they don't have addresses.
    #+BEGIN_SRC cpp
    int a = 39;
    int &b = a;
    int *p = b;
    #+END_SRC
  + but since pointers are objects we can reference pointers

    + example

    #+BEGIN_SRC cpp
    #include <iostream>

    int main(void)
    {
        int a = 3; // regular assignment to int obj
        int &b = a; // reference to a
        int *p = &b; // pointing to b's value (a). same as "int *p=&a;"
        int *&q = p; // reference to pointer p
        int &q = p; // spits out an error. reference identifier must have a *

        std::cout << a << std::endl; // output: 3
        std::cout << *p << std::endl;// output: 3
        std::cout << b << std::endl; // output: 3
        std::cout << *q << std::endl;// output: 3
        return 0;
    }
    #+END_SRC

+ reading complicated pointers from *right* to *left* makes life easier.

  + example
  #+BEGIN_SRC cpp
  int *&q = p // q is a reference to a pointer
  #+END_SRC

**** Day 6 (const)
+ all constant variables must be initialized with a value. default
  initialization is not allowed
  #+BEGIN_SRC cpp
  const int a = 333; // okay
  const int b; // error!. default initialization is not allowed
  #+END_SRC

+ to share a *const* variable between multiple files use *extern* keyword
  =This part is not totally understood. Research and complete this part=

+ const variables also accept initializations with a variable or a function
  return value

  example:
  #+BEGIN_SRC cpp
  int s = 333;
  const int x = s; // okay.
  const int dbl = sizeof(s); // okay.
  #+END_SRC

+ it is also posible to create a =reference= to a const variable. here is how:
  #+BEGIN_SRC cpp
  const int x = 33; // creating a const integer object
  const int &ref = x; // constant x now has one more constant identifier
  ref = 8943; // Error. Trying to change constant variable
  int &ref2 = x; // Error. Value must be "const"
  #+END_SRC
+ =const pointer=
  #+BEGIN_SRC cpp
  int x = 0;
  int *const p = &x; // p wil always point to x. top-level const
  const double pi = 3.14159;
  const double *const p2 = &pi; // we put const keyword at the begining cuz pi is const.
  // low level const
  #+END_SRC

+ how to read the low-level pointer?. reading *right* to *left*
  #+BEGIN_SRC cpp
  // p3 is a constant pointer which points to a constan integer
  const int *const p3 = &i;
  #+END_SRC
+ =constant expressions=
  + when defining a constant variable it is a constant expression
  + when initializing a constant variable to an arithmatic expression it is a
    constant expression
  + when initializing a constant variable to a return value of a function it is
    not a constant expression. Because the value is not known until runtime

**** Day 7 (types)
+ It is posible to changing type identifiers in c++. Think it like reference to types
  #+BEGIN_SRC cpp :results output
  #include <iostream>

  int main(void)
  {
      typedef int savolla;
      //using savolla = int; // c++11 new standard
      savolla x = 333;
      int y = 33;
      std::cout << "savolla " << x << std::endl;
      std::cout << "int     " << y << std::endl;

      return 0;
  }
  #+END_SRC

  #+RESULTS:
  : savolla 333
  : int     33

+ c++11  introduced a new standard for aliasing types
  #+BEGIN_SRC cpp
  using savolla = int;
  #+END_SRC

+ =auto= is pretty cool operator in c++
+ it predicts which type a variable should be by looking the value it has
  #+BEGIN_SRC cpp
  unsigned char c[] = "blah blah blah"; // instead of writing this:
  auto c = "blah blah blah"; // we just write auto and magic happens
  #+END_SRC

+ make sure to declaring *auto* variables separately. it might cause errors otherwise

  + wrong way
    #+BEGIN_SRC cpp
    auto i = 0, pi = 3.14; // error: inconsistent types at the same line
    #+END_SRC

  + right way. separately defined auto variables
    #+BEGIN_SRC cpp
    auto i = 0;
    auto pi = 3.14;
    #+END_SRC

+ *auto* becomes handy espesially when we can't predict the result of an
  arithmatic expression or a return type of a function

  #+BEGIN_SRC cpp
  auto x = a + b; // no matter what a and b's types are the auto will do the job
  auto j = unstableFunction(); // function can return anything. auto is awesome!
  #+END_SRC

+ auto drops top-level constants. But low-level constants are kept. if we want
  to keep top-level constants we need to say explicitly
  #+BEGIN_SRC cpp
  const auto x = 33;
  #+END_SRC
**** Day 8 (strings)
+ =using= keyword
  #+BEGIN_SRC cpp
  // instead of using std:: we can use a using keyword

  #include <iostream>
  using std::cout;
  cout << "hello";

  #include <string>
  using std::string;
  string name = "savolla";

  #+END_SRC

+ don't use *using* keyword inside header files. This might cause some name
  conflicts later.

+ initializing =string=

  + string is part of standard library. so we need to use strings like
    #+BEGIN_SRC cpp
    #include <string>
    std::string name = "savolla";
    #+END_SRC

  + or with *using* at the beginning
    #+BEGIN_SRC cpp
    #include <string>
    using std::string;
    string name = "savolla";
    #+END_SRC

  + initializing strings
    #+BEGIN_SRC cpp
    string s1; // default initialization is allowed
    string s2 = s1; // copy initialization
    string s3 = "vizima"; // copy initialization
    string s4(10,'c'); // s4 = "cccccccccc"; // direct initialization
    string s5("temeria"); // s5 = "temeria"  // direct initialization
    #+END_SRC

+ string operations

  | syntax          | description                                     |
  |-----------------+-------------------------------------------------|
  | getline(cin, s) | reads whitespace-separated string               |
  | s.empty()       | returns true if string s is empty               |
  | s.size()        | returns string length                           |
  | s[n]            | returns the char on n(th) index                 |
  | s1 + s2         | adds two strings (-,*,/ are not allowed)        |
  | s1 = s2         | copies s2 to s1                                 |
  | s1 == s2        | compares are s1 and s2 same or notes            |
  | s1 != s2        |                                                 |
  | <,<=,>,=>       | comparisons are case sensitive and alphabetical |

  #+BEGIN_SRC cpp :results output
  #include <iostream>
  #include <string>
  using std::cout;
  using std::endl;
  using std::string;

  int main(void)
  {
      string s0 = "AZZ";
      string s1 = "BAA";

      if (s0 > s1){cout << s0 << " > " << s1 << endl;}
      if (s0 < s1){cout << s0 << " < " << s1 << endl;} // B is alphabetically bigger than A

      string s2 = "AZZDK";
      string s3 = "bAA";

      if (s0 > s1){cout << s2 << " > " << s3 << endl;}
      if (s0 < s1){cout << s2 << " < " << s3 << endl;} // b is bigger than A
      return 0;
  }
  #+END_SRC

  #+RESULTS:
  : AZZ < BAA
  : AZZjfdk < bAA

  + getline() and std::cin

    std::cin reads until a white space in encountered.
    #+BEGIN_SRC cpp
    string hello;
    cin >> hello; // consider user enters "hello world"
    cout << hello; // only "hello" will be printed
    #+END_SRC

    this is not the case for getline();
    #+BEGIN_SRC cpp
    string hello;
    getline(cin, hello); // consider user enters "hello world" again
    cout << hello; // "hello world" will be printed
    #+END_SRC

_PROTIP_: using aliases on functions in c++11. This is really cool!!!
#+BEGIN_SRC cpp :results output
#include <iostream>
#include <string>
using str = std::string; // aliasing type
auto print = std::cout; //  aliasing function (we used auto because we don't know return type)

int main(void)
{
    str name = "savolla";
    print << name;
    return 0;
}
#+END_SRC

#+RESULTS:

+ strings can be added like:
  #+BEGIN_SRC cpp
  string s0 = "hello";
  string s1 = "world";

  string s2 = s0 + s2; // s2 = "helloworld"

  s0 += " "; // s0 = "hello "
  s0 += s1; // s0 = "hello world"
  #+END_SRC

+ when adding strings with string literals and char literals we need to obey to
  some rules in c++

  when adding, there must be at least one string variable!
  #+BEGIN_SRC cpp
  string s0 = "Hello";
  string s1 = s0 + ", " + "World"; // legal: at least one string variable s0 summed with ", "
  // this means (s0 + ", ") + "World"
  // s0 + ", " returns a string
  #+END_SRC

  #+BEGIN_SRC cpp
  string s0 = "Hello" + ", "; // illegal: no string variable while adding
  #+END_SRC

  #+BEGIN_SRC cpp
  string s0 = "yo!";
  string s1 = "this is " + "my jam " + s0; // illegal
  // first two literals were added ("this is " + "my jam") + s0
  // but firts operation returns a string literal which is illegal
  #+END_SRC

+ in c and c++ string literals and strings are not same things. This is why
  adding rules might seem a bit confusing.

  - "Hello" -> string literal. " symbol makes it string literal
  - s0 = "World" -> string

+ to deal with _characters_ inside a string variable, we use *cctype* header.

  | member      | description                                      |
  |-------------+--------------------------------------------------|
  | isalnum(c)  | true if c is letter or digit                     |
  | isalpha(c)  | true if c is a letter                            |
  | iscntrl(c)  | true if c is a control char                      |
  | isdigit(c)  | true if c is a digit                             |
  | isgraph(c)  | true if c is not space but printable             |
  | islower(c)  | true if c is lowercase letter                    |
  | isprint(c)  | true if c is a printable character. not \344     |
  | ispunct(c)  | if c is _ , + < / ; .  kind of symbol            |
  | isspace(c)  | true is c is a whitespace, tab or vertical space |
  | isupper(c)  |                                                  |
  | isxdigit(c) | true if c is a hexadecimal digit                 |
  | tolower(c)  | if c is an uppercase changes it to lovercase     |
  | toupper(c)  |                                                  |

+ processing every character inside a string

  c++ provides a short way to do this with *range for*

  with a regular, everyday, normal *for*
  #+BEGIN_SRC cpp
  #include <iostream>
  #include <string>
  using str = std::string;
  auto &print = std::cout;

  int main(void)
  {
      str name("savolla");
      for(int i = 0; i<name.size(); i++)
      {
          print << name[i];
      }

      return 0;
  }

  #+END_SRC

  #+RESULTS:
  : savolla

  with *range for*
  #+BEGIN_SRC cpp
  #include <iostream>
  #include <string>
  using str = std::string;
  auto &print = std::cout;

  int main(void)
  {
      str name("savolla");
      // it's like (for c in name) like in python HO HO HO!! :P
      for(auto c : name){print << c;} // range for. we could write char instead of auto

      return 0;
  }

  #+END_SRC

  #+RESULTS:
  : savolla


_PROTIP_: libaries we include up to this time (string , cctype) are parts of
standard library. We would not include them in our programs. But this is a good
practice to see which library is imported in the program. But this makes the
program bigger at the same time.

+ if we want to change the actual string variable in our loops we need to create
  a reference to it
  #+BEGIN_SRC cpp :results output
  #include <iostream>
  using std::cout;
  using std::string;

  int main(void)
  {
      string s0 = "hello, world!";
      for (auto &r : s0) // created a reference to change the actual string
      {
          r = toupper(r);
      }
      cout << s0;
  }
  #+END_SRC

  #+RESULTS:
  : HELLO, WORLD!
**** Day 9 (strings continued)
/Processing Only Some Characters?
+ when we use string[0] it means first character of the string and it called *subscript*
+ in *subscripts* we need to always ensure that there is a value at that given
  location
  #+BEGIN_SRC cpp :results output
  #include <iostream>
  using std::string;

  void subscriptFunc(string x, int index)
  {
      // handling every case is a really good practice
      if(!x.empty() && index < x.size() && index > 0)
      {
          std::cout << x[index] << std::endl;
      }
      else
      {
          std::cout << "error" << std::endl;
      }
  }
  int main(void)
  {
      string name = "savolla";
      subscriptFunc(name, 99);
      subscriptFunc(name, -1);
      subscriptFunc(name, 4);
      return 0;
  }
  #+END_SRC

  #+RESULTS:
  : error
  : error
  : l
+ decltype() takes an expression as a parameter and return expression's type. it
  works like auto but
  #+BEGIN_SRC cpp
  decltype(2 + 1) x = 3.284; // expression in decltype returns an "int" type
  std::cout << x; // prints 3. because it was int type

  std::string name = "savolla";
  decltype(name.size()) i = 0; // decltype can also takes function return values
  #+END_SRC

+ This is a cool code and must be understanded. grind it!
  #+BEGIN_SRC cpp :results output
    #include <iostream>
    using std::string;

    int main(void)
    {
        // makes first word uppercase
        string name = "savolla ross";
        // decltype is used for example purpose. we could use a signle int type instead
        for (decltype(name.size()) index = 0;
             // compound conditions can be used in for loops!
             // instead of using a separete if statement inside for block
             // we embeded it in for
             index != name.size() && !isspace(name[index]);
             ++index)
             {
                 // changing every character to uppercase
                 name[index] = toupper(name[index]);
             }
        std::cout << name << std::endl;
        return 0;
    }
  #+END_SRC

  #+RESULTS:
  : SAVOLLA ross

+ out-of-range subscripts are *undefined* and *dangerous* use with caution and
  always check if user gives a defined subscript as parameter
+ always use unsigned types for substrings to make sure the number can't be negative

  #+BEGIN_SRC cpp :results output
  #include <iostream>
  using str = std::string;
  auto &read = std::cin;
  auto &print = std::cout;

  int main(void)
  {
  		const str hexDigits("0123456789ABCDEF");
  		str result;
  		unsigned int input;
  		while (read >> input)
  		{
  				if (input < hexDigits.size())
  				{
  						result += hexDigits[input];
  				}
  		}
  		print << result << std::endl;
  		return 0;
  }
  #+END_SRC

+ it is good to know the following code is valid because an empty string
  actually has a value at index 0
  #+BEGIN_SRC cpp
  string s0;
  cout << s0[0]; // index 0 is defined
  cout << s0[1]; // index 1 is not defined
  #+END_SRC
**** Day 10 (vectors)
+ vector is a container. Like arrays but more powerfull
+ greates feauture of vectors is that THEY CAN GROW!!. They are not like arrays.
  Their size is not limited at initialization
+ vector is a template in c++. not a type.
+ deffinition of templates
  #+BEGIN_SRC cpp
  vector<int> i_vec; // created a vector which holds int types
  vector<myCustomType> myVec; // vectors can hold any type
  vector<vector<string>> _2D_Vec; // vector of string vectors
  vector<vector<string> > _2D_Vec; // notice white space. it was required in old c++ standards
  // some compilers may still require a white space between carrot operators
  #+END_SRC
+ we can't create a vector of *references*. vectors hold only objects. but
  references are not objects
+ if initializing with a built in type like *int*, values will be 0
+ if not built in like *string*, values are empty. NULL. (empty string)
+ initializing vectors
  #+BEGIN_SRC cpp
  vector<int> i_vec = 10; // error.
  vector<int> i_vec(10); // direct initialization. since int is buitin, i_vec has 10 of 0.
  vector<int> i_vec{10}; // List initialization .i_vec has one value and it's 10
  vector<int> i_vec(10, 234); // dirt. init. has 10 items of 234
  vector<int> i_vec{10, 234}; // i_vec has 2 values. 10 and 234
  #+END_SRC
+ c++ has different initialization types
  1. default initialization
     #+BEGIN_SRC cpp
     vector<int> i_vec;
     #+END_SRC
  2. direct initialization
     #+BEGIN_SRC cpp
     vector<int> i_vec(10,3);
     #+END_SRC
  3. list initialization
     #+BEGIN_SRC cpp
     vector<int> i_vec{10,2,44,333,2,4};
     #+END_SRC

+ also vectors can be assigned to vectors. but both must be same type
  #+BEGIN_SRC cpp
  vector<int> i_vec0{1,2,3,4,2,1};
  vector<int> i_vec1 = i_vec0;
  #+END_SRC

+ adding values to a vector usng *push_back()* method

  #+BEGIN_SRC cpp
  vector<int> i_vec;
  for(usingned i=0; i != 100; ++i)
  {
      i_vec.push_back(i); // notice push_back(i)
  }
  #+END_SRC

  extra knowledge!!. we can also do it with a pointer!

  #+BEGIN_SRC cpp
  vector<int> i_vec;
  auto *p = &i_vec;
  for(usingned i=0; i != 100; ++i)
  {
      p->push_back(i); // notice p-> notation
      // since p is a pointer which points a vector object
      // p can use vector methods as well.
      // but when it's a pointer, we use '->' operator instead
      // in theory these guys are equlivalent:
      // i_vec.push_back(i) = p->push_back()
  }
  #+END_SRC

+ _PERFORMANCE_TIP_:
  1. list initializing vectors causes poor performance. avoid
     #+BEGIN_SRC cpp
     vector<int> i_vec{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}; // avoid !
     #+END_SRC

  2. adding values in runtime is more efficient. Do this instead !!
     #+BEGIN_SRC cpp
     vector<int> i_vec;
     for (unsigned x=1; x != 11; ++x)
     {
        i_vec.push_back(x);
     }
     #+END_SRC

  3. it is more efficient to initiazlize a vector with direct initialization
     when all values are the same
     #+BEGIN_SRC cpp
     vector<int> i_vec(10, 3); // i_vec = {3,3,3,3,3,3,3,3,3,3}
     #+END_SRC

  4. when you have *various* values and you need to initialize them, don't use
     vectors. use arrays instead !
     #+BEGIN_SRC cpp
     int array[10] = {12, 33, 2, 432, 11};
     #+END_SRC

  5. You initialized an array but you will add items ar runtime? no problem:
     #+BEGIN_SRC cpp
     int array[5] = {12, 33, 2, 432, 11};
     vector<int> i_vec;
     for (unsigned x=0;
          x != sizeof(array)/sizeof(array[0]);
          ++x)
     {
        i_vec.push_back(array[x]);
     }
     #+END_SRC
**** Day 11 (vectors continued and iterators)

+ other operations on *vectors*

  | method               | description                                       |
  |----------------------+---------------------------------------------------|
  | v.empty()            | true if vector is empty                           |
  | v.size()             | returns size of vector                            |
  | v.push_back()        |                                                   |
  | v[n] or v[n][m]      | returns the value on index                        |
  | v1 = v2              | copy v2 to v1                                     |
  | v1 = {a,b,c..}       | replaces values (not widely used)                 |
  | v1 == v2 or v1 != v2 | true if they are same size and have same elements |
  | <,<=,>,=>            |                                                   |
  |                      |                                                   |
+ we can use *range for* on vectors for _changing_ or _reaching_ values

  + reaching
  #+BEGIN_SRC cpp
  vector<int> i_vec{1,3,5,4,5,55,2};
  for ( auto item : i_vec)
  {
      std::cout << item << std::endl;
  }
  #+END_SRC

  + changing values (to _change_ purposes we use reference to values)
  #+BEGIN_SRC cpp
  vector<int> i_vec{1,3,5,4,5,55,2};
  for ( auto &item : i_vec)
  {
      item *= item // square the elemtn value
  }
  #+END_SRC
+ a big _mistake_ !!!
  new c++ programmers think that subscripting a vector actually adds elements.
  This is not true. Subscript operator _fetches_ as *existing element*. It does
  not +add+

  MISTAKE (same for strings. not only vectors)
  #+BEGIN_SRC cpp
  vector<int> i_vec; // i_vec has no elements. so it can't be subscriptable
  for (decltype(i_vec.size()) i=0;
       i != 100;
       ++i;)
  {
      i_vec[i] = i; // disaster!. i_vec has no elements
  }
  #+END_SRC

***** iterators
+ iterators are like pointers
+ they hold the information where a container (string,vector) *begins* and *ends*
  + vec.begin() -> begining address of vec container
  + vec.end() -> ending address of vec container
+ if a container is _empty_ then *begin()* and *end()* methods have _same_
  values. And they are called =off-the-end= iterators

  + off-the-end example
    #+BEGIN_SRC cpp
    str name; // name is an emtpy container
    if(name.begin() == name.end()) // on empty cont. begin() and end() are equal
    {
        pr << "value is empty"; // prints this
    }
    else
    {
        pr << "value is not empty";
    }
    return 0;
    #+END_SRC

  + non off-the-end example
    #+BEGIN_SRC cpp
    str name = "savolla"; // name is not emtpy container
    if(name.begin() == name.end())
    {
        pr << "value is empty";
    }
    else
    {
        pr << "value is not empty"; // prints this
    }
    return 0;
    #+END_SRC
+ iterators widely used for determining if an object is empty or not
+ dereferencing items inside a container through iterators
  #+BEGIN_SRC cpp
  str name("olexy");
  if (name.begin() != name.end())
  {
      auto iter = name.begin(); // defining an iterator.
      // notice it doesn't have * or & operators.
      // they just behave like pointers. and they contain addresses
      pr << *iter << char(0xA); // dereferending and prints 'o'
      *iter = toupper(*iter); // changes 'o' to 'O'
      pr << *iter; // prints 'O'
      iter++; // iterator now points to the second character 'l'
      *iter = toupper(*iter); // transforms 'l' to 'L'
  }
  #+END_SRC
+ like in "olexy" string, begin() points to the first character 'o' but it is
  not the case for end(). end() points to the termination character '\0'. we
  have to *decrement* the end() iterator before reaching last item of the string

+ A nice code example for *iterators*
  #+BEGIN_SRC cpp
  // checks if given string contains non-printable characters
  #include <iostream>
  using str = std::string;
  auto &print = std::cout;

  void stringControl(std::string x)
  {
  	for(auto iter = x.begin();
  	    iter != x.end();
  	    ++iter)
  	{
  		if(!isprint(*iter))
  		{
  			print << "given string contains non printable characters\n";
  			exit(0);
  		}
  	}
  }

  int main(void)
  {
  	str name;
  	getline(std::cin, name);
  	stringControl(name);
  	for(auto iterator = name.begin();
  	    iterator != name.end();
  	    ++iterator)
  	{
  		*iterator = toupper(*iterator);
  	}
  	print << name << char(0xA);
  	return 0;
  }
#+END_SRC

+ _PROTIP_
  in c++ for loops use *"!="* instead of *"<"* operator. This should be a habbit
  for a c++ programmer because some types (especially iterators) are not
  *subscriptable*.
  #+BEGIN_SRC cpp
  for (unsigned i = 0; i != 100; ++i) // okay in all cases
  for (unsigned i = 0; i < 100; ++i) // okay in some cases but not all
  #+END_SRC

+ iterators have their own types. But we don't always need to know the type of
  the iterator. We use *auto* keyword and compiler determines the type for us.
  But for curiosity here are iterator types:
  #+BEGIN_SRC cpp
  vector<int>::iterator vi_iter;
  vector<int>::const_iterator vic_iter;
  string::iterator s_iter;
  string::const_iterator cs_iter;
  #+END_SRC
  We could write these instead of *auto* keywords in previous examples

+ in *iterators* and *pointers* to call a _member function_ we can use two ways.
  *notice that methods are same on pointer and iterator*

  #+BEGIN_SRC cpp
  vector<str> name{"savola","liho","lena"};

  // using member functions through pointers
  auto *p = &name;
  pr << p->size() << char(0xA); // 3
  pr << (*p).size() << char(0xA); // 3

  // using member functions through iterators
  auto iter = name.begin();
  pr << iter->size() << char(0xA); // 6
  pr << (*iter).size() << char(0xA); // 6
  #+END_SRC

+ Use iterators on container types (vector, string..) as pointers
+ Use pointers on built-in types like int,double etc.

+ Only syntactical difference between *iterator* and *pointer* is when
  initializing them
  #+BEGIN_SRC cpp
  string name("savolla");
  unsigned i = 333;

  auto iter = name.begin() // no * or & operator is used. just adding .begin() or .end()
  auto *p = &i; // used * and & operator (traditional way)
  #+END_SRC
**** Day 12 (arrays)
+ array is a *data structure* not a type
+ holds data
+ similar to vector but =faster=
+ can't extend like vectors.. arrays are *static* in size. That means we can't
  add new items to arrays
+ but they are much much faster then vectors!!!
+ if you don't know how much elements you going to have then use *vector*
  instead of *array*
+ dimension of an array must be known at *compile time*. that means the
  *dimension* of an array is *constant*

  - *compile time*: when program is being compiled
  - *run time*: when program is being run

  + example
  #+BEGIN_SRC cpp
  const unsigned x = 2; // constant value
  unsigned y = 3; // non constant value

  int arr0[x]; // array of 2 int objects
  int arr1[y]; // error. y is not a constant

  string arr2[20]; // array of 20 string objects
  double *arr3[100]; // array of 100 double pointers

  int arr4[func()]; // legal if func() returns a constant value !
  #+END_SRC

+ we can't use *auto* keyword for initializing arrays
  #+BEGIN_SRC cpp
  auto arr0[9]; // error! you *must* use with type!
  #+END_SRC


+ compiler is smart enough to figure out how muuch elements an array has. So if
  you *list initialize* an array you don't need to specify the dimention.
  #+BEGIN_SRC cpp
  int arr0[6] = {2,4,2,1,5,6}; // this is okay.
  int arr1[6] = {3,4,2}; // legal. equivalent to arr1 = {3,4,2,0,0,0}
  int arr2[] = {2,4,2,1,5,6}; // legal. didn't specify the dimention. better
  int arr3[3] = {2,4,2,1,5,6}; // error. out of dimension
  #+END_SRC

+ char arrays are special in c++. We can initialize them like *strings*. But we
  always must remain an extra byte for the *null character* (\0) if we
  explicitly specify the dimension. Be carefull or just do not specify the dimension

  #+BEGIN_SRC cpp
  char name0[] = "savolla"; // legal. no explicit dim. null character added automatically
  char name1[6] = "savolla";  // illegal! no place for null character! dimension must be 7
  char name2[] = {'s','a','v','o','l','l','a'}; // legal. list init. no null char
  char name3[] = {'s','a','v','o','l','l','a','\0'}; // legal. list init. with null char
  // null character was unnecesary in last example
  #+END_SRC

  character arrays are /special/ because we can print their values directly.
  without a for loop

  #+BEGIN_SRC cpp
  char name0[] = "savolla";
  int arr1[] = {2,3,9,5};

  // with *range for*. Also prints null character. Ugly output. Avoid.
  for ( auto c : name )
  {
      std::cout << c;
  }

  // short way. pretty output (works just for character arrays)
  std::cout << name; // outputs: savolla

  // the following code returns only the address of arr1. To display content use for loop
  std::cout << arr1; // outputs: 0xf782ad0b (random address)

  return 0;
  #+END_SRC

+ an array can't be *initialized* or *assigned* with another array
  #+BEGIN_SRC cpp
  int arr0[] = {3,2,4,5};
  int arr1[] = arr0; // illegal! initializing with an array
  arr1 = arr0; // illegal! assigning to an array
  #+END_SRC

+ _PROTIP_
  some compilers might allow array init or assignment. But this is non-standard
  way of doing things in c++. _Do not initialize an array with another one_ even if
  compiler lets you to do

+ because of arrays hold just *objects* we can't have an array of *references*
+ some /syntactical torture/ of arrays

  - =stage01=: array which contains 10 int pointers
    #+BEGIN_SRC cpp
    int *arr[10];
    #+END_SRC

  - =stage02=: reference to an array
    #+BEGIN_SRC cpp
    int a[3] = {1,2,3}; // array's identifier is 'a'
    int (&b)[3] = a; // now array has a second name! 'b'

    std::cout << a[2]; // outputs 3
    std::cout << b[2]; // outputs 3
    #+END_SRC

  - =stage03=: array that points to an array of 10 ints
    #+BEGIN_SRC cpp
    // this one is a bit harder to understand.
    // I'm gonna update it when I get it
    int a[3] = {1,2,3};
    int (*parr)[3] = &a;
    #+END_SRC

+ in c++ *arrays* are actually *pointers*. When a program gets compiled the
  compiler converst the array to a pointer. And all operations we do with arrays
  are actually pointer operations at the back stage. Implement array data
  structure you will get it I promise :)

+ implementing .begin() and .end() on arrays like in vectors

  - the old way of doint this

    #+BEGIN_SRC cpp
    int arr[] = {0,1,2,3,4,5};

    // arr.begin()
    int *beg = arr; // didn't used address-of (&) because an array is already pointer

    // arr.end(). (notice address-of operator)
    int *end = &arr[6]; // there is no element on 6th index. so this is actually the end of arr

    // let's print all the content of arr to the screen using these pointers
    for (int *begin = arr; begin != end; ++begin)
    {
        std::cout << *begin << ",";
    }
    #+END_SRC

  - new way. error free and easier. c++11 feature
    #+BEGIN_SRC cpp
    int arr[] = {0,1,2,3,4,5};

    // arr.begin()
    int *beg = std::begin(arr); // begin() returns a pointer to the first element's address

    // arr.end()
    int *end = std::end(arr); // end() returns a pointer to the end of arr

    // let's print all the content of arr to the screen using these pointers
    for (int *begin = std::begin(arr); begin != end; ++begin)
    {
        std::cout << *begin << ",";
    }
    #+END_SRC

=left on "Pointer Arithmetic" of arrays=
**** Day 13 (expressions)

+ 1 + 2 = 3
  - 1,2 and 3 are *operands*
  - + and = are *operators*

+ operator /types/ in c++

    | operator type    | example | description          |
    |------------------+---------+----------------------|
    | unary operator   | *p, &a  | takes one operand    |
    | binary operator  | !=, *   | takes two operands   |
    | ternary operator | later   | takes three operands |

+ conditional operator (?:)
  #+BEGIN_SRC cpp
  unsigned grade = 96;

  string finalGrade = (grade > 60)? "pass" : "fail";
  // if grade is bigger than 60 then finalGrade is "pass" otherwise "fail"
  cout << finalGrade; // output: pass
  #+END_SRC

+ nested conditional operators
  #+BEGIN_SRC cpp
  unsigned grade = 96;
  string finalGrade = (grade > 90)? "high pass" : (grade > 60)? "pass" : "fail";
  cout << finalGrade; // output: high pass
  #+END_SRC

+ nested conditinal ops /quickly/ become unreadable. This is why it is a good
  idea to not to nest more than 3

+ using conditional ops inside in an output expression. notice how parenthesis
  are important !
  #+BEGIN_SRC cpp
  std::cout << ((grade > 60)? "pass" : "fail"); // outputs: pass
  std::cout << (grade > 60)? "pass" : "fail"; // outputs: 1 (true). because no parenthesis around exp
  std::cout << grade > 60 ? "pass" : "fail"; // error.
  #+END_SRC

+ bitwise operators

  | operator | name        | usage             |
  |----------+-------------+-------------------+
  | ~        | bitwise not | ~expr             |
  | <<       | left shift  | expr1 << expr2    |
  | >>       | right shift | expr1 >> expr2    |
  | &        | bitwise and | expr1 & expr2     |
  | \^       | bitwise xor | expr1 ^ expr2     |
  | pipe     | bitwise or  | expr1 pipe  expr2 |

  - biwise or is symbol '|' (couldn't display on org-mode tables)

+ use bitwise operators on *unsigned* values. Because of _signed bit_ behaves
  differently on different systems it might cause unexpected errors

+ when working with *bitwise* operators if operand is a "small integer" then it
  converted to a larger one (int) then operator does its job

  - left shift operator (<<)
    #+BEGIN_SRC cpp
    unsigned char bits = 0b00001010; // bits = 10; (1 byte)
    unsigned char bits2 = 0b10011011; // bits2 = 155; (1 byte)


    // example 1
    bits = (bits << 5);
    // first converted to int type:
    // 00001010 -> 00000000 00000000 00000000 00001010
    // left shift by 5:
    // 00000000 00000000 00000000 00001010 -> 00000000 00000000 00000001 01000000
    cout << 0b00000000000000000000000101000000  << "\x0a"; // 320
    cout << int(bits); // 320


    // example 2
    bits2 = (bits2 << 31);
    // first converted to int type:
    // 10011011 -> 00000000 00000000 00000000 10011011
    // left shift by 31:
    // 00000000 00000000 00000000 10011011 -> 10000000 00000000 00000000 00000000
    // most bits were discarded
    cout << 0b10000000000000000000000000000000 << "\x0a"; // 2147483648
    cout << int(bits2); // 2147483648

    #+END_SRC

  - right shift operator (>>)
    #+BEGIN_SRC cpp
    unsigned char bits3 = 0b10011011; // bits = 155; (1 byte)
    bits3 = (bits3 >> 3); // converted to int, shifted 3 bits to right and 3 bits were discarted
    cout << int(bits3); // output: 00000000 00000000 00000000 00010011
    #+END_SRC

  - bitwise not operator (~)
    #+BEGIN_SRC cpp
    char bits4 = 0b00101001;
    bits4 = (~bits4); // converted to int, inverted all bits
    // 00101001 -> 11111111 11111111 11111111 11010110
    // con't confuse ! those extra 1 bits will disappear and final value becomes:
    // 11010110
    #+END_SRC

  - and (&), or (|), xor(^) operators
    #+BEGIN_SRC cpp
    unsigned char a = 0b10011010;
    unsigned char b = 0b10100100;

    // and &
    cout << (a & b) << endl;
    /*
      in & operator we multiply bits. (1 * 0 = 0)

           a: 10011010
      &    b: 10100100
      -----------------
              10000000
    */

    // or |
    cout << (a | b) << endl;
    /*
      in | operator we sum bits. (1 + 0 = 1), (1 + 1 = 1)

           a: 10011010
      |    b: 10100100
      -----------------
              10111110
    */


    // xor ^
    cout << (a ^ b) << endl;
    /*
      xor likes to being *different*. (1 ^ 0 = 1), (1 ^ 1 = 0)

           a: 10011010
      ^    b: 10100100
      -----------------
              00111110
    */
    #+END_SRC

+ TODO: in what scenario bitwise operators are used in c++

+ good example for not to be confused logical operators and bitwise ones
  #+BEGIN_SRC cpp
  unsigned long x = 3, y = 7;
  cout << (x & y) << std::endl; // 3
  cout << (x | y) << std::endl; // 7
  cout << (x && y) << std::endl; // 1
  cout << (x || y) << std::endl; // 1
  /*
    logical operators returned  1 because none of those values were 0.
    everything was non-zero which means "true"
  */
  #+END_SRC

+ =sizeof()= operator returns the size of an *expression* or *type* in _bytes_

+ return value of =sizeof()= is _constant_. that means it can be used in *array
  dimension initialization*

  #+BEGIN_SRC cpp
  unsigned long long x;
  string arr[sizeof(x)]; // legal array dimension initialization
  cout << sizeof(x) << endl; // output: 8.
  cout << sizeof x << endl; // legal. output: 8. can be used without paranthesis

  cout << sizeof(int) << endl; // output: 4. can take type name itself
  cout << sizeof(4 + 3 / 12) << endl; // output: 4. arithmatic expression

  #+END_SRC

+ the *type* of return value sizeof() is *size_t*

+ *size_t* type is complicated. it's actually a synonim of *unsigned int* but
  it's value is different on another architectures/operating-systems.

+ _PROTIP_: using size_t as a variable type in programs is a *really bad idea*
  #+BEGIN_SRC cpp
  size_t j = 3; // avoid!
  #+END_SRC

+ TODO: why strings and vectors have fixed size while arrays and other builtin
  type sizes are not

+ Getting size of a _vector_, _string_ and an _array_

  - =vector and string=: when *sizeof()* operator used with a vector, the returned value is
    not a true value. in my system it's 24 bytes no mather how _long_ or which
    _type_ the vector is. Same thing applies on *strings*

    #+BEGIN_SRC cpp
    std::vector<int> i_vec{3,33,23,389,3};
    std::vector<string> s_vec{"jfkd","uıre","uıf"};
    std::string a = "savolla";

    cout << sizeof(i_vec) << endl; // output: 24 (in my system). expected result was 5
    cout << sizeof(s_vec) << endl; // output: 24 (in my system). expected result was 3
    cout << sizeof(a) << endl; // output: 32 (in my system). expected result was 7
    #+END_SRC

    As we saw before the *size* of _vectors_ and _strings_ can be archieved by
    using *.size()* method

    #+BEGIN_SRC cpp
    std::vector<int> i_vec{3,33,23,389,3};
    std::vector<string> s_vec{"jfkd","uıre","uıf"};
    std::string a = "savolla";

    cout << i_vec.size() << endl; // output: 5
    cout << s_vec.size() << endl; // output: 3
    cout << a.size() << endl; // output: 7
    #+END_SRC

  - =array=: As expected, getting size of an array is *werird* in c++. We can't
    use .size() method on arrays. and remember *sizeof()* returns size in *bytes*.
    To get size of an array we will use simple trick

    #+BEGIN_SRC cpp
    int arr[]{1,4,4,3,4,5,56};

    cout << sizeof(arr) << endl; // int is 4 bytes. arr has 7 elements. output: 4*7 = 28
    cout << sizeof(*arr) << endl; // arrays were pointers. *arr returns first element. output: 4(size of 1)
    cout << sizeof(arr)/sizeof(*arr) << endl; // 28/4 = 7.. weirdo!
    // arrays are assholes.
    #+END_SRC

**** Day 14 (expressions continued)

+ =comma operator= is a cool operator that mostly used in *for loop*

  - if you want to change more that one value at the _same time__, comma operator
    is your friend
  - even though we can define more than one counter inside a for loop
    #+BEGIN_SRC cpp
    // notice we used commas in first part and last part of the for loop.
    // we can also use comma inside second part of the for loop
    for(unsigned i=9, j=30;
        i != j;
        i += 2, j += 1)
    {
        cout << i << "\x2c\x20" << j << "\x0a";
    }
    #+END_SRC

  - we can also use comma in =conditional operators=
  - TODO: why does code also executes false conditions?
    #+BEGIN_SRC cpp
    int x = 3;
    x? /*do this*/, /*and this*/ : /*do this if false*/, /*is this bug? also works if true*/
    #+END_SRC
**** Day 15 (statements)
+ *null statement*
  #+BEGIN_SRC cpp
  ; // null statement
  {} // null block
  #+END_SRC

  - example usage
    #+BEGIN_SRC cpp
    while (cin >> input && input != "exit")
    {
        ; // every null statelement should have a comment
    }

    // or
    {}
    #+END_SRC

  - adding comments after a *null statement* improves readability

  - extra semicolons are legal but not always harmless

    - harmless extra semicolons
      #+BEGIN_SRC cpp
      unsigned a = 3;;;;
      #+END_SRC

      #+BEGIN_SRC cpp
      int main(void)
      {
           ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
          ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
          ;;;;;;;;;   ;;;;;;;;   ;;;;;;;;;;
         ;;;;;;;;;{}  ;;;;;;;{}  ;;;;;;;;;;
         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
      ;;;;                                   ;;;;;
      ;;;; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; ;;;;;
      ;;;;; ;;{{{{{{{{{{{{{}}}}}}}}}}}}};;;  ;;;;;
      ;;;;;; ;;/* TOTALLY LEGAL C++ PROGRAM !!*/;;
      ;;;;;;; ;;;;;;;;;;;;;;;;;;;;;;;;  ;;;;;;;;;;
       ;;;;;;;                        ;;;;;;;;;;;;
        ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
         ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

         return 0;
      }
      #+END_SRC

    - harmfull semicolon
      #+BEGIN_SRC cpp
      while (a != 6); // this causes infinite loop
      {
         ++a;
      }
      #+END_SRC
+ *switch case statement*
  - accepts only *constant integral* values as labels
    #+BEGIN_SRC cpp
    unsigned x = 3;
    unsigned char y;
    cin >> y;

    switch (y)
    {
        case 3.14159: // error. not integer value
            break;
        case x: // integral but not constant value
            break;
    }

    #+END_SRC

  - program that counts vowels and consonans in a word

    #+BEGIN_SRC cpp
    int main(void)
    {
        string word;
        unsigned vows;
        unsigned cons;
        while (getline(cin, word) && word != "exit")
        {
            for ( auto c : word )
            {
                switch(c)
                {
                    case 'a':case 'e':case 'i':case 'o':case 'u':
                        ++vows;
                        break; // do not forget break statment

                    default:
                        ++cons;
                        break;
                }
            }
        }
        cout << "vows: " << vows << endl;

        return 0;
    }
    #+END_SRC

    + Notice that we used *case* statements in one line. this is legal bacause c++
      is *free-type* language.

    + aaand.. do not forget *break* statment after each _case_ statement
    + adding *default* statement is a _good practice_ even if you don't need it.
      Empty *default* statement needs a *null statement*

    + to *define* variables inside *case* statements use _curly braces_
      #+BEGIN_SRC cpp
      switch (value)
      {
          case 3:
              /* do something */
              break;
          case 34: // pay attention! we have colons even if we have block
          {
              int a = 533; // defining a variable inside curly braces
          }
          default:
              ;; // empty statement to supply default
      }

      #+END_SRC
+ *for loop*
  - this form of for loop results an *infinite loop*
    #+BEGIN_SRC cpp
    for (int i=0;;++i)
    {
        cout << i << endl;
    }
    #+END_SRC

  - this example is also infinite loop but makes sence
    #+BEGIN_SRC cpp
    vector<int> i_vec;
    for (int i; cin >> i; ) // for loops not just accepting *comparison* expressions
    {
        i_vec.push_back(i);
    }

    #+END_SRC

  - range for loops introduced in c++11. They can be used only with *containers*
    such as /arrays/, /vectors/ and /strings/

  - in for loops we sometimes might not know the type of the container. In those
    situations the *auto* keyword should be used
    #+BEGIN_SRC cpp
    for ( auto c : array )
    {
        // do something
    }
    #+END_SRC
**** Day 16 (statements try-catch-throw)
- By using *stdexcept* header we are able to use handlers
- *try* block
- *throw* expression
- *catch* function
- TODO: study try-catch
**** Day 17 (functions)
+ usage of postfix operators

  #+BEGIN_SRC cpp
  int factorial(unsigned int x)
  {
      unsigned int result = 1;
      while(result > 1)
      {
          result *= x--; // notice postfix --
          // x is multiplied with restult and assigned to result. at last decremented
      }
      return result;
  }
  #+END_SRC

+ we can't *compound define* arguments in function
  #+BEGIN_SRC cpp
  void f0(int a,b,c,d) // illegal!!
  void f0(int a, int b, int c, int d) // okay
  #+END_SRC

+ functions can't *directly* return *array* of *function* type. Instead it can
  return a _pointer_ to the array or a function (details for later)

+ *local static objects* are crazy things.. Their value is remembered after
  function is ended. When calling the same function again the static object's
  value will be still there.

  #+BEGIN_SRC cpp
  void a()
  {
      // char and x are static variables. Their values will always be remembered
      static char cntr = 1; // I want to print the following only once
      if(cntr == 1)
      {
          cout << "static\tordinary" << endl;
          --cntr; // cntr becomes 0. Hence this print won't be executed anymore
      }

      static unsigned x = 0; // x will always be immortal in this scope
      unsigned y = 0; // y is mortal
      ++x, ++y; // notice the comma operator
      cout << x << "\x09" << y << endl; // 0x09 = '\t'
  }

  int main(void)
  {
      a();
      a();
      a();
      a();
      a();

      return 0;
  }
  #+END_SRC

  #+RESULTS:

  : static  ordinary
  : 1       1
  : 2       1
  : 3       1
  : 4       1
  : 5       1

+ function declarations = function prototype
+ prototypes go inside header files.
+ to change an object value with a function there are two ways

  1. using a *pointer* (C programmer). =less efficient=
     #+BEGIN_SRC cpp
     void reset_ptr(int *p)
     {
         *p = 0;
     }

     int main(void)
     {
         int x = 3;
         int *ptr = &x; // defining extra pointer
         reset_ptr(ptr);
         std::cout << x << std::endl; // output: 0

         return 0;
     }
     #+END_SRC

  2. using a *reference* (C++ programmer) =more efficient=
     #+BEGIN_SRC cpp
     void reset_ref(int *r)
     {
         r = 0;
     }

     int main(void)
     {
         int x = 3;
         reset_ref(x);
         std::cout << x << std::endl; // output: 0

         return 0;
     }
     #+END_SRC
+ swap function using reference parameters
  #+BEGIN_SRC cpp
  void swap(int &x, int &y)
  {
      int tmp;
      tmp = x;
      x = y;
      y = tmp;
  }
  #+END_SRC
+ _PROTIP:_ when a *reference* passed as parameter into a function and its value
  is not chaning inside the function, pass it as *const*

  #+BEGIN_SRC cpp
  bool isShorter(const string s1, const string s2)
  {
      return (s1.size() < s2.size());
  }
  #+END_SRC

+ TODO: continue to functions chapter. You left it at the middle
**** Day 18 (class)

** reading lists
*** Reading List to Become a Professional
**** Job Interview Prep
1. Cracking the Coding Interview: 189 Programming Questions and Solutions
2. Programming Interviews Exposed: Coding Your Way Through the Interview
3. Introduction to Algorithms
4. The Algorithm Design Manual
5. Effective Java
6. Concurrent Programming in Java: Design Principles and Pattern
7. Modern Operating Systems
8. Programming Pearls
9. Discrete Mathematics for Computer Scientists
**** Junior Software Engineer Reading List
***** Read This First
1. Pragmatic Thinking and Learning: Refactor Your Wetware
***** Fundementals
1. Code Complete 2
2. Software Estimation: Demystifying the Black Art
3. Software Engineering: A Practitioner's Approach
4. Refactoring: Improving the Design of Existing Code
5. Coder to Developer: Tools and Strategies for Delivering Your Software
6. Perfect Software: And Other Illusions about Testing
7. Getting Real: The Smarter, Faster, Easier Way to Build a Successful Web Application
8. Understanding Professional Software Environments
9. Agile Software Development: The Cooperative Game
10. Software Project Survival Guide
11. The Best Software Writing I: Selected and Introduced by Joel Spolsky
12. Debugging the Development Process: Practical Strategies for Staying Focused, Hitting Ship Dates, and Building Solid Teams
13. Rapid Development: Taming Wild Software Schedules
14. Peopleware: Productive Projects and Teams
***** Mentality
1. Slack: Getting Past Burnout, Busywork, and the Myth of Total Efficiency
2. Against Method
3. The Passionate Programmer: Creating a Remarkable Career in Software Development

***** History
1. The Mythical Man-Month: Essays on Software Engineering
2. Computing Calamities: Lessons Learned from Products, Projects, and Companies That Failed
3. The Deadline: A Novel About Project Management

**** Mid Level Software Engineer Reading List
***** Read This First
1. Personal Development for Smart People: The Conscious Pursuit of Personal Growth

***** Fundementals
1. The Clean Coder: A Code of Conduct for Professional Programmers
2. Clean Code: A Handbook of Agile Software Craftsmanship
3. Solid Code
4. Code Craft: The Practice of Writing Excellent Code
5. Software Craftsmanship: The New Imperative
6. Writing Solid Code

***** Software Design
1. Head First Design Patterns: A Brain-Friendly Guide
2. Design Patterns: Elements of Reusable Object-Oriented Software
3. Domain-Driven Design: Tackling Complexity in the Heart of Software
4. Domain-Driven Design Distilled
5. Design Patterns Explained: A New Perspective on Object-Oriented Design
6. Design Patterns in C# - Even though this is specific to C# the pattern can be used in any OO language.
7. Refactoring to Patterns

***** Software Engineering Skill Sets
1. Building Microservices: Designing Fine-Grained Systems
2. Software Factories: Assembling Applications with Patterns, Models, Frameworks, and Tools
3. NoEstimates: How To Measure Project Progress Without Estimating
4. Object-Oriented Software Construction
5. The Art of Software Testing
6. Release It!: Design and Deploy Production-Ready Software
7. Working Effectively with Legacy Code
8. Test Driven Development: By Example

***** Databases
1. Database System Concepts
2. Database Management Systems
3. Foundation for Object / Relational Databases: The Third Manifesto
4. Refactoring Databases: Evolutionary Database Design
5. Data Access Patterns: Database Interactions in Object-Oriented Applications

***** User Experience
1. Don't Make Me Think: A Common Sense Approach to Web Usability
2. The Design of Everyday Things
3. Programming Collective Intelligence: Building Smart Web 2.0 Applications
4. User Interface Design for Programmers
5. GUI Bloopers 2.0: Common User Interface Design Don'ts and Dos

***** Mentality
1. The Productive Programmer
2. Extreme Programming Explained: Embrace Change
3. Coders at Work: Reflections on the Craft of Programming
4. Facts and Fallacies of Software Engineering

***** History
1. Dreaming in Code: Two Dozen Programmers, Three Years, 4,732 Bugs, and One Quest for Transcendent Software
2. New Turning Omnibus: 66 Excursions in Computer Science
3. Hacker's Delight
4. The Alchemist
5. Masterminds of Programming: Conversations with the Creators of Major Programming Languages
6. The Information: A History, A Theory, A Flood

***** Specialist Skills
1. Peter Norton's Assembly Language Book for the IBM PC
2. Expert C Programming: Deep C Secrets
3. Enough Rope to Shoot Yourself in the Foot: Rules for C and C++ Programming
4. The C++ Programming Language
5. Effective C++: 55 Specific Ways to Improve Your Programs and Designs
6. More Effective C++: 35 New Ways to Improve Your Programs and Designs
7. More Effective C#: 50 Specific Ways to Improve Your C#
8. CLR via C#
9. Mr. Bunny's Big Cup o' Java
10. Thinking in Java
11. JUnit in Action
12. Functional Programming in Scala
13. The Art of Prolog: Advanced Programming Techniques
14. The Craft of Prolog
15. Programming Perl: Unmatched Power for Text Processing and Scripting
16. Dive into Python 3

**** Senior Level Software Engineer Reading List
***** Read This First
1. Mastery: The Keys to Success and Long-Term Fulfillment

***** Fundamentals
1. Patterns of Enterprise Application Architecture
2. Enterprise Integration Patterns: Designing, Building, and Deploying Messaging Solutions
3. Enterprise Patterns and MDA: Building Better Software with Archetype Patterns and UML
4. Systemantics: How Systems Work and Especially How They Fail
5. Rework
6. Writing Secure Code
7. Framework Design Guidelines: Conventions, Idioms, and Patterns for Reusable .NET Libraries

***** Development Theory
1. Growing Object-Oriented Software, Guided by Tests
2. Object-Oriented Analysis and Design with Applications
3. Introduction to Functional Programming
4. Design Concepts in Programming Languages
5. Code Reading: The Open Source Perspective
6. Modern Operating Systems
7. Extreme Programming Explained: Embrace Change
8. The Elements of Computing Systems: Building a Modern Computer from First Principles
9. Code: The Hidden Language of Computer Hardware and Software

***** Philosophy of Programming
1. Making Software: What Really Works, and Why We Believe It
2. Beautiful Code: Leading Programmers Explain How They Think
3. The Elements of Programming Style
4. A Discipline of Programming
5. The Practice of Programming
6. Computer Systems: A Programmer's Perspective
7. Object Thinking
8. How to Solve It by Computer
9. 97 Things Every Programmer Should Know: Collective Wisdom from the Experts

***** Mentality
1. Hackers and Painters: Big Ideas from the Computer Age
2. The Intentional Stance
3. Things That Make Us Smart: Defending Human Attributes In The Age Of The Machine
4. The Back of the Napkin: Solving Problems and Selling Ideas with Pictures
5. The Timeless Way of Building
6. The Soul Of A New Machine
7. WIZARDRY COMPILED
8. YOUTH
9. Understanding Comics: The Invisible Art

***** Software Engineering Skill Sets
1. Software Tools
2. UML Distilled: A Brief Guide to the Standard Object Modeling Language
3. Applying UML and Patterns: An Introduction to Object-Oriented Analysis and Design and Iterative Development
4. Practical Parallel Programming
5. Past, Present, Parallel: A Survey of Available Parallel Computer Systems
6. Mastering Regular Expressions
7. Compilers: Principles, Techniques, and Tools
8. Computer Graphics: Principles and Practice in C
9. Michael Abrash's Graphics Programming Black Book
10. The Art of Deception: Controlling the Human Element of Security
11. SOA in Practice: The Art of Distributed System Design
12. Data Mining: Practical Machine Learning Tools and Techniques
13. Data Crunching: Solve Everyday Problems Using Java, Python, and more.

***** Design
1. The Psychology Of Everyday Things
2. About Face 3: The Essentials of Interaction Design
3. Design for Hackers: Reverse Engineering Beauty
4. The Non-Designer's Design Book

***** History
1. Micro-ISV: From Vision to Reality
2. Death March
3. Showstopper! the Breakneck Race to Create Windows NT and the Next Generation at Microsoft
4. The PayPal Wars: Battles with eBay, the Media, the Mafia, and the Rest of Planet Earth
5. The Business of Software: What Every Manager, Programmer, and Entrepreneur Must Know to Thrive and Survive in Good Times and Bad
6. In the Beginning...was the Command Line

***** Specialist Skills
1. The Art of UNIX Programming
2. Advanced Programming in the UNIX Environment
3. Programming Windows
4. Cocoa Programming for Mac OS X
5. Starting Forth: An Introduction to the Forth Language and Operating System for Beginners and Professionals
6. lex & yacc
7. The TCP/IP Guide: A Comprehensive, Illustrated Internet Protocols Reference
8. C Programming Language
9. No Bugs!: Delivering Error Free Code in C and C++
10. Modern C++ Design: Generic Programming and Design Patterns Applied
11. Agile Principles, Patterns, and Practices in C#
12. Pragmatic Unit Testing in C# with NUnit

**** DevOps Reading List
1. Time Management for System Administrators: Stop Working Late and Start Working Smart
2. The Practice of Cloud System Administration: DevOps and SRE Practices for Web Services
3. The Practice of System and Network Administration: DevOps and other Best Practices for Enterprise IT
4. Effective DevOps: Building a Culture of Collaboration, Affinity, and Tooling at Scale
5. DevOps: A Software Architect's Perspective
6. The DevOps Handbook: How to Create World-Class Agility, Reliability, and Security in Technology Organizations
7. Site Reliability Engineering: How Google Runs Production Systems
8. Cloud Native Java: Designing Resilient Systems with Spring Boot, Spring Cloud, and Cloud Foundry
9. Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
10. Migrating Large-Scale Services to the Cloud

**** Entrepreneur Reading List
1. Disrupted: My Misadventure in the Start-Up Bubble
2. The Phoenix Project: A Novel about IT, DevOps, and Helping Your Business Win
3. The E-Myth Revisited: Why Most Small Businesses Don't Work and What to Do About It
4. The Art of the Start: The Time-Tested, Battle-Hardened Guide for Anyone Starting Anything
5. The Four Steps to the Epiphany: Successful Strategies for Products that Win
6. Permission Marketing: Turning Strangers into Friends and Friends into Customers
7. Ikigai
8. Reality Check: The Irreverent Guide to Outsmarting, Outmanaging, and Outmarketing Your Competition
9. Bootstrap: Lessons Learned Building a Successful Company from Scratch
10. The Marketing Gurus: Lessons from the Best Marketing Books of All Time
11. Content Rich: Writing Your Way to Wealth on the Web
12. The Web Startup Success Guide
13. The Best of Guerrilla Marketing: Guerrilla Marketing Remix
14. From Program to Product: Turning Your Code into a Saleable Product
15. This Little Program Went to Market: Create, Deploy, Distribute, Market, and Sell Software and More on the Internet at Little or No Cost to You
16. The Secrets of Consulting: A Guide to Giving and Getting Advice Successfully
17. The Innovator's Solution: Creating and Sustaining Successful Growth
18. Startups Open Sourced: Stories to Inspire and Educate
19. In Search of Stupidity: Over Twenty Years of High Tech Marketing Disasters
20. Do More Faster: TechStars Lessons to Accelerate Your Startup
21. Content Rules: How to Create Killer Blogs, Podcasts, Videos, Ebooks, Webinars (and More) That Engage Customers and Ignite Your Business
22. Maximum Achievement: Strategies and Skills That Will Unlock Your Hidden Powers to Succeed
23. Founders at Work: Stories of Startups' Early Days
24. Blue Ocean Strategy: How to Create Uncontested Market Space and Make Competition Irrelevant
25. Eric Sink on the Business of Software
26. Words that Sell: More than 6000 Entries to Help You Promote Your Products, Services, and Ideas
27. Anything You Want
28. Crossing the Chasm: Marketing and Selling High-Tech Products to Mainstream Customers
29. The Innovator's Dilemma: The Revolutionary Book that Will Change the Way You Do Business
30. Tao Te Ching
31. Philip & Alex's Guide to Web Publishing
32. The Tao of Programming
33. Zen and the Art of Motorcycle Maintenance: An Inquiry into Values
34. The Inmates Are Running the Asylum: Why High Tech Products Drive Us Crazy and How to Restore the Sanity

**** Computer Science Grad School Reading List
1. All the Mathematics You Missed: But Need to Know for Graduate School
2. Introductory Linear Algebra: An Applied First Course
3. Introduction to Probability
4. The Structure of Scientific Revolutions
5. Science in Action: How to Follow Scientists and Engineers Through Society
6. Proofs and Refutations: The Logic of Mathematical Discovery
7. What Is This Thing Called Science?
8. The Art of Computer Programming
9. The Little Schemer
10. The Seasoned Schemer
11. Data Structures Using C and C++
12. Algorithms + Data Structures = Programs
13. Structure and Interpretation of Computer Programs
14. Concepts, Techniques, and Models of Computer Programming
15. How to Design Programs: An Introduction to Programming and Computing
16. A Science of Operations: Machines, Logic and the Invention of Programming
17. Algorithms on Strings, Trees, and Sequences: Computer Science and Computational Biology
18. The Computational Beauty of Nature: Computer Explorations of Fractals, Chaos, Complex Systems, and Adaptation
19. The Annotated Turing: A Guided Tour Through Alan Turing's Historic Paper on Computability and the Turing Machine
20. Computability: An Introduction to Recursive Function Theory
21. How To Solve It: A New Aspect of Mathematical Method
22. Types and Programming Languages
23. Computer Algebra and Symbolic Computation: Elementary Algorithms
24. Computer Algebra and Symbolic Computation: Mathematical Methods
25. Commonsense Reasoning
26. Using Language
27. Computer Vision
28. Alice's Adventures in Wonderland
29. Gödel, Escher, Bach: An Eternal Golden Braid

* Foreign Languages
** English
*** unknown words
- =acommodation=           konaklama
- =across=                 karşısında
- =adhare=                 bağlı
- =advantage=              avantaj
- =allude=                 ima etmek
- =ambition=               hırs
- =annually=               yıllık
- =arrogance=              kibir
- =aside=                  bir kenara
- =aspect=                 yön (kitap her *yön*'den iyidi)
- =assessing=              değerlendirmek
- =attic=                  çatı katı
- =audible=                duyulabilir
- =auxiliary=              yardımcı
- =beware=                 dikkat et
- =bottleneck=             darboğaz
- =boundary=               sınır
- =brittle=                kırılgan
- =cater=                  sağlamak
- =certain=                belli
- =coherent=               tutarlı
- =comprehencive=          kapsamlı
- =comprise=               içermek
- =concise=                özlü, kısa
- =concrete=               beton
- =condense=               condense
- =conductor=              iletken
- =conservative=           muhafazakar
- =consideration=          düşünce
- =constipated=            kabız
- =constitute=             oluşturmak
- =constraint=             kısıtlama
- =contenteditable=        memnun
- =convey=                 iletmek
- =cram=                   tıkmak
- =crook=                  hırsız
- =curated=
- =deafening=              sağır edici
- =dedicated=              adanmış
- =delimeter=              sınırlayıcı
- =depics=                 ifade etmek, göstermek
- =depict=                 göstermek
- =despite=                rağmen
- =differing=              farklı
- =diligence=              çalışkanlık
- =discourse=              söyleşi
- =dispatch=               sevk etmek
- =ease off=               gevşemek, hafiflemek
- =emerge=                 ortaaya çıkmak
- =entrepreneurial=        girişimci
- =eradicate=              kökünü kurutmak
- =estate=                 arazi
- =estimate=               tahmin
- =evidently=              belli ki
- =excerpt=                alıntı
- =exhibiting=             sergilemek
- =expose=                 maruz kalma
- =facade=                 cephe (evin dış cehesi)
- =faul=                   faul
- =fellow=                 adam (?)
- =fluency=                akıcılık
- =forward=                ileri
- =frontier=               sınır
- =fuzzy=                  belirsiz
- =genuine=                gerçek, hakiki
- =gestate=                gebelik
- =go round=               dolaşmak
- =hardboard=              sunta
- =headed=                 başlı
- =hinder=                 engellemek
- =houseing-department=    konut-bölüm
- =however=                ancak
- =however=                ancak
- =idiom=                  deyim
- =inextricable=           içinden çıkılmaz
- =initiative=             girişim
- =insulator=              yalıtkan
- =interfere=              karışmak (engellemek anlamında)
- =intermingling=          birbirine karıştırmak
- =intern=                 asistan
- =intertwined=            iç içe
- =intimately=             yakından
- =intricacy=              karmaşa
- =intuitive=              sezgisel
- =judiciously=            akıllıca
- =lattice=                kafes
- =lawn=                   çim
- =letter box=             mektup kutusu
- =loan=                   kredi
- =masquarading=           maskelemek
- =mud=                    çamur
- =muffled=                örtülü
- =occasionally=           bazen
- =oppurtunity=            fırsat
- =ossify=                 kemikleşmek
- =outlined=               özetlenen
- =pejorative=             aşağılayıcı
- =persuade=               ikna etmek
- =pinnacle=               çukur
- =pins out=               iğnelemek
- =precise=                kesin
- =precise=                kesin
- =precisely=              kesin olarak
- =predicate=              yüklem
- =premise=                öncül
- =prescient=              ileri görüşlü
- =prethora=               bolluk
- =privilege=              ayrıcalık
- =profound=               derin (konu olarak)
- =prominent=              belirgin
- =proposal=               öneri
- =query=                  sorgu
- =quintessentially=       özetle
- =recipient=              alıcı
- =relational=             bağlantılı
- =regardless=             ne olursa olsun
- =relevance=              alaka
- =responsive=             duyarlı
- =retrieve=               geri almak
- =rigorous=               titiz
- =rigorously=             titizlikle
- =rough=                  kaba
- =rough=                  kaba
- =row=                    sıra (matrisin satırı)
- =scattered=              dağılmış
- =scruple=                vicdan
- =seldom=                 nadiren
- =self-reliant=           kendine güvenen
- =semblance=              görünüş
- =several=                birkaç
- =shrug=                  omuz silkmek
- =snuggle=                sokulmak
- =stairway=               merdiven
- =statement=              ifade
- =stitch=                 dikiş/dikmek
- =subsequent=             sonraki
- =superstition=           batıl inanç
- =supervisor=             gözetmen/yönetici
- =suppress=               bastırmak
- =surgeon=                cerrah
- =tenet=                  ilke
- =therefore=              bu nedenle
- =thesaurus=              eş anlamlılar sözlüğü
- =trailed=                izledi
- =unbolted=               sürgüsü açılmış
- =uncharted=              keşvedilmemiş
- =unconventional=         alışılmadık
- =undertaken=             üstlenilen
- =unselfish=              özverili
- =venue=                  buluşma yeri
- =vivid=                  canlı
- =vocabulary=             kelime bi+ gisi
- =walkway=                yürüyüş yolu
- =wrap up=                sarmak (ambalajlamak anlamında)
** Русский
*** неизвестные слова
* Facts
- most IoT devices receive updates that brake their functionality over time. so you will need to buy a new version. Apple is the first company that used this marketing strategy
* Schedule
** 06:06 :morning_ritual:
*** stretch
- neck
- arms
- legs
*** vocabulary
**** english
- memorize unknown words in notitia
**** russian
- memorize unknown words in notitia
**** japan
***** hiragana
- [[https://drlingua.com/japanese/games/kana-bento/][play this]]
***** katakana
- [[https://drlingua.com/japanese/games/kana-bento/][play this]]
***** kanji
- learn 3 kanjies
- draw each kanji
- repeat learned kanjies
*** flash cards drill
**** regex
**** algorithms
**** data structures
** 07:07 :work:
*** embedded systems
**** electronics
***** read one chapter
=NOTE= review notes first
- [ ] the art of electronics
- [ ] digital fundamentals floyd
- [ ] hardware design know it all
**** software
***** read one chapter
- [-] making embedded systems
- [-] programming embedded systems
- [-] the art of concurrency
- [ ] embedded-primer
**** Qt
***** read one chapter
- learning Qt
**** video course
***** FastBit
- [-] embedded C =usecase of static with functions=
- [ ] cortex m4
- [ ] microcontrollers 1
- [ ] microcontrollers 2
- [ ] RTOS
- [ ] DMA
- [ ] bootloader
- [ ] embedded linux
- [ ] linux device drivers
***** Quantum Leaps
- [ ] lesson 0
- [ ] lesson 1
- [ ] lesson 2
- [ ] lesson 3
- [ ] lesson 4
- [ ] lesson 5
- [ ] lesson 6
- [ ] lesson 7
- [ ] lesson 8
- [ ] lesson 9
- [ ] lesson 10
- [ ] lesson 11
- [ ] lesson 12
- [ ] lesson 13
- [ ] lesson 14
- [ ] lesson 15
- [ ] lesson 16
- [ ] lesson 17
- [ ] lesson 18
- [ ] lesson 19
- [ ] lesson 20
- [ ] lesson 21
- [ ] lesson 22
- [ ] lesson 23
- [ ] lesson 24
- [ ] lesson 25
- [ ] lesson 26
- [ ] lesson 27
- [ ] lesson 28
- [ ] lesson 29
- [ ] lesson 30
- [ ] lesson 31
- [ ] lesson 32
- [ ] lesson 33
- [ ] lesson 34
- [ ] lesson 35
- [ ] lesson 36

*** programming language
**** C
***** read one chapter
- [ ] The C programming Language
- [ ] Learn C the Hard Way
- [ ] Practical C
- [ ] Understanding and Using C Pointers
- [ ] deep C secrets
***** codewars kata
- review notes
- solve kata
***** video lectures
- [[https://www.youtube.com/watch?v=ypG9W33LOTk&list=PLfqABt5AS4FmErobw8YyTwXDUE5nPH5lH][Code Vault]]
**** C++
***** read one chapter
- C++ Primer (bone book)
- Object Oriented Programming in C++ by Robert Lafore
- Effective C++
***** codewars kata
- review notes
- solve kata
**** Rust
***** read one chapter
- embedded rust discovery
- the embedded rust book
- the embedonomicon
***** codewars kata
- review notes
- solve kata
**** ARM
***** read one chapter
- arm assembly language
- arm baremetal ebook
***** codewars kata
- review notes
- solve a kata
** 10:10 :break:
- walk the doggo
*** workoup when back
  - [ ] chest day
  - [ ] arm day
  - [ ] leg day
  - [ ] off day
** 12:12 :lunch:
** 13:13 :work:
- [-] Probability and Statistics
  - [X] Cumulative Distribution Funcion (CDF)
  - [X] Median / Mod
  - [X] Variance And Standard Deviation
  - [ ] Functions of Random Variables
  - [ ] Continuous Random Variables
- [ ] ERP
- [-] Betik Diller
  - [-] scikit learn
  - [ ] flask
- [ ] Wireless Communication
  - [ ] wireless slide 7
  - [ ] wireless slide 8
  - [ ] wireless slide 9
** 17:17 :break:
*** jamming
- jam through backing tracks on youtube
*** gaming
**** retroarch
- [ ] ninja gaiden III
- [ ] Super Mario 3
- [ ] Super Mario 2
**** path of exile
*** other
** 17:47 :study:
*** software engineering
**** read one chapter
- [-] dive into design patterns
- [-] domain driven design
- [-] dive into refactoring
- [-] clean code
- [-] code complete
- [ ] object oriented analysis and design
- [ ] working effectively with legacy code
** 21:21 :finish:
*** reading
- [ ] outliers
- [ ] siddhardtha
- [ ] semerkant
- [ ] yer altından notlar
- [ ] bir delinin anı defteri
- [ ] zor kişiliklerle yaşamak
- [-] suç ve ceza
*** watch movie
- [X] [[https://www.youtube.com/watch?v=onM1l2F-2o4][Zeitgeist III]]
